{"version":3,"sources":["shared/components/ButtonCircularProgress.js","shared/components/HighlightedInformation.js","shared/functions/smoothScrollTop.js","shared/components/PropsRoute.js","shared/functions/useLocationBlocker.js","shared/components/NavigationDrawer.js","shared/functions/shadeColor.js","shared/components/Bordered.js","logged_in/components/dashboard/Settings1.js","shared/components/HelpIcon.js","logged_in/components/dashboard/Settings2.js","logged_in/components/dashboard/SettingsArea.js","shared/components/EnhancedTableHead.js","shared/functions/stableSort.js","shared/functions/getSorting.js","shared/components/ConfirmationDialog.js","logged_in/components/dashboard/UserDataArea.js","logged_in/components/dashboard/AccountInformationArea.js","logged_in/components/dashboard/StatisticsArea.js","logged_in/components/dashboard/AvatarSelection.js","logged_in/components/dashboard/Dashboard.js","logged_in/components/grid/selectmenu/SelectMenu.jsx","logged_in/components/grid/actionmenu/ActionMenu.jsx","logged_in/components/grid/newdashboard/NewDashboard.jsx","logged_in/components/grid/table/Table.jsx","logged_in/components/grid/card/StockInfos.jsx","logged_in/components/grid/Card.jsx","logged_in/components/grid/card/MainCard.jsx","logged_in/components/grid/note/Note.jsx","logged_in/components/grid/swot/Swot.jsx","logged_in/components/grid/indicators/TransferList.jsx","logged_in/components/grid/indicators/Indicators.jsx","shared/components/NoData.jsx","logged_in/components/grid/LineChart/LineChartCard.js","logged_in/components/grid/BarChart/BarChartCard.js","logged_in/components/grid/multicharts/ChartSettings.jsx","logged_in/components/grid/multicharts/Multicharts.jsx","logged_in/components/grid/esg/Esg.jsx","logged_in/components/grid/statistics/StatisticsSettings.jsx","logged_in/components/grid/statistics/Statistics.jsx","logged_in/components/grid/news/News.jsx","logged_in/components/grid/gridProps.js","logged_in/components/grid/Grid.jsx","shared/components/VertOptions.js","shared/components/SelfAligningImage.js","logged_in/components/posts/PostContent.js","shared/components/ActionPaper.js","shared/components/ImageCropperDialog.js","logged_in/components/posts/AddPostOptions.js","logged_in/components/posts/AddPost.js","logged_in/components/posts/Posts.js","shared/components/ColorfulChip.js","shared/functions/currencyPrettyPrint.js","logged_in/components/subscription/SubscriptionTable2.js","logged_in/components/subscription/PortifolioChart.jsx","logged_in/components/subscription/SubscriptionInfo.js","logged_in/components/subscription/AddOperationDialog.jsx","logged_in/components/subscription/Subscription.js","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/SideDrawer.js","logged_in/components/navigation/Balance.js","logged_out/components/register_login/loginSlice.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/dummy_data/persons.js","logged_in/components/subscription/LazyLoadAddBalanceDialog.js","logged_in/components/Main.js"],"names":["withStyles","theme","circularProgress","color","palette","secondary","main","withTheme","props","size","classes","pl","display","thickness","className","backgroundColor","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","children","classNames","variant","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","window","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","PropsRoute","component","rest","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","getLocationId","pathname","search","hash","useLocationBlocker","history","useHistory","useEffect","block","location","action","withWidth","closeIcon","marginRight","headSection","width","blackList","common","black","height","noDecoration","textDecoration","open","onClose","anchor","menuItems","selectedItem","onresize","isWidthUp","style","paddingTop","paddingBottom","justifyContent","disableGutters","onClick","aria-label","map","element","link","to","button","selected","name","disableRipple","disableTouchRipple","icon","primary","shadeColor","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","wrapper","borderColor","greyed","disableVerticalPadding","disableBorderRadius","paddingLeft","paddingRight","inputOptions","numberInput","numberInputInput","dBlock","listItemLeftPadding","accordionDetails","paddintTop","pushMessageToSnackbar","useState","isSaveLoading","setIsSaveLoading","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","useCallback","event","target","value","Error","resetState","onSetDefault","text","onSubmit","inputs","state","label","stateName","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","List","disablePadding","index","ListItem","divider","ListItemText","FormControl","ListItemSecondaryAction","Select","onChange","input","OutlinedInput","labelWidth","MenuProps","disableScrollLock","innerElement","MenuItem","type","inputProps","step","Box","mr","Button","disabled","ButtonCircularProgress","tooltipTypo","whiteSpace","typography","caption","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","Tooltip","enterTouchDelay","onFocus","onBlur","cursor","breakpoints","down","listItem","up","option7","setOption7","handleInputChange","handleCheckboxChange","checked","secondaryAction","Checkbox","helpText","length","SettingsArea","tableSortLabel","userSelect","noIcon","paddingFix","order","orderBy","rows","onRequestSort","createSortHandler","property","TableHead","TableRow","row","TableCell","align","numeric","sortDirection","placement","enterDelay","TableSortLabel","active","id","direction","stableSort","array","cmp","stabilizedThis","el","sort","a","b","desc","getSorting","ConfirmationDialog","loading","content","onConfirm","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","tableWrapper","overflowX","alignRight","flexDirection","alignItems","blackIcon","avatar","firstData","iconButton","dNone","targets","setTargets","setOrder","setOrderBy","page","setPage","isDeleteTargetDialogOpen","setIsDeleteTargetDialogOpen","deleteTargetDialogRow","setDeleteTargetDialogRow","isDeleteTargetLoading","setIsDeleteTargetLoading","handleRequestSort","__","_orderBy","_order","deleteTarget","_targets","findIndex","splice","handleChangePage","_","handleDeleteTargetDialogClose","handleDeleteTargetDialogOpen","toggleTarget","isActivated","Table","aria-labelledby","rowCount","TableBody","hover","tabIndex","scope","Avatar","src","profilePicUrl","number1","number2","number3","number4","IconButton","m","HighlightedInformation","TablePagination","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","select","selectIcon","actions","labelRowsPerPage","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","spin","animation","listItemSecondaryAction","toggleAccountActivation","isAccountActivated","Paper","Toolbar","ListItemIcon","Switch","CardChart","data","profit","views","Grid","container","item","xs","md","useStyles","makeStyles","options","nested","openClose","topOptions","accessoriesOptions","hairColorOptions","hatColorOptions","facialHairOptions","facialHairColorOptions","clothesOptions","graphicOptions","fabricColorOptions","eyesOptions","eyebrowOptions","mouthOptions","skinOptions","useSelector","auth","top","setTop","accessories","setAccessories","hairColor","setHairColor","hatColor","setHatColor","facialHair","setFacialHair","facialHairColor","setFacialHairColor","clothes","setClothes","graphic","setGraphic","fabricColor","setFabricColor","eyes","setEyes","eyebrow","setEyebrow","mouth","setMouth","skin","setSkin","topOpen","setTopOpen","facialOpen","setFacialOpen","clothesOpen","setClothesOpen","enqueueSnackbar","useSnackbar","classes_","dispatch","useDispatch","firstCall","console","log","topType","accessoriesType","facialHairType","clotheType","graphicType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","notify","msg","onSetRandom","sample","saveAvatar","saveUser","token","avatar_","setAvatar","then","res","catch","e","var","fun","colapse","justify","avatarStyle","Collapse","in","timeout","unmountOnExit","colEl","colIndex","Dashboard","selectDashboard","statistics","mt","gutterBottom","UserDataArea","menuWidth","menuWrapper","position","menu","overflow","scrollBehavior","itens","marginTop","zIndex","arrowRight","arrowLeft","left","SelectMenu","scrollArrow","setScrollArrow","identifiers","setIdentifiers","isMaxLeft","setIsMaxLeft","isMaxRight","setIsMaxRight","myRef","useRef","userId","current","scrollWidth","clientWidth","getGridsIdentifiers","identifier","hidden","sleft","scrollLeft","edge","ref","wrap","elevation","fab","bottom","right","small","background","SimpleDialog","selectedValue","option","ListItemAvatar","ActionMenu","setOpen","Fab","handleDeletDashboard","handleAddDashboard","getExchange","land","root","margin","bullet","textOverflow","pos","marginBottom","flexWrap","filter","formControl","minWidth","formItem","searchFilter","TickerCard","ticker","Card","chooseIdentifier","CardContent","description","NewDashboard","undefined","tickers","setTickers","exchange","setExchange","setSearch","getTickers","imgUrl","process","TextField","search_","InputLabel","labelId","alt","random","substr","connected","disconnected","form","flex","selectType","ToolbarGrid","useDemoData","dataSet","rowLength","maxColumns","addRow","components","GridToolbar","Footer","TableGrid","i","data-grid","onRemoveItem","StockInfos","aria-describedby","longName","fullExchangeName","sector","industry","longBusinessSummary","autoFocus","Link","href","website","MainCard","menuActive","isMenuActive","useTheme","onMouseEnter","openSettings","Fade","OutlinedCard","setData","dialogOpen","setDialogOpen","getQuoteData","close","LinearProgress","currency","price","MainCardGrid","NoteTextField","NoteCard","params","setText","multiline","changeParams","NoteGrid","accordionExpandIcon","accordion","boxShadow","heading","pxToRem","fontWeight","fontWeightRegular","strengths","getContrastText","amber","weaknesses","lime","opportunities","teal","threats","orange","Swot","str1","setStr1","str2","setStr2","str3","setStr3","wek1","setWek1","wek2","setWek2","wek3","setWek3","opt1","setOpt1","opt2","setOpt2","opt3","setOpt3","trt1","setTrt1","trt2","setTrt2","trt3","setTrt3","saveParams","expanded","setExpanded","panel","newExpanded","square","aria-controls","fullWidth","SwotGrid","not","indexOf","intersection","TransferList","setChecked","setLeft","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","customList","items","dense","role","concat","init","Indicators","useTranslation","indicators","setIndicators","edit","list","listSection","ul","borderTop","editMenu","transferList","fetchIndicators","ind","keys","forEach","group","editIndicatorList","subheader","ListSubheader","IndicatorsGrid","iconDoc","boxIcon","NoData","labelFormatter","Date","parse","toLocaleDateString","PriceChart","anchorEl","setAnchorEl","period","selectedOption","setSelectedOption","chartData","setChartData","fetchPriceData","PriceHistory","date","year","month","dayOfMonth","selectOption","handleClick","currentTarget","formatter","getSubtitle","handleClose","selectedOption_","isOpen","Boolean","pt","px","pb","aria-owns","aria-haspopup","Menu","PaperProps","maxHeight","ResponsiveContainer","LineChart","Line","dataKey","stroke","strokeWidth","dot","YAxis","domain","hide","XAxis","contentStyle","LineChartCard","DividendChart","fetchDividendData","BarChart","Bar","fill","BarChartCard","useStyles_","blue","LINE","BAR","L","StatisticsSettings","colors","grey","saveSettings","priceType","setPriceType","priceActive","setPriceActive","pricePos","setPricePos","priceColor","setPriceColor","dividendType","setDividendType","dividendPos","setDividendPos","dividendActive","setDividendActive","dividendColor","setDividendColor","financialType","setFinancialType","financialActive","setFinancialActive","financialPos","setFinancialPos","financialColor","setFinancialColor","setPeriod","charts","setPos","setter","activate","setColor","maxWidth","TableContainer","Radio","ButtonGroup","renderValue","colSpan","startAdornment","InputAdornment","settings","header","chart","chip","CustomTooltip","payload","format","pld","toFixed","BarChart_","configOpen","setConfigOpen","setCharts","chartsData","setChartsData","setTitle","subtitle","setSubtitle","title_","charts_","promises","s","capitalize","fetchFinancialHistory","Promise","allSettled","results","chartsData_","r","status","getTime","dividend","adjDividend","values","dateEpoch","financial","c1","c2","compareAsc","ComposedChart","tickFormatter","dataMin","dataMax","yAxisId","orientation","barSize","connectNulls","MultichartsCard","slider","EsgCard","esgs","setEsgs","valuetext","fetchEsgRisk","getColor","esg","peers","find","green","Chip","performance","scores","Slider","track","getAriaValueText","min","max","marks","valueLabelDisplay","EsgGrid","setStatistics","keepMounted","handleSave","Content","statisticSelected","setStatisticSelected","settingsOpen","setSettingsOpen","feedbackOpen","setFeedbackOpen","feedback","setFeedback","anchorSettings","setAnchorSettings","anchorFeedback","setAnchorFeedback","selectColor","val","flexGrow","checkbox","formatType","obj","dataType","v","fetchStatistics","formated","handleFeedback","newFeedback","ClickAwayListener","onClickAway","Popover","anchorOrigin","vertical","horizontal","transformOrigin","hint","checkedIcon","noWrap","Statistics","media","red","stepper","authorDate","News","activeStep","setActiveStep","news","setNews","fetchNews","news_","d","DotsMobileStepper","handleNext","prevActiveStep","interval","setInterval","clearInterval","MobileStepper","steps","nextButton","backButton","CardHeader","source","contentWrapper","NewsGrid","getCardProps","functions","gridItems","x","cols","y","w","h","minH","maxW","minW","maxH","ResponsiveReactGridLayout","WidthProvider","RGL","initialGridItems","setGridItems","gridElements","setGridElements","allDashboards","setAllDashboards","layout","setLayout","setIdentifier","gridId","setGridId","newGridElements","gridStartup","setGridStartup","firstSave","setFirstSave","fetchGridElements","dashboards","toBeRestored","restoreItems","newIdentifier","newLayout","g","onRestauringItems","gridItems_","iTemp","getRestoredItems","prev","saveGridElements","randomId","onAddItem","onLayoutChange","layout_","l","newGridEl","foundIndex","rId","newDashboard","selectedDashboard","next","deleteGrid","onBreakpointChange","breakpoint","rowHeight","columnHeight","listItemtext","setIsOpen","handleOpen","buttonRef","MenuList","imageContainer","image","timeStamp","roundedBorder","img","hasMoreWidthThanHeight","setHasMoreWidthThanHeight","hasLoaded","setHasLoaded","onLoad","naturalHeight","naturalWidth","GridListTileBar","awareOfUnicodeTokens","actionIcon","setPosts","posts","openAddPostModal","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","deletePost","_posts","onDelete","printImageGrid","post","sm","timestamp","disableElevation","Divider","helpPadding","fullWidthActions","pr","dialogPaper","dialogContent","ImageCropper","onCrop","aspectRatio","crop","setCrop","getCropFunctionFromChild","cropFunction","onEscapeKeyDown","setCropFunction","floatButtonWrapper","inputRoot","uploadIcon","imgWrapper","borderTopLeftRadius","uploadText","emojiTextArea","borderTopRightRadius","Dropzone","files","deleteItem","onDrop","EmojiTextArea","DateTimePicker","cropperFile","onCropperClose","uploadAt","onChangeUploadAt","printFile","preview","accept","fullHeight","paragraph","mb","inputClassName","maxCharacters","rightContent","emojiSet","disablePast","AddPost","setFiles","setUploadAt","setLoading","setCropperFile","acceptDrop","file","acceptedFiles","rejectedFiles","isErrorMessage","URL","createObjectURL","key","dataUrl","handleUpload","Posts","selectPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","closeAddPostModal","ColorfulChip","currencyPrettyPrint","toLocaleString","SubscriptionTable","transactions","setTransactions","currentPrices","setCurrentPrices","columns","field","headerName","valueGetter","op","operation","renderCell","shares","asset","success","dark","error","delete","uniqBy","getStocksPrices","refreshOperations","getAllOperations","pageSize","test","data01","totalValue","data02","PortifolioChart","assets","setAssets","sectors","setSectors","industries","setIndustries","setHistory","COLORS","PieChart","Pie","cx","cy","outerRadius","innerRadius","entry","Cell","getCurrentPortifolioHistorical","getCurrentPortifolio","portifolio","el1","el2","localeCompare","openAddBalanceDialog","validationError_","AddOperadionDialog","setOperation","setAsset","setValue","setShares","setDate","setId","validationError","setValidationError","closeDialog","transaction","abs","getFullYear","getMonth","getDate","required","helperText","InputProps","InputLabelProps","shrink","validation","flag","validadeOperation","editOperation","saveOperation","selectSubscription","editTransaction","setEditTransaction","operationOpen","setOperationOpen","registerOperation","response","deleteOperation","Routing","selectGrid","path","Subscription","memo","MessageListItem","message","hasErrorOccurred","setHasErrorOccurred","handleError","onError","formatDistance","tabContainer","overflowY","popoverPaper","noShadow","messages","handleClickAway","AppBar","styles","Drawer","outlinedInput","balance","readOnly","initialState","user","loginSlice","createSlice","reducers","setStatus","setUser","setToken","removeToken","appBar","shadows","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","smBordered","menuLink","iconListItem","textPrimary","mobileItemSelected","brandText","fontFamily","username","justifyCenter","permanentDrawerListItem","selectedTab","links","isMobileOpen","setIsMobileOpen","isSideDrawerOpen","setIsSideDrawerOpen","userName","openMobileDrawer","closeMobileDrawer","openDrawer","closeDrawer","desktop","mobile","Hidden","smUp","xsDown","node","NavigationDrawer","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","reason","pushMessage","Snackbar","disableWindowBlurListener","autoHideDuration","onExited","ContentProps","LazyLoadAddBalanceDialog","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","Component","default","shuffle","j","floor","Main","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setEmojiTextArea","hasFetchedEmojiTextArea","setHasFetchedEmojiTextArea","setImageCropper","hasFetchedImageCropper","setHasFetchedImageCropper","setDropzone","hasFetchedDropzone","setHasFetchedDropzone","setDateTimePicker","hasFetchedDateTimePicker","setHasFetchedDateTimePicker","setMessages","setIsAccountActivated","isAddBalanceDialogOpen","setIsAddBalanceDialogOpen","setPushMessageToSnackbar","fetchRandomTargets","randomPerson","persons","closeAddBalanceDialog","onPaymentSuccess","fetchRandomStatistics","oneYearSeconds","curProfit","curViews","curUnix","fetchRandomTransactions","oneMonthSeconds","transactionTemplates","isSubscription","balanceChange","randomTransactionTemplate","paidUntil","reverse","fetchRandomMessages","iterations","fetchRandomPosts","person","ConsecutiveSnackbarMessages"],"mappings":"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","file":"static/js/7.702ba503.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  circularProgress: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n});\r\n\r\nfunction ButtonCircularProgress(props) {\r\n  const { size, classes } = props;\r\n  return (\r\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\r\n      <CircularProgress\r\n        size={size ? size : 24}\r\n        thickness={size ? (size / 5) * 24 : 5}\r\n        className={classes.circularProgress}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtonCircularProgress.propTypes = {\r\n  size: PropTypes.number,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: theme.palette.warning.light,\r\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography variant=\"body2\">{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]).isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","/**\r\n * When called scrolls smooth to the top of the page.\r\n * globLastC prevents shaky animations when scrolling to\r\n * bottom while topscrolling.\r\n */\r\nlet globLastC = Infinity;\r\n\r\nfunction smoothScrollTopRec() {\r\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n  if (c > 0 && globLastC > c) {\r\n    globLastC = c;\r\n    window.requestAnimationFrame(smoothScrollTopRec);\r\n    window.scrollTo(0, c - c / 8);\r\n  } else {\r\n    globLastC = Infinity;\r\n  }\r\n}\r\n\r\nfunction smoothScrollTop() {\r\n  /**\r\n   * Normally this gets called from componentDidMount()\r\n   * Not waiting a tiny fraction of time can lead\r\n   * to shaky behaviour\r\n   */\r\n  setTimeout(() => {\r\n    smoothScrollTopRec();\r\n  }, 10);\r\n}\r\n\r\nexport default smoothScrollTop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\n/**\r\n * Wrapper around the Router component, which makes it pass the properties\r\n * to it's child.\r\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\r\n */\r\nconst PropsRoute = ({ component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\r\n  />\r\n);\r\n\r\nPropsRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\r\n};\r\n\r\nexport default PropsRoute;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst useLocationBlocker = () => {\r\n  /** \r\n   * Prevents react-router from pushing the same\r\n   * page to the history twice which leads to\r\n   * multiple clicks on the back icon of the browser\r\n   * being necessary to go back into the history.\r\n  */\r\n  const history = useHistory();\r\n  useEffect(\r\n    () =>\r\n      history.block(\r\n        (location, action) =>\r\n          action !== \"PUSH\" ||\r\n          getLocationId(location) !== getLocationId(history.location)\r\n      ),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n}\r\n\r\nconst getLocationId = ({ pathname, search, hash }) => {\r\n  return pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\r\n}\r\n\r\nexport default useLocationBlocker;","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  withStyles,\r\n  IconButton,\r\n  Typography,\r\n  withWidth,\r\n  isWidthUp,\r\n  Toolbar\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = theme => ({\r\n  closeIcon: {\r\n    marginRight: theme.spacing(0.5)\r\n  },\r\n  headSection: {\r\n    width: 200\r\n  },\r\n  blackList: {\r\n    backgroundColor: theme.palette.common.black,\r\n    height: \"100%\"\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\"\r\n  }\r\n});\r\n\r\nfunction NavigationDrawer(props) {\r\n  const {\r\n    width,\r\n    open,\r\n    onClose,\r\n    anchor,\r\n    classes,\r\n    menuItems,\r\n    selectedItem,\r\n    theme\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    window.onresize = () => {\r\n      if (isWidthUp(\"sm\", width) && open) {\r\n        onClose();\r\n      }\r\n    };\r\n  }, [width, open, onClose]);\r\n\r\n  return (\r\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\r\n      <Toolbar className={classes.headSection}>\r\n        <ListItem\r\n          style={{\r\n            paddingTop: theme.spacing(0),\r\n            paddingBottom: theme.spacing(0),\r\n            height: \"100%\",\r\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\r\n          }}\r\n          disableGutters\r\n        >\r\n          <ListItemIcon className={classes.closeIcon}>\r\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\r\n              <CloseIcon color=\"primary\" />\r\n            </IconButton>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </Toolbar>\r\n      <List className={classes.blackList}>\r\n        {menuItems.map(element => {\r\n          if (element.link) {\r\n            return (\r\n              <Link\r\n                key={element.name}\r\n                to={element.link}\r\n                className={classes.noDecoration}\r\n                onClick={onClose}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={selectedItem === element.name}\r\n                  /**\r\n                   * We disable ripple as it will make a weird animation\r\n                   * with primary and secondary color\r\n                   */\r\n                  disableRipple\r\n                  disableTouchRipple\r\n                >\r\n                  <ListItemIcon>{element.icon}</ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                        {element.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            );\r\n          }\r\n          return (\r\n            <ListItem button key={element.name} onClick={element.onClick}>\r\n              <ListItemIcon>{element.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                    {element.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigationDrawer.propTypes = {\r\n  anchor: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  selectedItem: PropTypes.string\r\n};\r\n\r\nexport default withWidth()(\r\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\r\n);\r\n","function shadeColor(color, percent) {\r\n  const f = parseInt(color.slice(1), 16);\r\n  const t = percent < 0 ? 0 : 255;\r\n  const p = percent < 0 ? percent * -1 : percent;\r\n  const R = f >> 16;\r\n  const G = (f >> 8) & 0x00ff;\r\n  const B = f & 0x0000ff;\r\n  return `#${(\r\n    0x1000000 +\r\n    (Math.round((t - R) * p) + R) * 0x10000 +\r\n    (Math.round((t - G) * p) + G) * 0x100 +\r\n    (Math.round((t - B) * p) + B)\r\n  )\r\n    .toString(16)\r\n    .slice(1)}`;\r\n}\r\n\r\nexport default shadeColor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\r\n  },\r\n  greyed: {\r\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\r\n  }\r\n});\r\n\r\nfunction Bordered(props) {\r\n  const {\r\n    classes,\r\n    theme,\r\n    disableVerticalPadding,\r\n    disableBorderRadius,\r\n    children,\r\n    variant\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\r\n      style={{\r\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nBordered.propTypes = {\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  disableVerticalPadding: PropTypes.bool,\r\n  disableBorderRadius: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.array\r\n  ]),\r\n  variant: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Bordered);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  AccordionDetails,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  dBlock: { display: \"block\" },\r\n  listItemLeftPadding: {\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  accordionDetails: {\r\n    paddintTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction Settings1(props) {\r\n  const { classes, pushMessageToSnackbar } = props;\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n  const [option5, setOption5] = useState(\"2 Days\");\r\n  const [option6, setOption6] = useState(7500);\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      if (name === \"option6\") {\r\n        if (value > 7500 || value < 1000) {\r\n          return;\r\n        }\r\n      }\r\n      switch (name) {\r\n        case \"option1\": {\r\n          setOption1(value);\r\n          break;\r\n        }\r\n        case \"option2\": {\r\n          setOption2(value);\r\n          break;\r\n        }\r\n        case \"option3\": {\r\n          setOption3(value);\r\n          break;\r\n        }\r\n        case \"option4\": {\r\n          setOption4(value);\r\n          break;\r\n        }\r\n        case \"option5\": {\r\n          setOption5(value);\r\n          break;\r\n        }\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\r\n  );\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsSaveLoading(false);\r\n    setIsDefaultLoading(false);\r\n    setOption1(\"None\");\r\n    setOption2(\"None\");\r\n    setOption3(\"None\");\r\n    setOption4(\"None\");\r\n    setOption5(\"2 Days\");\r\n    setOption6(7500);\r\n  }, [\r\n    setIsSaveLoading,\r\n    setIsDefaultLoading,\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n  ]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\r\n\r\n  const inputs = [\r\n    {\r\n      state: option1,\r\n      label: \"Option 1\",\r\n      stateName: \"option1\",\r\n    },\r\n    {\r\n      state: option2,\r\n      label: \"Option 2\",\r\n      stateName: \"option2\",\r\n    },\r\n    {\r\n      state: option3,\r\n      label: \"Option 3\",\r\n      stateName: \"option3\",\r\n    },\r\n    {\r\n      state: option4,\r\n      label: \"Option 4\",\r\n      stateName: \"option4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 1</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                className=\"listItemLeftPadding\"\r\n                disableGutters\r\n                divider\r\n                key={index}\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">{element.label}</Typography>\r\n                </ListItemText>\r\n                <FormControl variant=\"outlined\">\r\n                  <ListItemSecondaryAction\r\n                    className={classes.ListItemSecondaryAction}\r\n                  >\r\n                    <Select\r\n                      value={element.state}\r\n                      onChange={handleChange}\r\n                      input={\r\n                        <OutlinedInput\r\n                          name={element.stateName}\r\n                          labelWidth={0}\r\n                          className={classes.numberInput}\r\n                          classes={{ input: classes.numberInputInput }}\r\n                        />\r\n                      }\r\n                      MenuProps={{ disableScrollLock: true }}\r\n                    >\r\n                      {inputOptions.map((innerElement) => (\r\n                        <MenuItem value={innerElement} key={innerElement}>\r\n                          {innerElement}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </ListItemSecondaryAction>\r\n                </FormControl>\r\n              </ListItem>\r\n            ))}\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 5</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <Select\r\n                    value={option5}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name=\"option5\"\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {[\r\n                      \"Always\",\r\n                      \"6 Hours\",\r\n                      \"12 Hours\",\r\n                      \"1 Day\",\r\n                      \"2 Days\",\r\n                      \"3 Days\",\r\n                      \"1 Week\",\r\n                    ].map((element) => (\r\n                      <MenuItem value={element} key={element}>\r\n                        {element}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 6</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <OutlinedInput\r\n                    labelWidth={0}\r\n                    name=\"option6\"\r\n                    value={option6}\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    className={classes.numberInput}\r\n                    classes={{ input: classes.numberInputInput }}\r\n                    inputProps={{ step: 20 }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n          onClick={onSubmit}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings1.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(Settings1));\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\r\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst styles = theme => ({\r\n  tooltipTypo: {\r\n    whiteSpace: \"pre-line !important\",\r\n    ...theme.typography.caption,\r\n    color: theme.palette.common.white\r\n  },\r\n  tooltip: {\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"1.25rem\"\r\n  },\r\n  helpIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    \"@media (max-width: 350px)\": {\r\n      marginLeft: theme.spacing(0.5)\r\n    },\r\n    transition: theme.transitions.create([\"color\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut\r\n    })\r\n  }\r\n});\r\n\r\nfunction HelpIcon(props) {\r\n  const { classes, title } = props;\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const onMouseOver = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\r\n          {title}\r\n        </Typography>\r\n      }\r\n      className={classes.tooltip}\r\n      enterTouchDelay={300}\r\n    >\r\n      <HelpIconOutline\r\n        /**\r\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\r\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\r\n         * */\r\n        onMouseOver={onMouseOver}\r\n        onFocus={onMouseOver}\r\n        onBlur={onMouseLeave}\r\n        onMouseLeave={onMouseLeave}\r\n        color={isHovered ? \"primary\" : \"inherit\"}\r\n        className={classes.helpIcon}\r\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nHelpIcon.propTypes = {\r\n  classes: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Checkbox,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 120,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 80,\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      width: 65,\r\n    },\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 14.5px\",\r\n    \"@media (max-width: 380px)\": {\r\n      padding: \"9px 8.5px\",\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      padding: \"9px 6.5px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    paddingLeft: 100,\r\n  },\r\n  AccordionDetails: {\r\n    paddingTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nfunction Settings2(props) {\r\n  const { pushMessageToSnackbar, classes } = props;\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [option1, setOption1] = useState(false);\r\n  const [option2, setOption2] = useState(false);\r\n  const [option3, setOption3] = useState(false);\r\n  const [option4, setOption4] = useState(false);\r\n  const [option5, setOption5] = useState(false);\r\n  const [option6, setOption6] = useState(\"Both\");\r\n  const [option7, setOption7] = useState(\"2 weeks\");\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsDefaultLoading(false);\r\n    setIsSaveLoading(false);\r\n    setOption1(false);\r\n    setOption2(false);\r\n    setOption3(false);\r\n    setOption4(false);\r\n    setOption5(false);\r\n    setOption6(\"Both\");\r\n    setOption7(\"2 weeks\");\r\n  }, [\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n    setOption7,\r\n  ]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, setIsSaveLoading]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState, setIsDefaultLoading]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        case \"option7\": {\r\n          setOption7(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement\");\r\n      }\r\n    },\r\n    [setOption6, setOption7]\r\n  );\r\n\r\n  const handleCheckboxChange = (name) => (event) => {\r\n    switch (name) {\r\n      case \"option1\":\r\n        setOption1(event.target.checked);\r\n        break;\r\n      case \"option2\":\r\n        setOption2(event.target.checked);\r\n        break;\r\n      case \"option3\":\r\n        setOption3(event.target.checked);\r\n        break;\r\n      case \"option4\":\r\n        setOption4(event.target.checked);\r\n        break;\r\n      case \"option5\":\r\n        setOption5(event.target.checked);\r\n        break;\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement.\");\r\n    }\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      title: \"Option 1\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option1\"\r\n          color=\"primary\"\r\n          checked={option1}\r\n          onChange={handleCheckboxChange(\"option1\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 2\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option2\"\r\n          color=\"primary\"\r\n          checked={option2}\r\n          onChange={handleCheckboxChange(\"option2\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 3\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option3\"\r\n          color=\"primary\"\r\n          checked={option3}\r\n          onChange={handleCheckboxChange(\"option3\")}\r\n        />\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 4\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option4\"\r\n          color=\"primary\"\r\n          checked={option4}\r\n          onChange={handleCheckboxChange(\"option4\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 5\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option5\"\r\n          color=\"primary\"\r\n          checked={option5}\r\n          onChange={handleCheckboxChange(\"option5\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 6\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option6}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option6\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"Both\">Both</MenuItem>\r\n          <MenuItem value=\"Male+\">Male+</MenuItem>\r\n          <MenuItem value=\"Female+\">Female+</MenuItem>\r\n          <MenuItem value=\"Only male\">Only male</MenuItem>\r\n          <MenuItem value=\"Only female\">Only female</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 7\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option7}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option7\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"None\">None</MenuItem>\r\n          <MenuItem value=\"6 hours\">6 hours</MenuItem>\r\n          <MenuItem value=\"12 hours\">12 hours</MenuItem>\r\n          <MenuItem value=\"1 day\">1 day</MenuItem>\r\n          <MenuItem value=\"3 days\">3 days</MenuItem>\r\n          <MenuItem value=\"1 week\">1 week</MenuItem>\r\n          <MenuItem value=\"2 weeks\">2 weeks</MenuItem>\r\n          <MenuItem value=\"1 month\">1 month</MenuItem>\r\n          <MenuItem value=\"3 months\">3 months</MenuItem>\r\n          <MenuItem value=\"6 months\">6 months</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 2</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                key={index}\r\n                divider={index !== inputs.length - 1}\r\n                className=\"listItemLeftPadding\"\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">\r\n                    {element.title}\r\n                    {element.helpText && <HelpIcon title={element.helpText} />}\r\n                  </Typography>\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                  <FormControl variant=\"outlined\">\r\n                    {element.secondaryAction}\r\n                  </FormControl>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.AccordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={onSubmit}\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings2.propTypes = {\r\n  classes: PropTypes.object,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Settings2);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Settings1 from \"./Settings1\";\r\nimport Settings2 from \"./Settings2\";\r\n\r\nfunction SettingsArea(props) {\r\n  const { pushMessageToSnackbar } = props;\r\n  return (\r\n    <Fragment>\r\n      <Settings1 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <Settings2 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSettingsArea.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func\r\n};\r\n\r\nexport default SettingsArea;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Typography,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  tableSortLabel: {\r\n    cursor: \"text\",\r\n    userSelect: \"auto\",\r\n    color: \"inherit !important\"\r\n  },\r\n  noIcon: {\r\n    \"& path\": {\r\n      display: \"none !important\"\r\n    }\r\n  },\r\n  paddingFix: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, rows, onRequestSort, classes } = props;\r\n\r\n  const createSortHandler = useCallback(\r\n    property => event => {\r\n      onRequestSort(event, property);\r\n    },\r\n    [onRequestSort]\r\n  );\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {rows.map((row, index) => (\r\n          <TableCell\r\n            key={index}\r\n            align={row.numeric ? \"right\" : \"inherit\"}\r\n            padding=\"default\"\r\n            sortDirection={orderBy === row.name ? order : false}\r\n            className={index === 0 ? classes.paddingFix : null}\r\n          >\r\n            {onRequestSort ? (\r\n              <Tooltip\r\n                title=\"Sort\"\r\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                enterDelay={300}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row.id)}\r\n                >\r\n                  <Typography variant=\"body2\">{row.label}</Typography>\r\n                </TableSortLabel>\r\n              </Tooltip>\r\n            ) : (\r\n              <TableSortLabel\r\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\r\n              >\r\n                <Typography variant=\"body2\" className={classes.label}>\r\n                  {row.label}\r\n                </Typography>\r\n              </TableSortLabel>\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func,\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\r\n","function stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\nexport default stableSort;\r\n","function desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\nexport default getSorting;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\n\r\nfunction ConfirmationDialog(props) {\r\n  const { open, onClose, loading, title, content, onConfirm } = props;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick={loading}\r\n      disableEscapeKeyDown={loading}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{content}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} disabled={loading}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={onConfirm}\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n        >\r\n          Yes {loading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  onConfirm: PropTypes.func\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TablePagination,\r\n  TableRow,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport PlayCirlceOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\r\nimport stableSort from \"../../../shared/functions/stableSort\";\r\nimport getSorting from \"../../../shared/functions/getSorting\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  alignRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  blackIcon: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  avatar: {\r\n    width: 28,\r\n    height: 28,\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  iconButton: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst rows = [\r\n  {\r\n    id: \"icon\",\r\n    numeric: true,\r\n    label: \"\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"number1\", numeric: false, label: \"Category 1\" },\r\n  { id: \"number2\", numeric: false, label: \"Category 2\" },\r\n  { id: \"number3\", numeric: false, label: \"Category 3\" },\r\n  {\r\n    id: \"number4\",\r\n    numeric: false,\r\n    label: \"Category 4\",\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    numeric: false,\r\n    label: \"\",\r\n  },\r\n];\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction CustomTable(props) {\r\n  const { pushMessageToSnackbar, classes, targets, setTargets } = props;\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [isDeleteTargetDialogOpen, setIsDeleteTargetDialogOpen] = useState(\r\n    false\r\n  );\r\n  const [deleteTargetDialogRow, setDeleteTargetDialogRow] = useState(null);\r\n  const [isDeleteTargetLoading, setIsDeleteTargetLoading] = useState(false);\r\n\r\n  const handleRequestSort = useCallback(\r\n    (__, property) => {\r\n      const _orderBy = property;\r\n      let _order = \"desc\";\r\n      if (orderBy === property && order === \"desc\") {\r\n        _order = \"asc\";\r\n      }\r\n      setOrder(_order);\r\n      setOrderBy(_orderBy);\r\n    },\r\n    [setOrder, setOrderBy, order, orderBy]\r\n  );\r\n\r\n  const deleteTarget = useCallback(() => {\r\n    setIsDeleteTargetLoading(true);\r\n    setTimeout(() => {\r\n      setIsDeleteTargetDialogOpen(false);\r\n      setIsDeleteTargetLoading(false);\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex(\r\n        (element) => element.id === deleteTargetDialogRow.id\r\n      );\r\n      _targets.splice(index, 1);\r\n      setTargets(_targets);\r\n      pushMessageToSnackbar({\r\n        text: \"Your friend has been removed\",\r\n      });\r\n    }, 1500);\r\n  }, [\r\n    setIsDeleteTargetDialogOpen,\r\n    setIsDeleteTargetLoading,\r\n    pushMessageToSnackbar,\r\n    setTargets,\r\n    deleteTargetDialogRow,\r\n    targets,\r\n  ]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const handleDeleteTargetDialogClose = useCallback(() => {\r\n    setIsDeleteTargetDialogOpen(false);\r\n  }, [setIsDeleteTargetDialogOpen]);\r\n\r\n  const handleDeleteTargetDialogOpen = useCallback(\r\n    (row) => {\r\n      setIsDeleteTargetDialogOpen(true);\r\n      setDeleteTargetDialogRow(row);\r\n    },\r\n    [setIsDeleteTargetDialogOpen, setDeleteTargetDialogRow]\r\n  );\r\n\r\n  const toggleTarget = useCallback(\r\n    (row) => {\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex((element) => element.id === row.id);\r\n      row.isActivated = !row.isActivated;\r\n      _targets[index] = row;\r\n      if (row.isActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now activated\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now deactivated\",\r\n        });\r\n      }\r\n      setTargets(_targets);\r\n    },\r\n    [pushMessageToSnackbar, targets, setTargets]\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Some user data</Typography>\r\n      </AccordionSummary>\r\n      <ConfirmationDialog\r\n        open={isDeleteTargetDialogOpen}\r\n        title=\"Confirmation\"\r\n        content={\r\n          deleteTargetDialogRow ? (\r\n            <span>\r\n              {\"Do you really want to remove the friend \"}\r\n              <b>{deleteTargetDialogRow.name}</b>\r\n              {\" from your list?\"}\r\n            </span>\r\n          ) : null\r\n        }\r\n        onClose={handleDeleteTargetDialogClose}\r\n        onConfirm={deleteTarget}\r\n        loading={isDeleteTargetLoading}\r\n      />\r\n      <Box width=\"100%\">\r\n        <div className={classes.tableWrapper}>\r\n          {targets.length > 0 ? (\r\n            <Table aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={targets.length}\r\n                rows={rows}\r\n              />\r\n              <TableBody>\r\n                {stableSort(targets, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => (\r\n                    <TableRow hover tabIndex={-1} key={index}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        className={classes.firstData}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={row.profilePicUrl}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number1}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number2}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number3}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number4}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                          {row.isActivated ? (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Pause\"\r\n                            >\r\n                              <PauseCircleOutlineIcon\r\n                                className={classes.blackIcon}\r\n                              />\r\n                            </IconButton>\r\n                          ) : (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Resume\"\r\n                            >\r\n                              <PlayCirlceOutlineIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            className={classes.iconButton}\r\n                            onClick={() => {\r\n                              handleDeleteTargetDialogOpen(row);\r\n                            }}\r\n                            aria-label=\"Delete\"\r\n                          >\r\n                            <DeleteIcon className={classes.blackIcon} />\r\n                          </IconButton>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Box m={2}>\r\n              <HighlightedInformation>\r\n                No friends added yet.\r\n              </HighlightedInformation>\r\n            </Box>\r\n          )}\r\n        </div>\r\n        <div className={classes.alignRight}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={targets.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\",\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\",\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            classes={{\r\n              select: classes.dNone,\r\n              selectIcon: classes.dNone,\r\n              actions: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n              caption: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n            }}\r\n            labelRowsPerPage=\"\"\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CustomTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Paper,\r\n  Toolbar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  ListItemIcon,\r\n  Switch,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  },\r\n  toolbar: { justifyContent: \"space-between\" },\r\n  scaleMinus: {\r\n    transform: \"scaleX(-1)\"\r\n  },\r\n  \"@keyframes spin\": {\r\n    from: { transform: \"rotate(359deg)\" },\r\n    to: { transform: \"rotate(0deg)\" }\r\n  },\r\n  spin: { animation: \"$spin 2s infinite linear\" },\r\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\r\n});\r\n\r\nfunction AccountInformationArea(props) {\r\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={2}>\r\n            <ListItemText\r\n              primary=\"Status\"\r\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\r\n              className=\"mr-2\"\r\n            />\r\n          </Box>\r\n          <ListItemIcon>\r\n            <LoopIcon\r\n              className={classNames(\r\n                isAccountActivated ? classes.spin : null,\r\n                classes.scaleMinus\r\n              )}\r\n            />\r\n          </ListItemIcon>\r\n        </Box>\r\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\r\n          <Switch\r\n            color=\"secondary\"\r\n            checked={isAccountActivated}\r\n            onClick={toggleAccountActivation}\r\n            inputProps={{\r\n              \"aria-label\": isAccountActivated\r\n                ? \"Deactivate Account\"\r\n                : \"Activate Account\"\r\n            }}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </Toolbar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nAccountInformationArea.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, withTheme } from \"@material-ui/core\";\r\n\r\nfunction StatisticsArea(props) {\r\n  const { theme, CardChart, data } = props;\r\n  return (\r\n    CardChart &&\r\n    data.profit.length >= 2 &&\r\n    data.views.length >= 2 && (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.profit}\r\n            color={theme.palette.secondary.light}\r\n            height=\"70px\"\r\n            title=\"Profit\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.views}\r\n            color={theme.palette.primary.light}\r\n            height=\"70px\"\r\n            title=\"Views\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nStatisticsArea.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  CardChart: PropTypes.elementType\r\n};\r\n\r\nexport default withTheme(StatisticsArea);\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  AccordionDetails,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport Avatar from 'avataaars'\r\nimport _ from \"lodash\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setAvatar } from '../../../shared/redux/actions/auth.actions.js'\r\nimport { saveUser } from '../../../shared/functions/requests.js';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  dBlock: { display: \"block\" },\r\n  listItemLeftPadding: {\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  accordionDetails: {\r\n    paddintTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  options: {\r\n    width: '25vw'\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(6)\r\n  },\r\n  avatar: {\r\n    marginLeft: theme.spacing(6),\r\n  },\r\n  openClose: {\r\n    marginRight: theme.spacing(3),\r\n    cursor: 'pointer'\r\n  }\r\n\r\n}))\r\nconst topOptions = ['NoHair', 'Eyepatch', 'Hat', 'Hijab', 'Turban', 'WinterHat1', 'WinterHat2', 'WinterHat3', 'WinterHat4', 'LongHairBigHair', 'LongHairBob', 'LongHairBun', 'LongHairCurly', 'LongHairCurvy', 'LongHairDreads', 'LongHairFrida', 'LongHairFro', 'LongHairFroBand', 'LongHairNotTooLong', 'LongHairShavedSides', 'LongHairMiaWallace', 'LongHairStraight', 'LongHairStraight2', 'LongHairStraightStrand', 'ShortHairDreads01', 'ShortHairDreads02', 'ShortHairFrizzle', 'ShortHairShaggyMullet', 'ShortHairShortCurly', 'ShortHairShortFlat', 'ShortHairShortRound', 'ShortHairShortWaved', 'ShortHairSides', 'ShortHairTheCaesar', 'ShortHairTheCaesarSidePart']\r\nconst accessoriesOptions = ['Blank', 'Kurt', 'Prescription01', 'Prescription02', 'Round', 'Sunglasses', 'Wayfarers']\r\nconst hairColorOptions = ['Auburn', 'Black', 'Blonde', 'BlondeGolden', 'Brown', 'BrownDark', 'PastelPink', 'Platinum', 'Red', 'SilverGray']\r\nconst hatColorOptions = ['Black', 'Blue01', 'Blue02', 'Blue03', 'Gray01', 'Gray02', 'Heather', 'PastelBlue', 'PastelGreen', 'PastelOrange', 'PastelRed', 'PastelYellow', 'Pink', 'Red', 'White']\r\nconst facialHairOptions = ['Blank', 'BeardMedium', 'BeardLight', 'BeardMajestic', 'MoustacheFancy', 'MoustacheMagnum']\r\nconst facialHairColorOptions = ['Auburn', 'Black', 'Blonde', 'BlondeGolden', 'Brown', 'BrownDark', 'Platinum', 'Red']\r\nconst clothesOptions = ['BlazerShirt', 'BlazerSweater', 'CollarSweater', 'GraphicShirt', 'Hoodie', 'Overall', 'ShirtCrewNeck', 'ShirtScoopNeck', 'ShirtVNeck']\r\nconst graphicOptions = ['Bat', 'Cumbia', 'Deer', 'Diamond', 'Hola', 'Pizza', 'Resist', 'Selena', 'Bear', 'SkullOutline', 'Skull']\r\nconst fabricColorOptions = ['Black', 'Blue01', 'Blue02', 'Blue03', 'Gray01', 'Gray02', 'Heather', 'PastelBlue', 'PastelGreen', 'PastelOrange', 'PastelRed', 'PastelYellow', 'Pink', 'Red', 'White']\r\nconst eyesOptions = ['Close', 'Cry', 'Default', 'Dizzy', 'EyeRoll', 'Happy', 'Hearts', 'Side', 'Squint', 'Surprised', 'Wink', 'WinkWacky']\r\nconst eyebrowOptions = ['Angry', 'AngryNatural', 'Default', 'DefaultNatural', 'FlatNatural', 'RaisedExcited', 'RaisedExcitedNatural', 'SadConcerned', 'SadConcernedNatural', 'UnibrowNatural', 'UpDown', 'UpDownNatural']\r\nconst mouthOptions = ['Concerned', 'Default', 'Disbelief', 'Eating', 'Grimace', 'Sad', 'ScreamOpen', 'Serious', 'Smile', 'Tongue', 'Twinkle'] // 'Vomit'\r\nconst skinOptions = ['Tanned', 'Yellow', 'Pale', 'Light', 'Brown', 'DarkBrown', 'Black']\r\n\r\nfunction AvatarSelection(props) {\r\n  const avatar = useSelector(state => state.auth.avatar)\r\n  const { classes } = props;\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [isDefaultLoading] = useState(false);\r\n  const [top, setTop] = useState('');\r\n  const [accessories, setAccessories] = useState('');\r\n  const [hairColor, setHairColor] = useState('');\r\n  const [hatColor, setHatColor] = useState('');\r\n  const [facialHair, setFacialHair] = useState('');\r\n  const [facialHairColor, setFacialHairColor] = useState('');\r\n  const [clothes, setClothes] = useState('');\r\n  const [graphic, setGraphic] = useState('');\r\n  const [fabricColor, setFabricColor] = useState('');\r\n  const [eyes, setEyes] = useState('');\r\n  const [eyebrow, setEyebrow] = useState('');\r\n  const [mouth, setMouth] = useState('');\r\n  const [skin, setSkin] = useState('');\r\n  const [topOpen, setTopOpen] = useState(false);\r\n  const [facialOpen, setFacialOpen] = useState(false);\r\n  const [clothesOpen, setClothesOpen] = useState(false);\r\n  const auth = useSelector(state => state.auth)\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const classes_ = useStyles();\r\n  const dispatch = useDispatch()\r\n\r\n  const firstCall = useCallback(() => {\r\n    console.log(\"alcpaha fist\", avatar)\r\n    setTop(avatar.topType);\r\n    setAccessories(avatar.accessoriesType);\r\n    setHairColor(avatar.hairColor);\r\n    setHatColor(avatar.hatColor);\r\n    setFacialHair(avatar.facialHairType);\r\n    setFacialHairColor(avatar.facialHairColor);\r\n    setClothes(avatar.clotheType);\r\n    setGraphic(avatar.graphicType);\r\n    setFabricColor(avatar.clotheColor);\r\n    setEyes(avatar.eyeType);\r\n    setEyebrow(avatar.eyebrowType);\r\n    setMouth(avatar.mouthType);\r\n    setSkin(avatar.skinColor);\r\n  }, [avatar])\r\n\r\n  useEffect(() => {\r\n    firstCall()\r\n  }, [])\r\n\r\n  const notify = (msg,variant) => {\r\n    // variant could be success, error, warning, info, or default\r\n    console.log('notify')\r\n    enqueueSnackbar(msg, { variant });\r\n  };\r\n  \r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      if (name === \"option6\") {\r\n        if (value > 7500 || value < 1000) {\r\n          return;\r\n        }\r\n      }\r\n      switch (name) {\r\n        case \"top\": {\r\n          setTop(value);\r\n          break;\r\n        }\r\n        case \"accessories\": {\r\n          setAccessories(value);\r\n          break;\r\n        }\r\n        case \"hairColor\": {\r\n          setHairColor(value);\r\n          break;\r\n        }\r\n        case \"hatColor\": {\r\n          setHatColor(value);\r\n          break;\r\n        }\r\n        case \"facialHair\": {\r\n          setFacialHair(value);\r\n          break;\r\n        }\r\n        case \"facialHairColor\": {\r\n          setFacialHairColor(value);\r\n          break;\r\n        }\r\n        case \"clothes\": {\r\n          setClothes(value);\r\n          break;\r\n        }\r\n        case \"graphic\": {\r\n          setGraphic(value);\r\n          break;\r\n        }\r\n        case \"fabricColor\": {\r\n          setFabricColor(value);\r\n          break;\r\n        }\r\n        case \"eyes\": {\r\n          setEyes(value);\r\n          break;\r\n        }\r\n        case \"eyebrow\": {\r\n          setEyebrow(value);\r\n          break;\r\n        }\r\n        case \"mouth\": {\r\n          setMouth(value);\r\n          break;\r\n        }\r\n        case \"skin\": {\r\n          setSkin(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement.\");\r\n      }\r\n    },\r\n    [setSkin, setMouth, setEyebrow, setEyes, setAccessories, setTop,\r\n      setFabricColor, setClothes, setFacialHairColor, setFacialHair,\r\n      setHatColor, setHairColor]\r\n  );\r\n\r\n  const onSetRandom = useCallback(() => {\r\n    setTop(_.sample(topOptions));\r\n    setAccessories(_.sample(accessoriesOptions));\r\n    setHairColor(_.sample(hairColorOptions));\r\n    setHatColor(_.sample(hatColorOptions));\r\n    setFacialHair(_.sample(facialHairOptions));\r\n    setFacialHairColor(_.sample(facialHairColorOptions));\r\n    setClothes(_.sample(clothesOptions));\r\n    setGraphic(_.sample(graphicOptions));\r\n    setFabricColor(_.sample(fabricColorOptions));\r\n    setEyes(_.sample(eyesOptions));\r\n    setEyebrow(_.sample(eyebrowOptions));\r\n    setMouth(_.sample(mouthOptions));\r\n    setSkin(_.sample(skinOptions));\r\n  }, [setSkin, setMouth, setEyebrow, setEyes, setFabricColor, setGraphic, setClothes,\r\n    setFacialHairColor, setFacialHair, setHatColor, setHairColor, setAccessories, setTop]);\r\n\r\n  const saveAvatar = useCallback(() => {\r\n    return saveUser(auth.id, auth, auth.token)\r\n    }, [auth]);\r\n\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    const avatar_ = {\r\n      topType: top,\r\n      hairColor: hairColor,\r\n      hatColor: hatColor,\r\n      accessoriesType: accessories,\r\n      facialHairType: facialHair,\r\n      facialHairColor: facialHairColor,\r\n      clotheType: clothes,\r\n      clotheColor: fabricColor,\r\n      graphicType: graphic,\r\n      eyeType: eyes,\r\n      eyebrowType: eyebrow,\r\n      mouthType: mouth,\r\n      skinColor: skin\r\n    }\r\n    console.log(\"AV save\", auth.id, avatar_)\r\n    dispatch(setAvatar(avatar_))\r\n    auth.avatar = avatar_\r\n    saveAvatar(auth.id, auth, auth.token).then(res => {\r\n      setIsSaveLoading(false);\r\n      notify('Avatar saved', 'success' )\r\n    }\r\n    )\r\n    .catch(e => {\r\n        notify('Something went wrong', 'error' )\r\n        setIsSaveLoading(false);\r\n\r\n      })\r\n  }, [setIsSaveLoading, auth, top, hairColor, hatColor, accessories, facialHair, facialHairColor, clothes]);\r\n\r\n  const inputs = [\r\n    {\r\n      state: top,\r\n      options: topOptions,\r\n      label: \"Top\",\r\n      stateName: \"top\",\r\n      open: { var: topOpen, fun: setTopOpen },\r\n      colapse:\r\n        [\r\n          {\r\n            state: top,\r\n            options: topOptions,\r\n            label: \"Top\",\r\n            stateName: \"top\",\r\n            open: true,\r\n          },\r\n          {\r\n            state: hairColor,\r\n            options: hairColorOptions,\r\n            label: \"Hair Color\",\r\n            stateName: \"hairColor\",\r\n          },\r\n          {\r\n            state: hatColor,\r\n            options: hatColorOptions,\r\n            label: \"Hat Color\",\r\n            stateName: \"hatColor\",\r\n          },\r\n        ]\r\n\r\n    },\r\n    {\r\n      state: accessories,\r\n      options: accessoriesOptions,\r\n      label: \"Accessories\",\r\n      stateName: \"accessories\",\r\n      colapse: []\r\n    },\r\n    {\r\n      state: facialHair,\r\n      options: facialHairOptions,\r\n      label: \"Facial Hair\",\r\n      stateName: \"facialHair\",\r\n      open: { var: facialOpen, fun: setFacialOpen },\r\n      colapse: [\r\n        {\r\n          state: facialHair,\r\n          options: facialHairOptions,\r\n          label: \"Facial Hair\",\r\n          stateName: \"facialHair\",\r\n        },\r\n        {\r\n          state: facialHairColor,\r\n          options: facialHairColorOptions,\r\n          label: \"Facial Hair Color\",\r\n          stateName: \"facialHairColor\",\r\n        },\r\n      ]\r\n    },\r\n    {\r\n      state: clothes,\r\n      options: clothesOptions,\r\n      label: \"Clothes\",\r\n      stateName: \"clothes\",\r\n      open: { var: clothesOpen, fun: setClothesOpen },\r\n      colapse: [\r\n        {\r\n          state: clothes,\r\n          options: clothesOptions,\r\n          label: \"Clothes\",\r\n          stateName: \"clothes\",\r\n        },\r\n        {\r\n          state: fabricColor,\r\n          options: fabricColorOptions,\r\n          label: \"Fabric Color\",\r\n          stateName: \"fabricColor\",\r\n        },\r\n        {\r\n          state: graphic,\r\n          options: graphicOptions,\r\n          label: \"Graphic\",\r\n          stateName: \"graphic\",\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      state: eyes,\r\n      options: eyesOptions,\r\n      label: \"Eyes\",\r\n      stateName: \"eyes\",\r\n      colapse: []\r\n    },\r\n    {\r\n      state: eyebrow,\r\n      options: eyebrowOptions,\r\n      label: \"Eyebrow\",\r\n      stateName: \"eyebrow\",\r\n      colapse: []\r\n    },\r\n    {\r\n      state: mouth,\r\n      options: mouthOptions,\r\n      label: \"Mouth\",\r\n      stateName: \"mouth\",\r\n      colapse: []\r\n    },\r\n    {\r\n      state: skin,\r\n      options: skinOptions,\r\n      label: \"Skin\",\r\n      stateName: \"skin\",\r\n      colapse: []\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Avatar Selection</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <Grid container\r\n          spacing={2}\r\n          justify=\"center\"\r\n          alignItems=\"center\">\r\n          <Grid item xs={4}>\r\n            <div className={classes_.avatar}>\r\n              <Avatar\r\n                avatarStyle='Circle'\r\n                topType={top}\r\n                hairColor={hairColor}\r\n                hatColor={hatColor}\r\n                accessoriesType={accessories}\r\n                facialHairType={facialHair}\r\n                facialHairColor={facialHairColor}\r\n                clotheType={clothes}\r\n                clotheColor={fabricColor}\r\n                graphicType={graphic}\r\n                eyeType={eyes}\r\n                eyebrowType={eyebrow}\r\n                mouthType={mouth}\r\n                skinColor={skin}\r\n              />\r\n\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n\r\n            <List disablePadding>\r\n              <Bordered disableVerticalPadding disableBorderRadius>\r\n                {inputs.map((element, index) => (\r\n                  <div key={element.label}>\r\n                    <ListItem\r\n                      className=\"listItemLeftPadding\"\r\n                      disableGutters\r\n                      divider\r\n                      key={'avt' + index}\r\n                    >\r\n                      <ListItemText>\r\n                        <Typography variant=\"body2\">{element.label}</Typography>\r\n                      </ListItemText>\r\n                      {\r\n                        element.colapse.length === 0 && (\r\n                          <FormControl variant=\"outlined\">\r\n                            <ListItemSecondaryAction >\r\n                              <Select\r\n                                value={element.state}\r\n                                onChange={handleChange}\r\n                                input={\r\n                                  <OutlinedInput\r\n                                    name={element.stateName}\r\n                                    labelWidth={0}\r\n                                    className={classes_.options}\r\n                                    classes={{ input: classes.numberInputInput }}\r\n                                  />\r\n                                }\r\n                                MenuProps={{ disableScrollLock: true }}\r\n                              >\r\n                                {element.options.map((innerElement) => (\r\n                                  <MenuItem value={innerElement} key={\"inner\"+innerElement}>\r\n                                    {innerElement}\r\n                                  </MenuItem>\r\n                                ))}\r\n                              </Select>\r\n                            </ListItemSecondaryAction>\r\n                          </FormControl>\r\n                        )\r\n                      }\r\n\r\n                      {element.open && (element.open.var ?\r\n                        <ExpandMore className={classes_.openClose}\r\n                          onClick={() => element.open.fun(!element.open.var)} /> :\r\n                        <ExpandLess className={classes_.openClose}\r\n                          onClick={() => element.open.fun(!element.open.var)} />)}\r\n                    </ListItem>\r\n                    {element.open &&\r\n                      <Collapse in={element.open.var} timeout=\"auto\" unmountOnExit>\r\n                        {\r\n                          element.colapse.map((colEl, colIndex) => (\r\n                            <List key={colEl.stateName} component=\"div\" disablePadding>\r\n                              <ListItem divider className={classes_.nested}>\r\n                                <ListItemText>\r\n                                  <Typography variant=\"body2\">{colEl.label}</Typography>\r\n                                </ListItemText>\r\n                                <FormControl variant=\"outlined\">\r\n                                  <ListItemSecondaryAction >\r\n                                    <Select\r\n                                      value={colEl.state}\r\n                                      onChange={handleChange}\r\n                                      input={\r\n                                        <OutlinedInput\r\n                                          name={colEl.stateName}\r\n                                          labelWidth={0}\r\n                                          className={classes_.options}\r\n                                          classes={{ input: classes.numberInputInput }}\r\n                                        />\r\n                                      }\r\n                                      MenuProps={{ disableScrollLock: true }}\r\n                                    >\r\n                                      {colEl.options.map((innerElement) => (\r\n                                        <MenuItem value={innerElement} key={innerElement}>\r\n                                          {innerElement}\r\n                                        </MenuItem>\r\n                                      ))}\r\n                                    </Select>\r\n                                  </ListItemSecondaryAction>\r\n                                </FormControl>\r\n                              </ListItem>\r\n                            </List>\r\n                          )\r\n                          )\r\n                        }\r\n                      </Collapse>\r\n                    }\r\n\r\n                  </div>\r\n                ))}\r\n\r\n              </Bordered>\r\n            </List>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.accordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetRandom}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Random {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n          onClick={onSubmit}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nAvatarSelection.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(AvatarSelection));\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport SettingsArea from \"./SettingsArea\";\r\nimport UserDataArea from \"./UserDataArea\";\r\nimport AccountInformationArea from \"./AccountInformationArea\";\r\nimport StatisticsArea from \"./StatisticsArea\";\r\nimport AvatarSelection from \"./AvatarSelection\";\r\n\r\nfunction Dashboard(props) {\r\n  const {\r\n    selectDashboard,\r\n    CardChart,\r\n    statistics,\r\n    toggleAccountActivation,\r\n    pushMessageToSnackbar,\r\n    targets,\r\n    setTargets,\r\n    isAccountActivated,\r\n  } = props;\r\n\r\n  useEffect(selectDashboard, [selectDashboard]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <StatisticsArea CardChart={CardChart} data={statistics} />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Your Account\r\n        </Typography>\r\n      </Box>\r\n      <AccountInformationArea\r\n        isAccountActivated={isAccountActivated}\r\n        toggleAccountActivation={toggleAccountActivation}\r\n      />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Settings\r\n        </Typography>\r\n      </Box>\r\n      <SettingsArea pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <AvatarSelection pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <UserDataArea\r\n        pushMessageToSnackbar={pushMessageToSnackbar}\r\n        targets={targets}\r\n        setTargets={setTargets}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dashboard;\r\n","import { React, useRef, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Paper, Grid, Typography } from '@material-ui/core';\r\nimport { getGridsIdentifiers } from '../../../../shared/functions/requests.js';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nconst menuWidth = '500px'\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    menuWrapper: {\r\n        position: 'relative',\r\n        paddingBottom: '50px',\r\n    },\r\n    menu: {\r\n        position: 'absolute',\r\n        top: -120,\r\n        width: menuWidth,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        '-webkit-mask-image': 'linear-gradient(90deg, #000 96%, transparent)',\r\n        paddingRight: '20px',\r\n        paddingLeft: '20px',\r\n        scrollBehavior: 'smooth'\r\n\r\n    },\r\n    itens: {\r\n        marginTop: 100,\r\n        padding: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        transition: 'all 200ms',\r\n        width: 'auto',\r\n        zIndex: 4,\r\n        \"&:hover\": {\r\n            transform: 'scale(1.08)',\r\n        },\r\n        cursor: 'pointer'\r\n    },\r\n    arrowRight: {\r\n        top: -110,\r\n        marginTop: 100,\r\n        position: 'absolute',\r\n        transition: 'all 200ms',\r\n        width: 'auto',\r\n        zIndex: 5,\r\n        \"&:hover\": {\r\n            // transform: 'scale(2)',\r\n            transition: 'all 200ms',\r\n            zIndex: 3\r\n        },\r\n        cursor: 'pointer'\r\n    },\r\n    arrowLeft: {\r\n        top: -110,\r\n        marginTop: 100,\r\n        position: 'absolute',\r\n        left: menuWidth,\r\n        transition: 'all 200ms',\r\n        width: 'auto',\r\n        zIndex: 5,\r\n        \"&:hover\": {\r\n            // transform: 'scale(2)',\r\n            transition: 'all 200ms',\r\n            zIndex: 3\r\n        },\r\n        cursor: 'pointer'\r\n    }\r\n\r\n}));\r\n\r\n/*\r\n* Top menu of the grid with the tickers \r\n*  select a ticker to chose its dashboard\r\n*/\r\nexport function SelectMenu(props) {\r\n    const classes = useStyles();\r\n    const [scrollArrow, setScrollArrow] = useState(true);\r\n    const [identifiers, setIdentifiers] = useState([]);\r\n    const [isMaxLeft, setIsMaxLeft] = useState(false);\r\n    const [isMaxRight, setIsMaxRight] = useState(false);\r\n    const myRef = useRef(null)\r\n    const userId = useSelector(state => state.auth.id)\r\n    const token = useSelector(state => state.auth.token)\r\n\r\n    const executeScroll = (e) => {\r\n        // myRef.current.scrollLeft = myRef.current.scrollLeft + 5 * e.movementX//myRef.current.scrollLeft -e.offsetX + \"px\";\r\n        console.log(\"scrollWidth\", myRef.current.scrollWidth)\r\n        console.log(\"clientWidth\", myRef.current.clientWidth)\r\n        console.log(\"scrollLeft\", myRef.current.scrollLeft)\r\n    }\r\n    const scrollLeft = () => {\r\n        console.log(\"scrollWidth\", myRef.current.scrollWidth)\r\n        console.log(\"clientWidth\", myRef.current.clientWidth)\r\n        console.log(\"scrollLeft\", myRef.current.scrollLeft)\r\n        let sleft = myRef.current.scrollLeft + 120\r\n        console.log(\"sleft\", sleft)\r\n        myRef.current.scrollLeft = sleft\r\n        setIsMaxRight((myRef.current.scrollWidth - sleft) <= myRef.current.clientWidth)\r\n        setIsMaxLeft(sleft <= 0)\r\n\r\n    }\r\n\r\n    const scrollRight = () => {\r\n        let sleft = myRef.current.scrollLeft - 120\r\n        myRef.current.scrollLeft = sleft\r\n        setIsMaxLeft(sleft <= 0)\r\n        setIsMaxRight((myRef.current.scrollWidth - sleft) === myRef.current.clientWidth)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"scrollWidth-\", myRef.current.scrollWidth)\r\n        console.log(\"clientWidth-\", myRef.current.clientWidth)\r\n        setScrollArrow(myRef.current.clientWidth >= myRef.current.scrollWidth)\r\n    }, [myRef.current])\r\n\r\n    useEffect(() => {\r\n        getGridsIdentifiers(userId, token)\r\n            .then(res => {\r\n                setIdentifiers(res)\r\n            })\r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n        console.log(\"Getid\")\r\n        getGridsIdentifiers(userId, token)\r\n            .then(res => {\r\n                setIdentifiers(res)\r\n            })\r\n    }, [props.identifier, userId])\r\n\r\n\r\n    return (\r\n        <div className={classes.menuWrapper}>\r\n            <Grid item key={'arrback'} className={classes.arrowRight} hidden={scrollArrow || isMaxLeft} onClick={scrollRight}>\r\n                <IconButton size=\"small\" edge=\"start\">\r\n                    <ArrowBackIosIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <div className={classes.menu} ref={myRef}>\r\n                <Grid\r\n                    container\r\n                    spacing={1}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    wrap=\"nowrap\">\r\n\r\n                    {identifiers.map(el => {\r\n                        if (el !== props.identifier) {\r\n                            return (\r\n                                <Grid item key={el}>\r\n                                    <Paper elevation={2} className={classes.itens} onClick={() => props.selectDashboard(el)}>\r\n                                        <Typography\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            {el}\r\n                                        </Typography>\r\n                                    </Paper >\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    })}\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n            <Grid item key={'arrfoward'} className={classes.arrowLeft} hidden={scrollArrow || isMaxRight} onClick={scrollLeft}>\r\n                <IconButton size=\"small\">\r\n                    <ArrowForwardIosIcon />\r\n                </IconButton>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\n\r\nconst options = [\r\n    { value: 'note', label: 'Note', icon: <TextFieldsIcon /> },\r\n    // { value: 'card', label: 'Card', icon: <ViewDayIcon /> },\r\n    { value: 'table', label: 'Table', icon: <TableChartIcon /> },\r\n    { value: 'news', label: 'News', icon: <RssFeedIcon /> },\r\n    { value: 'pricechart', label: 'Price Chart', icon: <TrendingUpIcon /> },\r\n    { value: 'dividendchart', label: 'Dividend Chart', icon: <EqualizerIcon /> },\r\n    { value: 'swot', label: 'SWOT Analysis', icon: <AssignmentIcon /> },\r\n    { value: 'indicators', label: 'Indicators', icon: <LabelIcon /> },\r\n    { value: 'esg', label: 'ESG Risk', icon: <LabelIcon /> },\r\n    { value: 'multichart', label: 'Multicharts', icon: <TrendingUpIcon /> },\r\n    { value: 'statistics', label: 'Statistics', icon: <TrendingUpIcon /> },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n\r\n    },\r\n    small: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n        marginRight: theme.spacing(2),\r\n        color: theme.palette.background.paper\r\n    }\r\n}));\r\n\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, selectedValue, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle id=\"simple-dialog-title\">Add Visual</DialogTitle>\r\n            <List>\r\n                {options.map((option) => (\r\n                    <ListItem button onClick={() => handleListItemClick(option.value)} key={option.value}>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                {option.icon}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={option.label} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default function ActionMenu(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue] = React.useState(null);\r\n    const { onClose } = props;\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        if (value) {\r\n            onClose(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <span>\r\n            <span className={classes.fab} >\r\n                <Tooltip title=\"Delete Dashboard\">\r\n                    <Fab aria-label='Delete Dashboard' className={classes.small} onClick={props.handleDeletDashboard}>\r\n                        <DeleteIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n                <Tooltip title=\"Add Dashboard\">\r\n                    <Fab aria-label='Add Dashboard' className={classes.small} onClick={props.handleAddDashboard}>\r\n                        <LibraryAddIcon />\r\n                    </Fab >\r\n                </Tooltip>\r\n                <Tooltip title=\"Add Visual\">\r\n                    <Fab aria-label='Add Visual' color='primary' onClick={handleClickOpen}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n            </span>\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n        </span>\r\n    );\r\n}\r\n","import { React, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getTickers } from '../../../../shared/functions/requests.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst getExchange = (land) => {\r\n    const US = ['OOTC', 'XNYS', 'XNAS', 'ARCX', 'IEXG', 'XASE', 'BATS']\r\n    const BR = ['BVMF']\r\n    const FR = ['XPAR']\r\n    const DE = ['XETR']\r\n    switch (land) {\r\n        case \"BR\": {\r\n            return BR;\r\n            break;\r\n        }\r\n        case \"US\": {\r\n            return US;\r\n            break;\r\n        }\r\n        case \"FR\": {\r\n            return FR;\r\n            break;\r\n        }\r\n        case \"DE\": {\r\n            return DE;\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '13em',\r\n            height: '6.5em',\r\n            cursor: 'pointer',\r\n            margin: '5px'\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            whiteSpace: 'nowrap',\r\n            fontSize: 14,\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden'\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n        wrapper: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        filter: {\r\n            margin: '5px',\r\n            marginBottom: '25px',\r\n        },\r\n        formControl: {\r\n            marginLeft: '15px',\r\n            minWidth: 150,\r\n        },\r\n        formItem: {\r\n            display: 'flex',\r\n        },\r\n        small: {\r\n            width: theme.spacing(3),\r\n            height: theme.spacing(3),\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: theme.spacing(1)\r\n        },\r\n        searchFilter: {\r\n            marginTop: '5px'\r\n        }\r\n    }));\r\n    function TickerCard(props) {\r\n        const classes = useStyles();\r\n        let el = props.ticker\r\n        return (\r\n            <Card className={classes.root} onClick={() => props.chooseIdentifier(el.ticker)} >\r\n                <CardContent>\r\n                <Tooltip title={el.description} placement=\"top\">\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom label={el.description}>\r\n                        {el.description}\r\n                    </Typography>\r\n                    </Tooltip>\r\n\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {el.ticker}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n    export default function NewDashboard(props) {\r\n        const classes = useStyles();\r\n        const [tickers, setTickers] = useState(undefined)\r\n        const [exchange, setExchange] = useState('US')\r\n        const [search, setSearch] = useState('-all-')\r\n        const token = useSelector(state => state.auth.token)\r\n\r\n        useEffect(() => {\r\n            getTickers(0, 'A', getExchange('US'), token)\r\n                .then(res => {\r\n                    console.log(\"Res-----\", res)\r\n                    setTickers(res)\r\n                })\r\n        }, [])\r\n\r\n        const filter = (e) => {\r\n            let search_ = e.target.value === \"\" ? \"-all-\" : e.target.value\r\n            setSearch(search_)\r\n            getTickers(0, search_, getExchange(exchange), token)\r\n                .then(res => {\r\n                    setTickers(res)\r\n                })\r\n        }\r\n        const handleChange = (e) => {\r\n            setExchange(e.target.value)\r\n            getTickers(0, search, getExchange(e.target.value), token)\r\n                .then(res => {\r\n                    setTickers(res)\r\n                })\r\n        }\r\n\r\n        const imgUrl = `${process.env.PUBLIC_URL}/images/flags/`\r\n        if (tickers) {\r\n            return (\r\n                <>\r\n                    <div className={classes.filter}>\r\n                        <TextField id=\"standard-basic\" label=\"Search\" onChange={filter} className={classes.searchFilter}/>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Exchange</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={exchange}\r\n                                onChange={handleChange}\r\n\r\n                            >\r\n                                <MenuItem value={'BR'} >\r\n                                    <span className={classes.formItem}>\r\n                                        <Avatar alt=\"Remy Sharp\" src={imgUrl + 'br.png'} className={classes.small} /> Brazil\r\n                                </span>\r\n                                </MenuItem>\r\n                                <MenuItem value={'US'}>\r\n                                    <span className={classes.formItem}>\r\n                                        <Avatar alt=\"Remy Sharp\" src={imgUrl + 'us.png'} className={classes.small} /> US\r\n                                </span>\r\n                                </MenuItem>\r\n                                <MenuItem value={'FR'}>\r\n                                    <span className={classes.formItem}>\r\n                                        <Avatar alt=\"Remy Sharp\" src={imgUrl + 'fr.png'} className={classes.small} /> France\r\n                                </span>\r\n                                </MenuItem>\r\n                                <MenuItem value={'DE'}>\r\n                                    <span className={classes.formItem}>\r\n                                        <Avatar alt=\"Remy Sharp\" src={imgUrl + 'de.png'} className={classes.small} /> Germany\r\n                                </span>\r\n                                </MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={classes.wrapper}>\r\n                        {tickers.map(t => {\r\n                            return (\r\n                                <div key={'_' + Math.random().toString(36).substr(2, 9).toString()}>\r\n                                    <TickerCard ticker={t} {...props} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </>\r\n            )\r\n        } else {\r\n\r\n            return null\r\n        }\r\n    }\r\n","import * as React from 'react';\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useDemoData } from '@material-ui/x-grid-data-generator';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 10,\r\n        display: 'flex',\r\n    },\r\n    connected: {\r\n        marginRight: 2,\r\n    },\r\n    disconnected: {\r\n        marginRight: 2,\r\n    },\r\n    form: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 3,\r\n    },\r\n    selectType: {\r\n        marginLeft: '0.5em'\r\n    },\r\n}));\r\n\r\nexport default function ToolbarGrid() {\r\n    const { data } = useDemoData({\r\n        dataSet: 'Commodity',\r\n        rowLength: 3,\r\n        maxColumns: 4,\r\n    });\r\n\r\n    const addRow = () => {\r\n        //   rowsTemp = [...state.rows]\r\n        //         rowsTemp\r\n        //         .push({\r\n        //             id: state.rowNumber + 1,\r\n        //             h1: '',\r\n        //             h2: '',\r\n        //             h3: ''\r\n        //         });\r\n    }\r\n\r\n    const AddRowFooter = (props) => {\r\n        const classes = useStyles();\r\n\r\n        return (\r\n            <div className={classes.root} >\r\n                <AddCircleOutlineIcon fontSize=\"small\" onClick={addRow} />\r\n          Add Row\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n            <DataGrid\r\n                {...data}\r\n                components={{\r\n                    Toolbar: GridToolbar,\r\n                    Footer: AddRowFooter\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function TableGrid(props) {\r\n    return ({\r\n        type: 'table',\r\n        i: props.i,\r\n        content: (\r\n            <div key={props.i} data-grid={props} className=\"MuiPaper-elevation1\">\r\n                <span className=\"grid-menu\">\r\n                    <span onClick={props.onRemoveItem}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </span>\r\n                </span>\r\n                <ToolbarGrid />\r\n            </div>)\r\n    }\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n      zIndex: 4\r\n  },\r\n \r\n});\r\n\r\nexport default function StockInfos(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className={classes.root}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.data.longName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Exchange: {props.data.fullExchangeName} <br/>\r\n            Sector: {props.data.sector}<br/>\r\n            Industry: {props.data.industry}<br/>\r\n          </DialogContentText>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.data.longBusinessSummary}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n\r\n          <Button onClick={props.onClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n          <Link href={props.data.website} target=\"_blank\" color=\"inherit\">\r\n            <Button onClick={props.onClose} color=\"primary\" autoFocus>\r\n              Visit Website\r\n          </Button>\r\n          </Link>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { React, useState } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport {\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        padding: theme.spacing(1),\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function MainCard(props) {\r\n    const classes = useStyles();\r\n    const [menuActive, isMenuActive] = useState(false);\r\n    const theme = useTheme();\r\n\r\n\r\n    return (\r\n        <div className={classes.root} onMouseEnter={() => isMenuActive(true)} onMouseLeave={() => isMenuActive(false)}>\r\n            <span className=\"grid-menu\">\r\n\r\n                {props.openSettings &&\r\n                    <Fade in={menuActive} timeout={600}>\r\n                        <IconButton size=\"small\" onClick={props.openSettings}\r\n                            style={menuActive ? { color: theme.palette.text.primary } : { color: theme.palette.background.paper }} >\r\n                            <SettingsIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Fade>\r\n\r\n                }\r\n                {props.onRemoveItem &&\r\n                    <Fade in={menuActive} timeout={600}>\r\n                        < IconButton size=\"small\" onClick={() => props.onRemoveItem(props.i)}\r\n                            style={menuActive ? { color: theme.palette.text.primary } : { color: theme.palette.background.paper }}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Fade>\r\n                }\r\n            </span>\r\n            {props.children}\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\n","import { React, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Paper, CardContent, CardActions, Typography, LinearProgress } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getQuoteData } from '../../../../shared/functions/requests.js';\r\nimport Stockinfos from './StockInfos';\r\nimport { useSelector } from 'react-redux';\r\nimport Card from '../Card'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '210px',\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    content: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction OutlinedCard(props) {\r\n    const classes = useStyles();\r\n    let ticker = props.identifier\r\n    const [data, setData] = useState(undefined)\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const token = useSelector(state => state.auth.token)\r\n\r\n    useEffect(() => {\r\n        getQuoteData(ticker, token)\r\n            .then(res => {\r\n                console.log(\"Alcapaha data\", res)\r\n                setData(res)\r\n            })\r\n    }, [ticker])\r\n\r\n    if (data) {\r\n        return (\r\n            <Card {...props} close={false}>\r\n                {dialogOpen &&\r\n                    <Stockinfos onClose={() => setDialogOpen(false)} data={data} />}\r\n                \r\n                    <div className={classes.content}>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            {data.longName ? data.longName : <LinearProgress />}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {ticker}\r\n                        </Typography>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            {data.currency} {data.price}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            {data.sector}\r\n                        </Typography>\r\n\r\n                        <div className={classes.button}>\r\n                            <Button size=\"small\" onClick={() => setDialogOpen(true)}>Learn More</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Card>\r\n        );\r\n    } else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport function MainCardGrid(props) {\r\n\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <Paper key={props.i} data-grid={props}>\r\n                <OutlinedCard {...props} />\r\n            </Paper>)\r\n    }\r\n    );\r\n}\r\n","import { React, useState } from 'react';\r\nimport { TextField, Paper, CardContent, Card } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport CardWrapper from '../Card'\r\n\r\nconst NoteTextField = withStyles({\r\n    root: {\r\n        border: 'none',\r\n        '& label.Mui-focused': {\r\n            margin: '-10px',\r\n            border: 'none',\r\n        },\r\n        '& label': {\r\n            margin: '-10px',\r\n            border: 'none',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            width: '260px',\r\n            height: '100%',\r\n            '& fieldset': {\r\n                display: 'flex',\r\n                margin: '-15px',\r\n                border: 'none',\r\n\r\n            }\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        height: '100%'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction NoteCard(props) {\r\n    const classes = useStyles();\r\n    const [text, setText] = useState(props.params.text)\r\n\r\n    const changeParams = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n    const saveParams = (e) => {\r\n        props.changeParams({ id: props.i, content: { text: e.target.value } })\r\n    }\r\n    return (\r\n        <CardWrapper {...props}>\r\n                <CardContent>\r\n                    <NoteTextField\r\n                        className={classes.margin}\r\n                        label=\"Note\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        onChange={changeParams}\r\n                        onBlur={saveParams}\r\n                        value={text}\r\n                    />\r\n                </CardContent>\r\n        </CardWrapper>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport function NoteGrid(props) {\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <Paper key={props.i} data-grid={props}>\r\n\r\n                <NoteCard key={props.i} {...props} />\r\n\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Paper, Avatar, TextField, AccordionDetails, AccordionSummary, Accordion, Typography } from '@material-ui/core';\r\nimport Card from '../Card'\r\n\r\nimport { amber, lime, teal, orange } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    accordionExpandIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    accordion: {\r\n        marginRight: theme.spacing(1),\r\n        boxShadow: 'none',\r\n        borderRadius: '4px'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        display: 'flex',\r\n\r\n    },\r\n    strengths: {\r\n        color: theme.palette.getContrastText(amber['A700']),\r\n        backgroundColor: amber['A700'],\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(1)\r\n\r\n    },\r\n    weaknesses: {\r\n        color: theme.palette.getContrastText(lime['A700']),\r\n        backgroundColor: lime['A700'],\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(1)\r\n\r\n    },\r\n    opportunities: {\r\n        color: theme.palette.getContrastText(teal['A700']),\r\n        backgroundColor: teal['A700'],\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    threats: {\r\n        color: theme.palette.getContrastText(orange['A700']),\r\n        backgroundColor: orange['A700'],\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        marginRight: theme.spacing(1)\r\n\r\n    }\r\n}));\r\n\r\nfunction Swot(props) {\r\n    const classes = useStyles();\r\n    const [str1, setStr1] = useState(props.params.str1 || [])\r\n    const [str2, setStr2] = useState(props.params.str2 || [])\r\n    const [str3, setStr3] = useState(props.params.str3 || [])\r\n    const [wek1, setWek1] = useState(props.params.wek1 || [])\r\n    const [wek2, setWek2] = useState(props.params.wek2 || [])\r\n    const [wek3, setWek3] = useState(props.params.wek3 || [])\r\n    const [opt1, setOpt1] = useState(props.params.opt1 || [])\r\n    const [opt2, setOpt2] = useState(props.params.opt2 || [])\r\n    const [opt3, setOpt3] = useState(props.params.opt3 || [])\r\n    const [trt1, setTrt1] = useState(props.params.trt1 || [])\r\n    const [trt2, setTrt2] = useState(props.params.trt2 || [])\r\n    const [trt3, setTrt3] = useState(props.params.trt3 || [])\r\n\r\n    const saveParams = () => {\r\n        props.changeParams({\r\n            id: props.i,\r\n            content: {\r\n                str1: str1, str2: str2, str3: str3,\r\n                wek1: wek1, wek2: wek2, wek3: wek3,\r\n                opt1: opt1, opt2: opt2, opt3: opt3,\r\n                trt1: trt1, trt2: trt2, trt3: trt3\r\n            }\r\n        })\r\n    }\r\n    const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <Card {...props}>\r\n            <div >\r\n                <Accordion square expanded={expanded === 'strengths'} onChange={handleChange('strengths')} className={classes.accordion} >\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon fontSize=\"small\" className={classes.accordionExpandIcon} />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        onClick={() => console.log(\"Alcapaha\")}\r\n\r\n                    >\r\n                        <Typography className={classes.heading}>\r\n                            <Avatar className={classes.strengths}>\r\n                                <b>S</b>\r\n                            </Avatar>\r\n                            Strengths\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setStr1(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={str1}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setStr2(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={str2}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setStr3(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={str3}\r\n                            fullWidth\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion square expanded={expanded === 'weaknesses'} onChange={handleChange('weaknesses')} className={classes.accordion}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon fontSize=\"small\" className={classes.accordionExpandIcon} />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>\r\n                            <Avatar className={classes.weaknesses}>\r\n                                <b>W</b>\r\n                            </Avatar>\r\n                            Weaknesses</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setWek1(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={wek1}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setWek2(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={wek2}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setWek3(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={wek3}\r\n                            fullWidth\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion square expanded={expanded === 'opportunities'} onChange={handleChange('opportunities')} className={classes.accordion}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon fontSize=\"small\" className={classes.accordionExpandIcon} />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>\r\n                            <Avatar className={classes.opportunities}>\r\n                                <b>O</b>\r\n                            </Avatar>\r\n                            Opportunities\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setOpt1(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={opt1}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setOpt2(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={opt2}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setOpt3(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={opt3}\r\n                            fullWidth\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion square expanded={expanded === 'threats'} onChange={handleChange('threats')} className={classes.accordion}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon fontSize=\"small\" className={classes.accordionExpandIcon} />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>\r\n                            <Avatar className={classes.threats}>\r\n                                <b>T</b>\r\n                            </Avatar>\r\n                            Threats\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setTrt1(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={trt1}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setTrt2(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={trt2}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            id=\"standard-multiline-static\"\r\n                            label=\"\"\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={(e) => setTrt3(e.target.value)}\r\n                            onBlur={saveParams}\r\n                            value={trt3}\r\n                            fullWidth\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport function SwotGrid(props) {\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <Paper key={props.i} data-grid={props}>\r\n                <Swot key={props.i} {...props} />\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = (items) => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map((value) => {\r\n          const labelId = `transfer-list-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllRight}\r\n            disabled={left.length === 0}\r\n            aria-label=\"move all right\"\r\n          >\r\n            ≫\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleAllLeft}\r\n            disabled={right.length === 0}\r\n            aria-label=\"move all left\"\r\n          >\r\n            ≪\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { React, useState, useEffect } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport _ from 'lodash'\r\nimport { fetchIndicators } from '../../../../shared/functions/requests.js';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TransferList from './TransferList'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet init = {\r\n    'hist': [\r\n        { 'name': 'averageAnalystRating', 'value': '1.7 - Buy' },\r\n        { 'name': 'averageDailyVolume10Day', 'value': 1299200 },\r\n        { 'name': 'averageDailyVolume3Month', 'value': 1609206 },\r\n        { 'name': 'epsCurrentYear', 'value': 87.69 },\r\n        { 'name': 'epsForward', 'value': 94.9 },\r\n        { 'name': 'marketCap', 'value': 1604348936192 },]\r\n}\r\n\r\n\r\nexport default function Indicators(props) {\r\n    const { t } = useTranslation();\r\n    const [text, setText] = useState(props.params.text)\r\n    const [indicators, setIndicators] = useState(init)\r\n    const [edit, setEdit] = useState(false)\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n            position: 'relative',\r\n            overflow: 'auto',\r\n            height: '100%',\r\n            border: '1px solid rgba(255, 255, 255, 0.12)',\r\n            borderRadius: '5px',\r\n            '&::-webkit-scrollbar-thumb': {\r\n                background: 'rgba(255, 255, 255, 0.12)',\r\n                borderRadius: '5px',\r\n            },\r\n            '&::-webkit-scrollbar': {\r\n                width: '10px',\r\n                paddingTop: '10px'\r\n            }\r\n        },\r\n        title: {\r\n            margin: '8px',\r\n        },\r\n        list: {\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        listSection: {\r\n            backgroundColor: 'inherit',\r\n        },\r\n        ul: {\r\n            backgroundColor: 'inherit',\r\n            padding: 0,\r\n            borderTop: '#ffffff'\r\n        },\r\n        icon: {\r\n            cursor: 'pointer',\r\n            fontSize: '0.5em'\r\n        },\r\n        editMenu: {\r\n            position: 'absolute',\r\n            right: '1px',\r\n            cursor: 'pointer',\r\n            zIndex: 2,\r\n            paddingRight: '8px'\r\n        },\r\n        transferList: {\r\n            position: 'absolute',\r\n            zIndex: 5,\r\n\r\n\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n    const ticker = props.identifier\r\n\r\n    useEffect(() => {\r\n        fetchIndicators(ticker)\r\n            .then(res => {\r\n                console.log(\"Fetch indicators\", res)\r\n                let ind = {}\r\n                Object.keys(res).forEach((group) => {\r\n                    console.log(group)\r\n                    ind[group] = []\r\n                    Object.keys(res[group]).forEach((item) => {\r\n                        if (res[group][item]) {\r\n                            ind[group].push({\r\n                                name: item,\r\n                                value: res[group][item]\r\n                            })\r\n                            // console.log(\"item\", item, res[group][item])\r\n                        }\r\n                    })\r\n                })\r\n                setIndicators(ind)\r\n            })\r\n    }, [ticker])\r\n\r\n    const handleEdit = () => {\r\n        props.editIndicatorList(indicators)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {edit && <div className={classes.transferList}> <TransferList /></div>}\r\n            <div className={classes.root}>\r\n                <span className={classes.editMenu}>\r\n                    <span onClick={() => handleEdit()}>\r\n                        <EditIcon fontSize=\"small\" />\r\n                    </span>\r\n                </span>\r\n\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h6\">\r\n                        {t('indicators.title')}\r\n                    </Typography> </div>\r\n                <List className={classes.list} subheader={<li />} dense={true}>\r\n                    {Object.keys(indicators).map((group) => (\r\n                        <li key={`section-${group}`} className={classes.listSection}>\r\n                            <ul className={classes.ul}>\r\n                                <ListSubheader>{`${t('indicators.' + group)}`}</ListSubheader>\r\n                                {indicators[group].map((item) => (\r\n                                    <>\r\n                                        {item.value &&\r\n                                            <ListItem key={`item-${group}-${item.name}`}>\r\n                                                <ListItemText primary={`${item.value}`}\r\n                                                    secondary={t('indicators.' + item.name)} />\r\n\r\n                                                <ListItemIcon className={classes.icon} >\r\n                                                    <Link href={t('indicators.ref.' + item.name)} target=\"_blank\" color=\"inherit\">\r\n                                                        <Tooltip title={t('indicators.info.' + item.name)}>\r\n                                                            <InfoIcon />\r\n                                                        </Tooltip>\r\n                                                    </Link>\r\n                                                </ListItemIcon>\r\n                                            </ListItem>\r\n                                        }\r\n                                    </>\r\n                                ))}\r\n                            </ul>\r\n                        </li>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport function IndicatorsGrid(props) {\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <div key={props.i} data-grid={props}>\r\n                <span className=\"grid-menu\">\r\n\r\n                    <span onClick={() => props.onRemoveItem(props.i)}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </span>\r\n                </span>\r\n                <div className=\"grid-content\">\r\n                    <Indicators key={props.i} {...props} editIndicatorList={props.editIndicatorList} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    })\r\n\r\n}","import React from 'react'\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport InboxOutlinedIcon from '@material-ui/icons/InboxOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'block',\r\n        marginLeft: '40%',\r\n        position: 'relative',\r\n        \r\n    },\r\n    iconDoc:{\r\n        position: 'absolute',\r\n        fontSize: '3em',\r\n        marginLeft: '1.4vw',\r\n        marginTop: '-2vh',\r\n    },\r\n    boxIcon:{\r\n        position: 'absolute',\r\n        fontSize: '4em',\r\n        marginLeft: '1vw',\r\n        marginTop: '-1vh',\r\n    },\r\n    text: {\r\n        fontSize: '1.5em',\r\n        position: 'absolute',\r\n        marginLeft: '0.5vw',\r\n        marginTop: '4.2vh',\r\n    }\r\n});\r\n\r\nconst NoData = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <DescriptionIcon className={classes.iconDoc} />\r\n            <InboxOutlinedIcon className={classes.boxIcon} />\r\n            <span className={classes.text}>\r\n                No Data\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoData","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis,\r\n  XAxis\r\n} from \"recharts\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Box,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { fetchPriceData } from '../../../../shared/functions/requests'\r\nimport NoData from '../../../../shared/components/NoData'\r\nimport { useSelector} from 'react-redux';\r\n\r\n// const styles = (theme) => ({\r\n//   cardContentInner: {\r\n//     marginTop: theme.spacing(-4),\r\n//   },\r\n// });\r\n\r\nfunction labelFormatter(label) {\r\n  return new Date(Date.parse(label)).toLocaleDateString();\r\n}\r\n\r\n// function calculateMin(data, yKey, factor) {\r\n//   let max = Number.POSITIVE_INFINITY;\r\n//   data.forEach((element) => {\r\n//     if (max > element[yKey]) {\r\n//       max = element[yKey];\r\n//     }\r\n//   });\r\n//   return Math.round(max - max * factor);\r\n// }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      height: '100%',\r\n      border: '1px solid rgba(255, 255, 255, 0.12)',\r\n      borderRadius: '5px'\r\n  },\r\n}))\r\n\r\nconst itemHeight = 216;\r\nconst options = [\"1 Week\", \"1 Month\", \"6 Months\", \"1 Year\", \"Max\"];\r\n\r\nfunction PriceChart(props) {\r\n  const classes = useStyles();\r\n\r\n  // const { color, data, title, classes, theme, height } = props;\r\n  const { title } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(props.params.period);\r\n  const [chartData, setChartData] = useState([]);\r\n  const token = useSelector(state => state.auth.token)\r\n\r\n\r\n  let ticker = props.identifier\r\n  useEffect(() => {\r\n    fetchPriceData(ticker, selectedOption,token)\r\n      .then(res => {\r\n        res = res.PriceHistory.forEach(p => {\r\n          return {...p, date: new Date(p.date.year,p.date.month,p.date.dayOfMonth).toLocaleDateString()}\r\n        })\r\n        setChartData(res)\r\n      })\r\n  }, [ticker, token])\r\n\r\n  useEffect(() => {\r\n    firstCall()\r\n  }, [])\r\n\r\n  const firstCall = useCallback(() => {\r\n    selectOption(props.params.period)\r\n  },\r\n    [props.params.period]\r\n  );\r\n\r\n  const handleClick = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const formatter = useCallback(\r\n    (value) => {\r\n      return [value, title];\r\n    },\r\n    [title]\r\n  );\r\n\r\n  const getSubtitle = useCallback(() => {\r\n    switch (selectedOption) {\r\n      case \"1 Week\":\r\n        return \"Last week\";\r\n      case \"1 Month\":\r\n        return \"Last month\";\r\n      case \"6 Months\":\r\n        return \"Last 6 months\";\r\n      case \"1 Year\":\r\n        return \"Last Year\";\r\n      case \"Max\":\r\n        return \"Historic Period\"\r\n      default:\r\n        return \"\"\r\n        // throw new Error(\"No branch selected in switch-statement\");\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const selectOption = useCallback(\r\n    (selectedOption_) => {\r\n      setSelectedOption(selectedOption_);\r\n      let period = 300\r\n      switch (selectedOption_) {\r\n        case \"1 Week\":\r\n          period = 7\r\n          break;\r\n        case \"1 Month\":\r\n          period = 30\r\n          break;\r\n        case \"6 Months\":\r\n          period = 180;\r\n          break;\r\n        case \"1 Year\":\r\n          period = 365\r\n          break;\r\n        case \"Max\":\r\n          period = 30000;\r\n          break;\r\n        default:\r\n          period = 30\r\n      }\r\n      fetchPriceData(ticker, period,token)\r\n        .then(res => {\r\n          res = res.PriceHistory.map(p => {\r\n            return {...p, date: new Date(p.date.year,p.date.month,p.date.dayOfMonth).toLocaleDateString()}\r\n          })\r\n          console.log('fetched', res, token)\r\n          setChartData(res)\r\n        })\r\n      props.changeParams({ id: props.i, content: { period: selectedOption_ } })\r\n      handleClose();\r\n    },\r\n    [setSelectedOption, handleClose, props, ticker]\r\n  );\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n  return (\r\n    <Box height={'100px'} className={classes.root}>\r\n      <Card>\r\n        <Box pt={2} px={2} pb={4}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Typography variant=\"subtitle1\">{title}</Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                {getSubtitle()}\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"More\"\r\n                aria-owns={isOpen ? \"long-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                open={isOpen}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                  style: {\r\n                    maxHeight: itemHeight,\r\n                    width: 200,\r\n                  },\r\n                }}\r\n                disableScrollLock\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    selected={option === selectedOption}\r\n                    onClick={() => {\r\n                      selectOption(option);\r\n                    }}\r\n                    name={option}\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          <Box height={'73px'}>\r\n            {chartData ?\r\n\r\n              < ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={chartData} type=\"number\" margin={{ top: 0, left: 1, right: 1, bottom: 0 }}>\r\n              <Line type=\"monotone\" dataKey=\"close\" stroke=\"#8884d8\" strokeWidth={2} dot={false} />\r\n              <YAxis domain={['dataMin-0.2*dataMin', 'dataMax+0.2*dataMax']} hide />\r\n              <XAxis dataKey=\"date\" hide />\r\n              <Tooltip\r\n                labelFormatter={labelFormatter}\r\n                formatter={formatter}\r\n                cursor={false}\r\n                contentStyle={{\r\n                  border: \"none\",\r\n                  borderRadius: '5px',\r\n                  boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n                  color: 'black'\r\n                }}\r\n              \r\n              />\r\n            </LineChart>\r\n            </ResponsiveContainer>\r\n            : <NoData />}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box >\r\n  );\r\n}\r\n\r\nPriceChart.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  identifier: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default function LineChartCard(props) {\r\n\r\n  return ({\r\n    type: 'chart',\r\n    i: props.i,\r\n    content: (\r\n      <div key={props.i} data-grid={props} className=\"MuiPaper-elevation1\">\r\n        <span className=\"grid-menu\">\r\n          <span onClick={() => props.onRemoveItem(props.i)}>\r\n            <CloseIcon fontSize=\"small\" />\r\n          </span>\r\n        </span>\r\n        <PriceChart\r\n          {...props}\r\n          color={\"red\"}\r\n          height=\"100px\"\r\n          title=\"Price\" />\r\n      </div>\r\n    )\r\n  }\r\n  );\r\n}","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  YAxis,\r\n  XAxis\r\n} from \"recharts\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Box,\r\n  makeStyles\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { fetchDividendData } from '../../../../shared/functions/requests'\r\nimport NoData from '../../../../shared/components/NoData'\r\nimport { useSelector} from 'react-redux';\r\n\r\n\r\n// https://codesandbox.io/s/8m6n8?file=/src/Chart.jsx candelstick chart\r\n\r\n\r\n\r\nconst itemHeight = 216;\r\nconst options = [\"6 Months\", \"1 Year\", \"5 Years\", \"Max\"];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    border: '1px solid rgba(255, 255, 255, 0.12)',\r\n    borderRadius: '5px'\r\n  },\r\n}))\r\n\r\nfunction DividendChart(props) {\r\n  const classes = useStyles();\r\n\r\n  // const { color, data, title, classes, theme, height } = props;\r\n  const { title } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(props.params.period);\r\n  const [chartData, setChartData] = useState();\r\n  const token = useSelector(state => state.auth.token)\r\n\r\n  let ticker = props.identifier\r\n  useEffect(() => {\r\n    fetchDividendData(ticker, selectedOption, token)\r\n      .then(res => {\r\n        if (res.PriceHistory) {\r\n          res = res.PriceHistory.map(p => {\r\n            return {...p, date: new Date(p.date.year,p.date.month,p.date.dayOfMonth).toLocaleDateString()}\r\n          })\r\n          setChartData(res)\r\n        }\r\n      })\r\n  }, [ticker,token,selectedOption])\r\n\r\n  useEffect(() => {\r\n    firstCall()\r\n  }, [])\r\n\r\n  const firstCall = useCallback(() => {\r\n    selectOption(props.params.period)\r\n  }, [props.params.period]\r\n  );\r\n\r\n  const handleClick = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const formatter = useCallback(\r\n    (value) => {\r\n      return [value, title];\r\n    },\r\n    [title]\r\n  );\r\n\r\n  const getSubtitle = useCallback(() => {\r\n    switch (selectedOption) {\r\n      case \"6 Months\":\r\n        return \"Last semester\";\r\n      case \"1 Year\":\r\n        return \"Last year\";\r\n      case \"5 Years\":\r\n        return \"Last 5 years\";\r\n      case \"Max\":\r\n        return \"Historic Period\"\r\n      default:\r\n        return\r\n      // throw new Error(\"No branch selected in switch-statement\");\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const selectOption = useCallback(\r\n    (selectedOption_) => {\r\n      setSelectedOption(selectedOption_);\r\n      let period = 300\r\n      switch (selectedOption_) {\r\n        case \"6 Months\":\r\n          period = 180\r\n          break;\r\n        case \"1 Year\":\r\n          period = 365\r\n          break;\r\n        case \"5 Years\":\r\n          period = 1825;\r\n          break;\r\n        case \"Max\":\r\n          period = 30000;\r\n          break;\r\n        default:\r\n          period = 30\r\n      }\r\n      fetchDividendData(ticker, period, token)\r\n        .then(res => {\r\n          res = res.PriceHistory.map(p => {\r\n            return {...p, date: new Date(p.date.year,p.date.month,p.date.dayOfMonth).toLocaleDateString()}\r\n          })\r\n          setChartData(res)\r\n        })\r\n      props.changeParams({ id: props.i, content: { period: selectedOption_ } })\r\n      handleClose();\r\n    },\r\n    [setSelectedOption, handleClose, props, ticker,token]\r\n  );\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  return (\r\n    <Box height={'100px'} className={classes.root}>\r\n      <Card>\r\n        <Box pt={2} px={2} pb={4}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Typography variant=\"subtitle1\">{title}</Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                {getSubtitle()}\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"More\"\r\n                aria-owns={isOpen ? \"long-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                open={isOpen}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                  style: {\r\n                    maxHeight: itemHeight,\r\n                    width: 200,\r\n                  },\r\n                }}\r\n                disableScrollLock\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem\r\n                    key={option}\r\n                    selected={option === selectedOption}\r\n                    onClick={() => {\r\n                      selectOption(option);\r\n                    }}\r\n                    name={option}\r\n                  >\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          <Box height={'73px'}>\r\n            {chartData ?\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart data={chartData} type=\"number\" margin={{ top: 0, left: 1, right: 1, bottom: 0 }}>\r\n                  <Bar type=\"monotone\" dataKey=\"adjDividend\" fill=\"#8884d8\" strokeWidth={2} dot={false} />\r\n                  <YAxis domain={[0, 'dataMax']} hide />\r\n                  <XAxis dataKey=\"date\"  hide />\r\n                  <Tooltip\r\n                    formatter={formatter}\r\n                    cursor={false}\r\n                    contentStyle={{\r\n                      border: \"none\",\r\n                      borderRadius: '5px',\r\n                      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\r\n                      color: 'black'\r\n                    }}\r\n                  />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n              : <NoData />}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDividendChart.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  height: PropTypes.string.isRequired,\r\n  identifier: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function BarChartCard(props) {\r\n  return ({\r\n    type: 'chart',\r\n    i: props.i,\r\n    content: (\r\n      <div key={props.i} data-grid={props}>\r\n        <span className=\"grid-menu\">\r\n          <span onClick={() => props.onRemoveItem(props.i)}>\r\n            <CloseIcon fontSize=\"small\" />\r\n          </span>\r\n        </span>\r\n        <DividendChart\r\n          {...props}\r\n          color={\"red\"}\r\n          height=\"100px\"\r\n          title=\"Dividend\" />\r\n      </div>\r\n    )\r\n  }\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Dialog, ButtonGroup, Button, Switch, DialogTitle, ListItemText, Checkbox, DialogActions,\r\n    ListItem, List, Radio, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\r\n    InputLabel, Select, Tooltip, InputAdornment, MenuItem\r\n} from '@material-ui/core/';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { useEffect } from 'react';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport StopRoundedIcon from '@material-ui/icons/StopRounded';\r\nimport { color } from '@material-ui/system';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto',\r\n    },\r\n    paper: {\r\n        width: 200,\r\n        height: 230,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst useStyles_ = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n});\r\n\r\nconst LINE = 'line'\r\nconst BAR = 'bar'\r\nconst L = 'left'\r\nconst R = 'right'\r\n\r\nexport default function StatisticsSettings(props) {\r\n    const classes = useStyles_();\r\n    const theme = useTheme();\r\n    const colors = [\r\n        { name: 'Primary', color: theme.palette.primary.main },\r\n        { name: 'Secondary', color: theme.palette.secondary.main },\r\n        { name: 'Gray', color: theme.palette.grey[500] }\r\n    ]\r\n\r\n    const { onClose, selectedValue, saveSettings } = props;\r\n    // const [open, setOpen] = useState(props.open);\r\n    const [priceType, setPriceType] = useState(BAR);\r\n    const [priceActive, setPriceActive] = useState(false);\r\n    const [pricePos, setPricePos] = useState(L);\r\n    const [priceColor, setPriceColor] = useState(colors[0].color);\r\n    const [dividendType, setDividendType] = useState(BAR);\r\n    const [dividendPos, setDividendPos] = useState(R);\r\n    const [dividendActive, setDividendActive] = useState(false);\r\n    const [dividendColor, setDividendColor] = useState(colors[1].color);\r\n    const [financialType, setFinancialType] = useState(BAR);\r\n    const [financialActive, setFinancialActive] = useState(false);\r\n    const [financialPos, setFinancialPos] = useState(L);\r\n    const [financialColor, setFinancialColor] = useState(colors[2].color);\r\n    const [period, setPeriod] = useState(7);\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setOpen(!open)\r\n    }, [props.open])\r\n\r\n    const handleSave = (value) => {\r\n        const settings = []\r\n        charts.forEach(c => {\r\n            if (c.active) {\r\n                settings.push({ name: c.name, type: c.type, pos: c.pos, color: c.color, period: period })\r\n            }\r\n        })\r\n        saveSettings(settings);\r\n        setOpen(false);\r\n        // setSelectedValue(value);\r\n    };\r\n\r\n    const handleToggle = (value) => {\r\n    };\r\n\r\n    const charts = [\r\n        {\r\n            label: 'Price',\r\n            name: 'price',\r\n            type: priceType,\r\n            active: priceActive,\r\n            pos: pricePos,\r\n            color: priceColor,\r\n            setPos: setPricePos,\r\n            setter: setPriceType,\r\n            activate: setPriceActive,\r\n            setColor: setPriceColor,\r\n        },\r\n        {\r\n            label: 'Dividend',\r\n            name: 'dividend',\r\n            type: dividendType,\r\n            active: dividendActive,\r\n            pos: dividendPos,\r\n            color: dividendColor,\r\n            setPos: setDividendPos,\r\n            setter: setDividendType,\r\n            activate: setDividendActive,\r\n            setColor: setDividendColor,\r\n        },\r\n        {\r\n            label: 'Financial',\r\n            name: 'financial',\r\n            type: financialType,\r\n            active: financialActive,\r\n            pos: financialPos,\r\n            color: financialColor,\r\n            setPos: setFinancialPos,\r\n            setter: setFinancialType,\r\n            activate: setFinancialActive,\r\n            setColor: setFinancialColor,\r\n        },\r\n\r\n    ]\r\n\r\n    return (\r\n        <Dialog onClose={() => setOpen(false)} open={open} maxWidth=\"md\">\r\n            <DialogTitle id=\"simple-dialog-title\">Charts Options</DialogTitle>\r\n            <TableContainer component={Paper} className={classes.paper}>\r\n                <Table size=\"small\" >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Active</TableCell>\r\n                            <TableCell align=\"center\">Chart</TableCell>\r\n                            <TableCell align=\"center\">Bar</TableCell>\r\n                            <TableCell align=\"center\">Line</TableCell>\r\n                            <TableCell align=\"center\">Y-Axis Pos</TableCell>\r\n                            <TableCell align=\"center\">Color</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n\r\n                        {charts.map((value) => {\r\n                            const labelId = `transfer-list-item-${value}-label`;\r\n\r\n                            return (\r\n                                <TableRow key={\"settingsChart\" + value.name} role=\"listitem\" >\r\n                                    <TableCell >\r\n                                        <Switch size=\"small\" checked={value.active} onChange={() => value.activate(!value.active)} />\r\n                                    </TableCell>\r\n\r\n                                    <TableCell >\r\n                                        <ListItemText id={labelId} primary={`${value.label}`} />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Radio\r\n                                            checked={value.type === BAR}\r\n                                            onChange={() => value.setter(BAR)}\r\n                                            value={BAR}\r\n                                            inputProps={{ 'aria-label': 'A' }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n\r\n                                        <Radio\r\n                                            checked={value.type === LINE}\r\n                                            onChange={() => value.setter(LINE)}\r\n                                            value={LINE}\r\n                                            inputProps={{ 'aria-label': 'A' }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <ButtonGroup size=\"small\" >\r\n                                            <Button\r\n                                                variant={value.pos === L && 'contained'}\r\n                                                onClick={() => value.setPos(L)}>\r\n                                                Left\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant={value.pos === R && 'contained'}\r\n                                                onClick={() => value.setPos(R)}>\r\n                                                Right\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </TableCell>\r\n                                    <TableCell >\r\n\r\n                                        <Select\r\n\r\n                                            value={value.color}\r\n                                            onChange={e => value.setColor(e.target.value)}\r\n                                            variant=\"standard\"\r\n                                            renderValue={(selected) => <StopRoundedIcon style={{ color: selected }}  />}\r\n                                        >\r\n                                            {colors.map((c) => {\r\n                                                return <MenuItem value={c.color}>\r\n                                                    <StopRoundedIcon style={{ color: c.color }}  />\r\n                                                    {c.name}\r\n                                                </MenuItem >\r\n                                            })}\r\n\r\n\r\n                                        </Select>\r\n                                    </TableCell>\r\n                                </TableRow >\r\n\r\n                            );\r\n                        }\r\n                        )}\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>\r\n\r\n                                <Select\r\n                                    value={period}\r\n                                    onChange={e => setPeriod(e.target.value)}\r\n                                    label=\"Age\"\r\n                                    inputProps={{\r\n                                        name: 'age',\r\n                                    }}\r\n                                    variant=\"standard\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Tooltip title=\"Data period\">\r\n                                                <DateRangeIcon />\r\n                                            </Tooltip>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                >\r\n                                    <MenuItem value={7}>One Week</MenuItem>\r\n                                    <MenuItem value={31}>One Month</MenuItem>\r\n                                    <MenuItem value={180}>6 Months</MenuItem>\r\n                                    <MenuItem value={365}>1 Year</MenuItem>\r\n                                    <MenuItem value={1825}>5 Years</MenuItem>\r\n                                    <MenuItem value={15000}>Max</MenuItem>\r\n                                </Select>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleSave} color=\"primary\">\r\n                    Save changes\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog >\r\n    );\r\n}","import { React, useState, useEffect } from 'react';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\n\r\n// import { fetchEsgRisk } from '../../../../shared/functions/requests.js';\r\nimport { useSelector } from 'react-redux'\r\nimport { useCallback } from 'react';\r\nimport { ComposedChart, Bar, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport ChartSettings from './ChartSettings'\r\nimport { fetchPriceData, fetchDividendData, fetchFinancialHistory } from '../../../../shared/functions/requests'\r\nimport { format, compareAsc } from \"date-fns\";\r\nimport _ from 'lodash'\r\nimport Card from '../Card'\r\n\r\nimport {\r\n    Paper,\r\n    Grid,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        padding: theme.spacing(1),\r\n    },\r\n    header: {\r\n        height: '30%',\r\n        padding: theme.spacing(2),\r\n    },\r\n    chart: {\r\n        padding: theme.spacing(1),\r\n        height: '70%',\r\n    },\r\n\r\n    chip: {\r\n        marginTop: theme.spacing(3),\r\n        margin: theme.spacing(2),\r\n    }\r\n\r\n}));\r\n\r\nconst CustomTooltip = props => {\r\n    const { active, payload, label } = props;\r\n    if (active) {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    {label ? format(label, \"yyyy-MM-dd\") : \" -- \"}\r\n                </p>\r\n                <div>\r\n                    {payload && payload.map(pld => {\r\n                        return (\r\n                            <p key={pld.dataKey}>{pld.dataKey}:\r\n                                {pld ? pld.payload[pld.dataKey].toFixed(2) : \" -- \"}</p>)\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n\r\nfunction BarChart_(props) {\r\n    const classes = useStyles();\r\n    // const { t } = useTranslation();\r\n    const ticker = props.identifier\r\n    const token = useSelector(state => state.auth.token)\r\n    const [configOpen, setConfigOpen] = useState(true);\r\n    const [charts, setCharts] = useState([]);\r\n    const [chartsData, setChartsData] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [subtitle, setSubtitle] = useState('');\r\n    const theme = useTheme();\r\n\r\n    const firstCall = useCallback(() => {\r\n        if (props.params.charts) {\r\n            saveSettings(props.params.charts)\r\n        } else {\r\n            setConfigOpen(!configOpen)\r\n        }\r\n    },\r\n        [props.params.charts]\r\n    );\r\n\r\n    useEffect(() => {\r\n        firstCall()\r\n    }, [])\r\n\r\n\r\n    const saveSettings = (settings) => {\r\n        let title_ = ''\r\n        let charts_ = []\r\n        let promises = settings.map(s => {\r\n            setSubtitle(s.period)\r\n            charts_.push({ name: s.name, type: s.type, pos: s.pos, color: s.color, period: s.period })\r\n            title_ = title_ !== '' ? title_ + ' | ' + _.capitalize(s.name) : _.capitalize(s.name)\r\n            switch (s.name) {\r\n                case \"price\": {\r\n                    return fetchPriceData(ticker, s.period, token)\r\n                }\r\n                case \"dividend\": {\r\n                    return fetchDividendData(ticker, s.period, token)\r\n                }\r\n                case \"financial\": {\r\n                    return fetchFinancialHistory(ticker, token)\r\n                }\r\n            }\r\n        })\r\n        Promise.allSettled(promises).\r\n            then((results) => {\r\n                console.log(\"Results\", results)\r\n                let chartsData_ = {}\r\n                results.forEach(r => {\r\n                    if (r.status === \"fulfilled\") {\r\n                        switch (r.value.type) {\r\n                            case \"price\": {\r\n                                r.value.PriceHistory.forEach(p => {\r\n                                    let date = new Date(p.date.year, p.date.month, p.date.dayOfMonth)\r\n                                    let data = chartsData_[date.getTime()] || { date: date }\r\n                                    data.price = p.close\r\n                                    chartsData_[date.getTime()] = data\r\n                                })\r\n                                break\r\n                            }\r\n                            case \"dividend\": {\r\n                                r.value.PriceHistory.forEach(p => {\r\n                                    let date = new Date(p.date.year, p.date.month, p.date.dayOfMonth)\r\n                                    let data = chartsData_[date.getTime()] || { date: date }\r\n                                    data.dividend = p.adjDividend\r\n                                    chartsData_[date.getTime()] = data\r\n                                })\r\n                                break\r\n\r\n                            }\r\n                            case \"financial\": {\r\n                                console.log(\"Alcpahaha doida\",r)\r\n                                r.value.values.filter(el => el.period === \"yearly\")\r\n                                    .forEach(p => {\r\n                                        let date = new Date(p.dateEpoch)\r\n                                        let data = chartsData_[date.getTime()] || { date: date }\r\n                                        data.financial = p.value\r\n                                        chartsData_[date.getTime()] = data\r\n                                    })\r\n                                    console.log(\"Chartdata\",chartsData_)\r\n                                break\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                setTitle(title_)\r\n                setChartsData(Object.values(chartsData_).sort((c1, c2) => compareAsc(c1.date, c2.date)))\r\n                setCharts([...charts_])\r\n                props.changeParams({\r\n                    id: props.i,\r\n                    content: { charts: charts_ }\r\n                })\r\n            }\r\n            );\r\n\r\n    }\r\n\r\n    const dateFormatter = date => {\r\n        return format(new Date(date), \"yyyy-MM-dd\");\r\n    };\r\n\r\n    return (\r\n        <Card openSettings={() => setConfigOpen(!configOpen)} {...props}>\r\n            <ChartSettings open={configOpen} saveSettings={saveSettings}></ChartSettings>\r\n            <div className={classes.header}>\r\n                <Grid\r\n                    justify=\"space-between\"\r\n                    alignItems=\"flex-start\"\r\n                    container spacing={1}>\r\n                    <Grid xs={6} >\r\n                        <Typography variant=\"subtitle1\">\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            Last {subtitle} Days\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n            <div className={classes.chart}>\r\n                {(chartsData.length > 0 && charts.length > 0) &&\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <ComposedChart\r\n                            width={500}\r\n                            height={300}\r\n                            data={chartsData}\r\n                            type=\"number\"\r\n                        >\r\n                            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\r\n                            <XAxis dataKey=\"date\" tickFormatter={dateFormatter} hide />\r\n                            <YAxis\r\n                                domain={[dataMin => (0.95 * dataMin), dataMax => (1.05 * dataMax)]}\r\n                                yAxisId=\"right\"\r\n                                orientation=\"right\"\r\n                                hide\r\n                            />\r\n                            <YAxis\r\n                                domain={[dataMin => (0.95 * dataMin), dataMax => (1.05 * dataMax)]}\r\n                                yAxisId=\"left\"\r\n                                orientation=\"left\"\r\n                                hide\r\n                            />\r\n                            <Tooltip content={<CustomTooltip />} />\r\n                            {/* <Legend /> */}\r\n                            {charts.map(el => {\r\n                                if (el.type === 'bar') {\r\n                                    return <Bar\r\n                                        key={el.name}\r\n                                        dataKey={el.name}\r\n                                        barSize={300}\r\n                                        fill={el.color}\r\n                                        yAxisId={el.pos}\r\n                                        name={el.name} />\r\n                                } else if (el.type === 'line') {\r\n                                    return <Line\r\n                                        key={el.name}\r\n                                        dataKey={el.name}\r\n                                        stroke={el.color}\r\n                                        strokeWidth={2}\r\n                                        dot={false}\r\n                                        yAxisId={el.pos}\r\n                                        connectNulls />\r\n                                }\r\n                            })}\r\n\r\n                        </ComposedChart>\r\n                    </ResponsiveContainer>\r\n                }\r\n\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function MultichartsCard(props) {\r\n\r\n    return ({\r\n        type: 'multichart',\r\n        i: props.i,\r\n        content: (\r\n            <Paper key={props.i} data-grid={props}>\r\n                <BarChart_ key={props.i} {...props} />\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n}","import { React, useState, useEffect } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport { green, red, yellow } from '@material-ui/core/colors';\r\nimport { amber, lime, teal, orange } from '@material-ui/core/colors';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { fetchEsgRisk } from '../../../../shared/functions/requests.js';\r\nimport { useSelector } from 'react-redux'\r\nimport { useCallback } from 'react';\r\nimport Card from '../Card'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nlet esgs = {\r\n    performance: 'UNDER_PERF',\r\n    scores: [\r\n        {\r\n            title: 'EsgScore',\r\n            value: 17.37,\r\n            peers: [\r\n                {\r\n                    value: 13.41,\r\n                    label: 'Min',\r\n                },\r\n                {\r\n                    value: 22.23,\r\n                    label: 'Avg',\r\n                },\r\n                {\r\n                    value: 36.78,\r\n                    label: 'Max',\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: 'Governance',\r\n            value: 6.5,\r\n            peers: [\r\n                {\r\n                    value: 3.81,\r\n                    label: 'Min',\r\n                },\r\n                {\r\n                    value: 7.21,\r\n                    label: 'Avg',\r\n                },\r\n                {\r\n                    value: 9.79,\r\n                    label: 'Max',\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            title: 'Social',\r\n            value: 10.42,\r\n            peers: [\r\n                {\r\n                    value: 4.29,\r\n                    label: 'Min',\r\n                },\r\n                {\r\n                    value: 8.60,\r\n                    label: 'Avg',\r\n                },\r\n                {\r\n                    value: 11.45,\r\n                    label: 'Max',\r\n                },\r\n            ]\r\n\r\n        },\r\n        {\r\n            title: 'Environment',\r\n            value: 2.45,\r\n            peers: [\r\n                {\r\n                    value: 2.05,\r\n                    label: 'Min',\r\n                },\r\n                {\r\n                    value: 5.60,\r\n                    label: 'Avg',\r\n                },\r\n                {\r\n                    value: 9.17,\r\n                    label: 'Max',\r\n                },\r\n            ]\r\n        },\r\n    ]\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    },\r\n    header: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    slider: {\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n    },\r\n    chip: {\r\n        marginTop: theme.spacing(3),\r\n        margin: theme.spacing(2),\r\n    }\r\n\r\n}));\r\n\r\nfunction EsgCard(props) {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [esgs, setEsgs] = useState(undefined)\r\n    const ticker = props.identifier\r\n    const token = useSelector(state => state.auth.token)\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    useEffect(() => {\r\n        fetchEsgRisk(ticker, token)\r\n            .then(res => {\r\n                console.log(\"fetchEsgRisk\", res)\r\n                setEsgs(res)\r\n            })\r\n            .catch((e) => enqueueSnackbar(\"No ESG data for This stock\", { variant: 'warning' })\r\n            )\r\n    }, [ticker, token])\r\n\r\n    function valuetext(value) {\r\n        return `${value}°C`;\r\n    }\r\n\r\n    const getColor = (esg) => {\r\n        return (\r\n            esg.value <\r\n                (esg.peers.find(p => p.label === 'Avg').value - 0.1 * esg.peers.find(p => p.label === 'Avg').value)\r\n                ? lime['A700']\r\n                :\r\n                esg.value >\r\n                    (esg.peers.find(p => p.label === 'Avg').value + 0.1 * esg.peers.find(p => p.label === 'Avg').value)\r\n                    ? orange['A700']\r\n                    : amber['A700'])\r\n\r\n    }\r\n    return (\r\n        <Card {...props}>\r\n            {esgs &&\r\n                <Grid container spacing={4}>\r\n                    <Grid item xs={12}>\r\n                        <div className={classes.header}>\r\n                            <Typography variant=\"h6\" >\r\n                                ESG Risk\r\n                                <EcoIcon style={{ color: green[500] }} />\r\n                                <Chip variant=\"outlined\" size=\"small\" label={t('esg.' + esgs.performance)} />\r\n                            </Typography>\r\n\r\n                        </div>\r\n                    </Grid>\r\n                    {esgs.scores.map(esg => {\r\n                        return (\r\n                            <Grid item xs={6}>\r\n                                <div className={classes.slider}>\r\n                                    <Typography gutterBottom>\r\n                                        {t('esg.' + esg.title)}\r\n                                    </Typography>\r\n\r\n                                    <Slider\r\n                                        track={false}\r\n                                        aria-labelledby=\"track-false-slider\"\r\n                                        getAriaValueText={valuetext}\r\n                                        value={esg.value}\r\n                                        min={esg.peers.find(p => p.label === 'Min').value}\r\n                                        step={0.1}\r\n                                        max={esg.peers.find(p => p.label === 'Max').value}\r\n                                        marks={esg.peers}\r\n                                        valueLabelDisplay=\"auto\"\r\n                                        style={{ color: getColor(esg) }}\r\n\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n\r\n                </Grid>\r\n            }\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport function EsgGrid(props) {\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <Paper key={props.i} data-grid={props}>\r\n                <EsgCard key={props.i} {...props} />\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    Menu, MenuItem\r\n} from '@material-ui/core/';\r\nimport { useEffect } from 'react';\r\nimport _ from 'lodash'\r\n\r\nexport default function StatisticsSettings(props) {\r\n    const { saveSettings } = props;\r\n    // const [open, setOpen] = useState(props.open);\r\n    const [statistics, setStatistics] = useState(props.statistics);\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n\r\n    useEffect(() => {\r\n        setOpen(!open)\r\n    }, [props.anchorEl])\r\n\r\n    useEffect(() => {\r\n        setStatistics(props.statistics)\r\n        console.log(\"Stats\", props.statistics)\r\n    }, [props.statistics])\r\n\r\n    const handleSave = (value) => {\r\n        saveSettings(value);\r\n        props.anchorEl[1](null)\r\n        setOpen(false);\r\n        // setSelectedValue(value);\r\n    };\r\n\r\n\r\n    return (\r\n        <Menu\r\n            id=\"simple-menu\"\r\n            keepMounted\r\n            open={Boolean(props.anchorEl[0])}\r\n            onClose={() => props.anchorEl[1](null)}\r\n            anchorEl={props.anchorEl[0]}\r\n        >\r\n\r\n            {statistics && statistics.map((value) => {\r\n                return (\r\n                    <MenuItem\r\n                        key={value.label}\r\n                        value={value.label}\r\n                        onClick={() => handleSave(value.label)}\r\n                    >\r\n                        {_.capitalize(value.label)}\r\n\r\n                    </MenuItem>\r\n                );\r\n            }\r\n            )}\r\n\r\n\r\n        </Menu >\r\n\r\n    );\r\n}\r\n\r\n","import { React, useState, useEffect, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { fetchStatistics } from '../../../../shared/functions/requests.js';\r\nimport { Paper, Grid, Typography, Radio, Tooltip, Link, Popover, ClickAwayListener } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CardWrapper from '../Card'\r\nimport { format } from \"date-fns\";\r\nimport StatisticsSettings from './StatisticsSettings'\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\nimport GradeOutlinedIcon from '@material-ui/icons/GradeOutlined';\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport { lime, teal, orange } from '@material-ui/core/colors';\r\n\r\nfunction Content(props) {\r\n    const { t } = useTranslation();\r\n    const [statistics, setStatistics] = useState([])\r\n    const [statisticSelected, setStatisticSelected] = useState()\r\n    const token = useSelector(state => state.auth.token)\r\n    const [settingsOpen, setSettingsOpen] = useState(true);\r\n    const [feedbackOpen, setFeedbackOpen] = useState(false);\r\n    const [feedback, setFeedback] = useState();\r\n    const [color, setColor] = useState();\r\n    const theme = useTheme();\r\n    const [anchorSettings, setAnchorSettings] = useState(null);\r\n    const [anchorFeedback, setAnchorFeedback] = useState(null);\r\n\r\n\r\n    const selectColor = (val) => {\r\n        switch (val) {\r\n            case 'dislike': {\r\n                return orange['A700']\r\n            }\r\n            case 'like': {\r\n                return lime['A700']\r\n            }\r\n            case 'star': {\r\n                return teal['A700']\r\n            }\r\n            default: {\r\n                return theme.palette.text.primary\r\n            }\r\n        }\r\n    }\r\n\r\n    const firstCall = useCallback(() => {\r\n        if (props.params.statisticSelected) {\r\n            setStatisticSelected(props.params.statisticSelected)\r\n            setColor(selectColor(props.params.feedback))\r\n            setFeedback(props.params.feedback)\r\n        } else {\r\n            setSettingsOpen(!settingsOpen)\r\n        }\r\n    },\r\n        [props.params, selectColor, settingsOpen, setColor]\r\n    );\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            margin: theme.spacing(1),\r\n            marginTop: theme.spacing(2) + 5,\r\n        },\r\n        paper: {\r\n            margin: 0.8,\r\n            padding: theme.spacing(2),\r\n            color: theme.palette.text.secondary,\r\n            height: 98\r\n        },\r\n        checkbox: {\r\n            align: 'right'\r\n        },\r\n        link: {\r\n            marginTop: '3px',\r\n            overflow: 'visible'\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n    const ticker = props.identifier\r\n\r\n    const formatType = (obj) => {\r\n        const type = obj.dataType\r\n        let v = obj.value\r\n        if (v) {\r\n            if (type === 'date') {\r\n\r\n                return format(new Date(v.year, v.month, v.dayOfMonth), \"yyyy-MM-dd\");\r\n\r\n            } else if (type === 'number') {\r\n\r\n                if (v > 1000000) {\r\n                    return (v / 1000000).toFixed(2) + 'B'\r\n                } else {\r\n\r\n                    return v.toFixed(2)\r\n                }\r\n\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    useEffect(() => {\r\n        fetchStatistics(ticker, token)\r\n            .then(res => {\r\n                let formated = res.map(r => {\r\n                    return { ...r, value: formatType(r) }\r\n                })\r\n                setStatistics(formated)\r\n                firstCall()\r\n\r\n            })\r\n    }, [ticker, token])\r\n\r\n    const saveSettings = (value) => {\r\n        setStatisticSelected(value)\r\n        setFeedback(undefined)\r\n        props.changeParams({\r\n            id: props.i,\r\n            content: { statisticSelected: value, feedback: undefined }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleFeedback = (val) => {\r\n        let newFeedback\r\n        if (feedback === val) {\r\n            setColor(undefined)\r\n            newFeedback = undefined\r\n        } else {\r\n            let color = selectColor(val)\r\n            setColor(color)\r\n            newFeedback = val\r\n        }\r\n        setFeedback(newFeedback)\r\n\r\n        props.changeParams({\r\n            id: props.i,\r\n            content: { statisticSelected: statisticSelected, feedback: newFeedback }\r\n        })\r\n        setFeedbackOpen(false)\r\n\r\n    }\r\n\r\n    const handleClickListItem = (event) => {\r\n        setAnchorSettings(event.currentTarget);\r\n    };\r\n    const handleMouseOverFeedback = (event) => {\r\n        if (feedback == undefined) {\r\n            setFeedbackOpen(true)\r\n            setAnchorFeedback(event.currentTarget)\r\n        }\r\n    }\r\n    const handleMouseOutFeedback = () => {\r\n        setFeedbackOpen(false)\r\n        setAnchorFeedback(null)\r\n    }\r\n\r\n    return (\r\n        <CardWrapper {...props} openSettings={handleClickListItem}>\r\n            <StatisticsSettings anchorEl={[anchorSettings, setAnchorSettings]} open={settingsOpen} saveSettings={saveSettings} statistics={statistics}></StatisticsSettings>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={0} >\r\n                    {statisticSelected &&\r\n                        <Grid item xs key={statisticSelected.label}>\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{ color: color }}\r\n\r\n                            // onMouseOut={handleMouseOutFeedback}\r\n                            >\r\n                                <b onMouseOver={handleMouseOverFeedback}\r\n\r\n                                    style={{ cursor: feedback && 'pointer' }}\r\n                                    onClick={feedback && (() => handleFeedback(undefined))}>\r\n                                    {statistics.find(s => s.label === statisticSelected)\r\n                                        && statistics.find(s => s.label === statisticSelected).value}\r\n                                </b>\r\n                                <ClickAwayListener onClickAway={handleMouseOutFeedback}>\r\n                                    <Popover\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'center',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'center',\r\n                                        }}\r\n                                        anchorEl={anchorFeedback}\r\n                                        open={feedbackOpen}\r\n                                    >\r\n                                        <Paper elevation={0} className={classes.feedback}>\r\n\r\n                                            <Radio className={classes.checkbox} value='star'\r\n                                                style={{ color: feedback === 'star' ? color : theme.palette.text.hint }}\r\n                                                checked={feedback === 'star'} onClick={(e) => handleFeedback(e.target.value)}\r\n                                                size=\"small\" icon={<GradeOutlinedIcon size=\"small\" />}\r\n                                                checkedIcon={<GradeIcon size=\"small\" />} name=\"checkedH\" />\r\n\r\n                                            <Radio className={classes.checkbox} value='like'\r\n                                                style={{ color: feedback === 'like' ? color : theme.palette.text.hint }}\r\n                                                checked={feedback === 'like'} onClick={(e) => handleFeedback(e.target.value)}\r\n                                                size=\"small\" icon={<ThumbUpOutlinedIcon size=\"small\" />}\r\n                                                checkedIcon={<ThumbUpIcon size=\"small\" />} name=\"checkedH\" />\r\n\r\n                                            <Radio className={classes.checkbox} value='dislike'\r\n                                                style={{ color: feedback === 'dislike' ? color : theme.palette.text.hint }}\r\n                                                checked={feedback === 'dislike'} onClick={(e) => handleFeedback(e.target.value)}\r\n                                                size=\"small\" icon={<ThumbDownOutlinedIcon size=\"small\" />}\r\n                                                checkedIcon={<ThumbDownIcon size=\"small\" />} name=\"checkedH\" />\r\n\r\n                                        </Paper>\r\n\r\n                                    </Popover>\r\n                                </ClickAwayListener>\r\n                            </Typography>\r\n                            <Link href={t('indicators.ref.' + statisticSelected)} target=\"_blank\" color=\"inherit\" >\r\n                                <Tooltip title={t('indicators.info.' + statisticSelected)}>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" noWrap className={classes.link}>\r\n                                        {t('indicators.' + statisticSelected)}\r\n                                    </Typography>\r\n                                </Tooltip>\r\n                            </Link>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        </CardWrapper>\r\n    );\r\n}\r\n\r\n\r\nexport function Statistics(props) {\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <Paper key={props.i} data-grid={props} style={{ overflow: 'hidden' }}>\r\n                <Content key={props.i} {...props} />\r\n            </Paper>\r\n        )\r\n    })\r\n\r\n}","\r\nimport React, { useEffect } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { fetchNews } from '../../../../shared/functions/requests.js';\r\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n        maxHeight: 220,\r\n        height: 209,\r\n        border: '1px solid rgba(255, 255, 255, 0.12)'\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    stepper: {\r\n        position:'absolute',\r\n        left: '7%',\r\n        maxWidth: '100%',\r\n        flexGrow: 1,\r\n        background: theme.palette.background.paper,\r\n        bottom: '5px'\r\n    },\r\n    authorDate: {\r\n        textOverflow: 'ellipsis!important',\r\n        overflow: 'hidden',\r\n    },\r\n    text: {\r\n        textOverflow: 'ellipsis!important',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'wrap',\r\n        display: 'inline-block'\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction News(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [news, setNews] = React.useState([])\r\n    let ticker = props.identifier\r\n\r\n    useEffect(() => {\r\n        fetchNews(ticker)\r\n            .then(res => {\r\n                let news_ = []\r\n                res.data.forEach(d => news_.push(d))\r\n                setNews(news_)\r\n            })\r\n    }, [ticker])\r\n\r\n    useEffect(() => {\r\n        // setNews(\r\n        //     [{\r\n        //         source: 'Zequin von Stadt',\r\n        //         date: 'Semptember 20, 2021',\r\n        //         text: 'In this article we discuss the 10 best cheap tech stocks to buy according to Mario Gabelli. If you want to skip our detailed analysis of Gabelli‘s history, and hedge fund performance, go directly to the 5 Best Cheap Tech Stocks to Buy According to Mario Gabelli. Mario Gabelli, the billionaire who heads New York-based […]',\r\n        //         link: 'https://finance.yahoo.com/news/10-best-cheap-tech-stocks-171446411.html?.tsrc=rss'\r\n        //     },\r\n        //     {\r\n        //         source: 'Zequin2 von Stadt',\r\n        //         date: 'Semptember 20, 2021',\r\n        //         text: 'In this 13article we discuss the 10 best cheap tech stocks to buy according to Mario Gabelli. If you want to skip our detailed analysis of Gabelli‘s history, and hedge fund performance, go directly to the 5 Best Cheap Tech Stocks to Buy According to Mario Gabelli. Mario Gabelli, the billionaire who heads New York-based […]',\r\n        //         link: 'https://finance.yahoo.com/news/10-best-cheap-tech-stocks-171446411.html?.tsrc=rss'\r\n        //     },\r\n        //     {\r\n        //         source: 'Marie de France',\r\n        //         date: 'Semptember 10, 2021',\r\n        //         text: 'NEW YORK, NY / ACCESSWIRE / April 29, 2021 / Weg S. (OTC PINK:WEGZY) will be discussing their earnings results in their 2021 First Quarter Earnings call to be held on April 29, 2021 at 11:00 AM Eastern Time.',\r\n        //         link: 'https://finance.yahoo.com/news/10-best-cheap-tech-stocks-171446411.html?.tsrc=rss'\r\n        //     }]\r\n        // )\r\n    }, [])\r\n    \r\n    const preventDefault = (event) => event.preventDefault();\r\n\r\n\r\n\r\n    function DotsMobileStepper() {\r\n\r\n        const handleNext = () => {\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        };\r\n\r\n        const handleBack = () => {\r\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n        };\r\n\r\n\r\n        useEffect(() => {\r\n            const interval = setInterval(() => {\r\n                if (activeStep === news.length - 1) {\r\n                    setActiveStep(0)\r\n                } else {\r\n                    handleNext()\r\n                }\r\n            }, 6000);\r\n\r\n            return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\r\n        }, [])\r\n\r\n        return (\r\n            <MobileStepper\r\n                variant=\"dots\"\r\n                steps={news.length}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                className={classes.stepper}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === news.length - 1}>\r\n\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n\r\n                    </Button>\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        <FiberNewIcon />\r\n                    </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={news[activeStep] && news[activeStep].source}\r\n                subheader={news[activeStep] && news[activeStep].date}\r\n                className={classes.authorDate}\r\n            />\r\n            <CardContent className={classes.contentWrapper}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>\r\n                    <Link href={news[activeStep] && news[activeStep].link} target=\"_blank\" color=\"inherit\">\r\n                        {news[activeStep] && news[activeStep].text}\r\n                    </Link>\r\n                </Typography>\r\n            </CardContent>\r\n            <DotsMobileStepper />\r\n            {/* <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                </IconButton>\r\n            </CardActions> */}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default function NewsGrid(props) {\r\n\r\n    return ({\r\n        type: 'note',\r\n        i: props.i,\r\n        content: (\r\n            <div key={props.i} data-grid={props} className=\"MuiPaper-elevation1\">\r\n                <span className=\"grid-menu\">\r\n                    <span onClick={() => props.onRemoveItem(props.i)}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </span>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </span>\r\n                <News {...props} />\r\n            </div>)\r\n    }\r\n    );\r\n}","import { TableGrid } from './table/Table';\r\nimport { MainCardGrid } from './card/MainCard';\r\nimport { NoteGrid } from './note/Note';\r\nimport { SwotGrid } from './swot/Swot';\r\nimport { IndicatorsGrid } from './indicators/Indicators';\r\nimport LineChartCard from './LineChart/LineChartCard';\r\nimport BarChartCard from './BarChart/BarChartCard';\r\nimport MultichartsCard from './multicharts/Multicharts';\r\nimport { EsgGrid } from './esg/Esg';\r\nimport { Statistics } from './statistics/Statistics';\r\nimport News from './news/News';\r\n\r\n\r\nexport const getCardProps = (type, functions, gridItems, ticker, id) => {\r\n  console.log(\"Get card prop incio\", type)\r\n  let props = {\r\n    params: {},\r\n    i: id,\r\n    x: (gridItems.items.length * 2) % (gridItems.cols || 12),\r\n    y: -99, // puts it at the bottom\r\n    identifier: ticker,\r\n    type: type,\r\n    onRemoveItem: (id) => functions.onRemoveItem(id),\r\n    changeParams: (p) => functions.changeParams(p)\r\n  }\r\n  let component\r\n  switch (type) {\r\n    case 'note':\r\n      console.log(\"note\")\r\n      props = {\r\n        ...props,\r\n        w: 3,\r\n        h: 2,\r\n        minH: 2,\r\n        maxW: 3,\r\n        minW: 2,\r\n      }\r\n      component = NoteGrid(props)\r\n      break\r\n    case 'card':\r\n      props = {\r\n        ...props,\r\n        w: 3,\r\n        h: 2,\r\n        minW: 2,\r\n        maxW: 3,\r\n        minH: 2,\r\n        maxH: 2,\r\n      }\r\n      component = MainCardGrid(props)\r\n      break\r\n    case 'table':\r\n      console.log(\"TABLE\")\r\n      props = {\r\n        ...props,\r\n        w: 6,\r\n        h: 2,\r\n      }\r\n      component = TableGrid(props)\r\n      break\r\n    case 'pricechart':\r\n      console.log(\"pricechart\")\r\n      props = {\r\n        ...props,\r\n        w: 5,\r\n        h: 2,\r\n        params: { period: \"1 Month\" },\r\n      }\r\n      component = LineChartCard(props)\r\n      break\r\n\r\n    case 'dividendchart':\r\n      console.log(\"dividendchart\")\r\n      props = {\r\n        ...props,\r\n        w: 5,\r\n        h: 2,\r\n        params: { period: \"6 Months\" },\r\n\r\n      }\r\n      component = BarChartCard(props)\r\n      break\r\n    case 'multichart':\r\n      console.log(\"multichart\")\r\n      props = {\r\n        ...props,\r\n        w: 5,\r\n        h: 2,\r\n        params: { period: 180 },\r\n\r\n      }\r\n      component = MultichartsCard(props)\r\n      break\r\n\r\n    case 'news':\r\n      console.log(\"news\")\r\n      props = {\r\n        ...props,\r\n        w: 3,\r\n        h: 2,\r\n        minH: 2,\r\n        maxH: 2,\r\n        minW: 3,\r\n      }\r\n      component = News(props)\r\n      break\r\n\r\n    case 'swot':\r\n      console.log(\"swot\")\r\n\r\n      props = {\r\n        ...props,\r\n        w: 4,\r\n        h: 2,\r\n        minH: 2,\r\n        minW: 4,\r\n      }\r\n      component = SwotGrid(props)\r\n      break\r\n\r\n    case 'indicators':\r\n      console.log(\"indicators\")\r\n      props = {\r\n        ...props,\r\n        w: 4,\r\n        h: 2,\r\n        minH: 2,\r\n        minW: 2,\r\n        // editIndicatorList: editIndicatorList\r\n      }\r\n      component = IndicatorsGrid(props)\r\n      break\r\n    case 'esg':\r\n      console.log(\"esg\")\r\n      props = {\r\n        ...props,\r\n        w: 5,\r\n        h: 3,\r\n        minH: 3,\r\n        minW: 5,\r\n        maxH: 3\r\n        // editIndicatorList: editIndicatorList\r\n      }\r\n      component = EsgGrid(props)\r\n      break\r\n    case 'statistics':\r\n      console.log(\"statistics\")\r\n      props = {\r\n        ...props,\r\n        w: 2,\r\n        h: 1,\r\n        minH: 1,\r\n        minW: 1,\r\n        maxH: 1,\r\n        maxW: 3,\r\n        // editIndicatorList: editIndicatorList\r\n      }\r\n      component = Statistics(props)\r\n      break\r\n\r\n  }\r\n  console.log(\"GET card props\", component, type)\r\n  return component\r\n}\r\n\r\n\r\nexport const getRestoredItems = (g, ticker, props, functions) => {\r\n  let gridItems_\r\n  let type = g.type\r\n  let iTemp = g.id\r\n  let params = g.params\r\n  props = {\r\n    ...props,\r\n    params: params,\r\n    onRemoveItem: (i) => functions.onRemoveItem(i),\r\n    changeParams: (p) => functions.changeParams(p)\r\n  }\r\n\r\n  if (type === 'card') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n      onRemoveItem: null\r\n    }\r\n    gridItems_ = MainCardGrid(props)\r\n\r\n\r\n\r\n  } else if (type === 'note') {\r\n    props = {\r\n      ...props,\r\n\r\n    }\r\n    gridItems_ = NoteGrid(props)\r\n\r\n  } else if (type === 'table') {\r\n\r\n    props = {\r\n      ...props,\r\n    }\r\n    gridItems_ = TableGrid(props)\r\n\r\n\r\n  } else if (type === 'pricechart') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = LineChartCard(props)\r\n\r\n  }\r\n\r\n  else if (type === 'dividendchart') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = BarChartCard(props)\r\n\r\n  }\r\n  else if (type === 'multichart') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = MultichartsCard(props)\r\n\r\n  }\r\n  else if (type === 'news') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = News(props)\r\n  }\r\n  else if (type === 'swot') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = SwotGrid(props)\r\n  }\r\n  else if (type === 'indicators') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = IndicatorsGrid(props)\r\n  }\r\n  else if (type === 'esg') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = EsgGrid(props)\r\n  }\r\n  else if (type === 'statistics') {\r\n    props = {\r\n      ...props,\r\n      identifier: ticker,\r\n    }\r\n    gridItems_ = Statistics(props)\r\n  }\r\n  return {\r\n    gridItems: gridItems_,\r\n    gridElements: { id: iTemp, type: type, params: params }\r\n  }\r\n}","import './Grid.css'\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RGL, { WidthProvider } from \"react-grid-layout\";\r\nimport _ from \"lodash\";\r\nimport { SelectMenu } from './selectmenu/SelectMenu';\r\nimport ActionMenu from './actionmenu/ActionMenu';\r\nimport NewDashboard from './newdashboard/NewDashboard';\r\nimport { useSelector } from 'react-redux';\r\nimport { saveGridElements, fetchGridElements, deleteGrid,fetchFinancialHistory } from '../../../shared/functions/requests.js';\r\nimport { getCardProps, getRestoredItems } from './gridProps'\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(RGL);\r\n/**\r\n * This layout demonstrates how to use a grid with a dynamic number of elements.\r\n */\r\nfunction Grid(props) {\r\n\r\n  let initialGridItems = {\r\n    items: []\r\n  };\r\n  const [gridItems, setGridItems] = useState(initialGridItems)\r\n  const [gridElements, setGridElements] = useState([])\r\n  const [allDashboards, setAllDashboards] = useState([])\r\n  const [layout, setLayout] = useState([])\r\n  const [identifier, setIdentifier] = useState(undefined)\r\n  const [gridId, setGridId] = useState(undefined)\r\n  const [gridStartup, setGridStartup] = useState({ id: undefined, identifier: undefined, newGridElements: undefined })\r\n  const [selectGrid, setSelectGrid] = useState({ id: undefined, identifier: undefined, newGridElements: undefined })\r\n  const userId = useSelector(state => state.auth.id)\r\n  const token = useSelector(state => state.auth.token)\r\n  const [firstSave, setFirstSave] = useState(true)\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  /**\r\n   * Restoure cards when starting\r\n   */\r\n  useEffect(() => {\r\n    fetchGridElements(userId, token)\r\n      .then(dashboards => {\r\n        if (dashboards.length > 0) {\r\n          setAllDashboards(dashboards)\r\n          let toBeRestored = dashboards.find(r => {\r\n            return r.active === true\r\n          })\r\n          if (toBeRestored) {\r\n\r\n            setGridId(toBeRestored.id)\r\n            setIdentifier(toBeRestored.identifier)\r\n            setGridStartup({ id: toBeRestored.id, identifier: toBeRestored.identifier, newGridElements: toBeRestored.gridElements })\r\n          }\r\n        }\r\n      })\r\n  }, [userId, token])\r\n\r\n  /**\r\n   * Triggers the restauration process whenn all states for startup are setted\r\n   */\r\n  useEffect(() => {\r\n    console.log(\"STARTANDO\", gridStartup.identifier,gridStartup.newGridElements)\r\n    if (typeof gridStartup.identifier !== 'undefined' && typeof gridStartup.newGridElements !== 'undefined') {\r\n      restoreItems(gridStartup.newGridElements, gridStartup.identifier)\r\n    }\r\n  }, [gridStartup])\r\n\r\n  const restoreItems = useCallback((newGridElements, newIdentifier) => {\r\n\r\n    let newLayout = []\r\n    setGridElements([])\r\n    newGridElements.forEach(g => {\r\n      onRestauringItems(g, newIdentifier, g.layout)\r\n      newLayout.push(g.layout)\r\n    })\r\n    setLayout(newLayout)\r\n  }, [gridItems, gridElements, layout, identifier, userId, gridId])\r\n\r\n  const onRestauringItems = useCallback((g, ticker, props) => {\r\n\r\n    const functions = {\r\n      onRemoveItem: onRemoveItem,\r\n      changeParams: changeParams\r\n    }\r\n\r\n    let res = getRestoredItems(g, ticker, props, functions)\r\n\r\n    setGridElements(prev => {\r\n      prev.push(res.gridElements)\r\n      return prev\r\n    })\r\n    setGridItems(prev => {\r\n      prev.items.push(res.gridItems)\r\n      return prev\r\n    }\r\n    );\r\n\r\n\r\n  }, [gridId, identifier])\r\n\r\n  /**\r\n   * Save on Layoutchange\r\n   */\r\n  useEffect(() => {\r\n\r\n    console.log(\"first s, gridid\", firstSave, gridId)\r\n    if (firstSave || gridId != undefined) {\r\n      if (gridElements && layout && gridElements.length == layout.length) {\r\n        if (identifier && gridElements && layout.length !== 0) {\r\n          saveGridElements(gridId, identifier, userId, gridElements, token)\r\n            .then(res => {\r\n              setGridId(res)\r\n            })\r\n          setAllDashboards(prev => {\r\n            prev.find(el => { return el.active === true }).gridElements = gridElements\r\n            prev.find(el => { return el.active === true }).layout = layout\r\n            setFirstSave(false)\r\n            return prev\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }, [layout])\r\n\r\n  /**\r\n   * Math.random should be unique because of its seeding algorithm.\r\n   * Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n   * after the decimal.\r\n   * @returns a random Id\r\n   */\r\n  const randomId = () => {\r\n    return '_' + Math.random().toString(36).substr(2, 9).toString();\r\n  }\r\n\r\n  const onAddItem = (type, ticker, iTemp = randomId()) => {\r\n    ticker = ticker ? ticker : identifier\r\n    const functions = {\r\n      onRemoveItem: onRemoveItem,\r\n      changeParams: changeParams\r\n    }\r\n    setGridItems(prev => {\r\n      prev.items.push(getCardProps(type, functions, gridItems, ticker, iTemp))\r\n      return prev\r\n    });\r\n    setGridElements(gridElements.concat({ id: iTemp, type: type, params: {} }))\r\n    setAllDashboards(prev => {\r\n      prev.find(d => d.active === true).gridElements.push({ id: iTemp, type: type, params: props.params })\r\n      return prev\r\n    })\r\n\r\n  }\r\n\r\n  // We're using the cols coming back from this to calculate where to add new items.\r\n  const onBreakpointChange = (breakpoint, cols) => {\r\n    // setGridItems({\r\n    //   breakpoint: breakpoint,\r\n    //   cols: cols\r\n    // });\r\n  }\r\n\r\n  const onLayoutChange = useCallback((layout_) => {\r\n    console.log(\"LAYOUT CHANGE\")\r\n\r\n    setGridElements(prev => {\r\n      if (prev) {\r\n        prev.forEach(g => {\r\n          g['layout'] = layout_.find(l => l.i === g.id)\r\n        })\r\n      }\r\n      return prev\r\n    })\r\n    setLayout(layout_)\r\n  }, [gridElements, layout])\r\n\r\n\r\n  function changeParams(params) {\r\n    let newGridEl\r\n    setGridElements(prev => {\r\n      var foundIndex = prev.findIndex(x => x.id === params.id);\r\n      prev[foundIndex].params = params.content;\r\n      newGridEl = prev\r\n      return prev\r\n\r\n    }\r\n    );\r\n    console.log(\"CHange params\", gridId, identifier, userId, newGridEl, token)\r\n    if (typeof identifier !== 'undefined' && typeof gridId !== 'undefined' && token && typeof newGridEl !== 'undefined') {\r\n      saveGridElements(gridId, identifier, userId, newGridEl, token)\r\n    }\r\n  }\r\n\r\n  function onRemoveItem(rId) {\r\n    setGridItems(prev => {\r\n      return {\r\n        ...prev,\r\n        items: prev.items.filter((el) => el.i !== rId)\r\n      }\r\n    }\r\n    );\r\n    setGridElements(prev => {\r\n      return prev.filter(el => el.id !== rId)\r\n    }\r\n    );\r\n    setAllDashboards(prev => {\r\n      prev.find(d => d.active === true).gridElements.filter(el => el.id !== rId)\r\n      return prev\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const chooseIdentifier = (ticker) => {\r\n    setAllDashboards(prev => {\r\n      prev.map(d => {\r\n        if (d.active === true) {\r\n          d.active = false\r\n        }\r\n        return d\r\n      })\r\n      prev.push({ active: true, gridElements: [], identifier: ticker, layout: [] })\r\n      return prev\r\n    })\r\n    setGridItems(initialGridItems)\r\n    setGridElements([])\r\n    setIdentifier(ticker)\r\n    setFirstSave(true)\r\n\r\n    onAddItem('card', ticker)\r\n  }\r\n\r\n  const newDashboard = () => {\r\n    setGridId(undefined)\r\n    setGridItems(initialGridItems)\r\n    setGridElements([])\r\n    setLayout([])\r\n    setIdentifier(undefined)\r\n    \r\n  }\r\n  \r\n  const selectDashboard = (el) => {\r\n    setGridItems(initialGridItems)\r\n    setGridElements([])\r\n    setLayout([])\r\n    let selectedDashboard\r\n    allDashboards.map(d => {\r\n      if (d.identifier === el) {\r\n        selectedDashboard = d\r\n        d.active = true\r\n      } else {\r\n        d.active = false\r\n      }\r\n      return\r\n    })\r\n    if (selectedDashboard) {\r\n      console.log(\"selectedDashboard.id, selectedDashboard.identifier, selectedDashboard.gridElements\",selectedDashboard.id, selectedDashboard.identifier, selectedDashboard.gridElements)\r\n      // setGridStartup(selectedDashboard.id, selectedDashboard.identifier, selectedDashboard.gridElements)\r\n      restoreItems(\r\n        selectedDashboard.gridElements,\r\n        selectedDashboard.identifier)\r\n        setGridId(selectedDashboard.id)\r\n        setIdentifier(selectedDashboard.identifier)\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Delete a Dashboard.\r\n   *\r\n   * @param {string} d The desired identifier to be deleted ex. \"AAPL\".\r\n   */\r\n  const deleteDashboard = () => {\r\n    let next\r\n\r\n    allDashboards.forEach(d => {\r\n      if (d.identifier !== identifier) {\r\n        next = d.identifier;\r\n        return\r\n      }\r\n    })\r\n\r\n    setAllDashboards(prev => {\r\n      return prev.filter(d => d.identifier !== identifier)\r\n    })\r\n    deleteGrid(gridId, token).then(() => {\r\n      notify('Dashboard Deleted', 'success')\r\n    }).catch(e => {\r\n      notify(e, 'error')\r\n    })\r\n    if (next) {\r\n      selectDashboard(next)\r\n    } else {\r\n      newDashboard()\r\n    }\r\n\r\n  }\r\n\r\n  const notify = (msg, variant) => {\r\n    // variant could be success, error, warning, info, or default\r\n    console.log('notify')\r\n    enqueueSnackbar(msg, { variant });\r\n  };\r\n\r\n\r\n  if (identifier) {\r\n    return (\r\n      <div>\r\n        <SelectMenu selectDashboard={selectDashboard} identifier={identifier} />\r\n        <ActionMenu onClose={onAddItem} handleDeletDashboard={deleteDashboard} handleAddDashboard={newDashboard} />\r\n        <ResponsiveReactGridLayout\r\n          onLayoutChange={onLayoutChange}\r\n          onBreakpointChange={onBreakpointChange}\r\n          {...props}\r\n          rowHeight={99}\r\n          columnHeight={100}\r\n        >\r\n          {_.map(gridItems.items, el => { return el.content })}\r\n        </ResponsiveReactGridLayout>\r\n        <br />\r\n        <button onClick={() => {\r\n          fetchFinancialHistory(identifier, token)\r\n          .then(res => console.log(\"alcpaah deu\", res))\r\n          }}>testfunction</button>\r\n        {/* <News/> */}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        {/* <NewGridDialog chooseIdentifier={(ticker) => { chooseIdentifier(ticker) }} /> */}\r\n        <NewDashboard chooseIdentifier={(ticker) => { chooseIdentifier(ticker) }} />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nGrid.propTypes = {\r\n  selectGrid: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Grid;","import React, { Fragment, useState, useCallback, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  MenuList,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  MenuItem,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst styles = {\r\n  listItemtext: {\r\n    paddingLeft: \"0 !important\",\r\n  },\r\n};\r\n\r\nfunction VertOptions(props) {\r\n  const { items, classes, color } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const handleOpen = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleOpen}\r\n        buttonRef={anchorEl}\r\n        style={{ color: color ? color : null }}\r\n        aria-describedby={id}\r\n        aria-label=\"More Options\"\r\n      >\r\n        <MoreVertIcon style={{ color: color ? color : null }} />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        onClose={handleClose}\r\n        disableScrollLock\r\n      >\r\n        <MenuList dense>\r\n          {items.map((item) => (\r\n            <MenuItem\r\n              key={item.name}\r\n              onClick={() => {\r\n                handleClose();\r\n                item.onClick();\r\n              }}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText className={classes.listItemtext}>\r\n                {item.name}\r\n              </ListItemText>\r\n            </MenuItem>\r\n          ))}\r\n        </MenuList>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nVertOptions.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(VertOptions);\r\n","import React, { useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport format from \"date-fns/format\";\r\nimport { GridListTileBar, withStyles } from \"@material-ui/core\";\r\nimport VertOptions from \"./VertOptions\";\r\n\r\nconst styles = {\r\n  imageContainer: {\r\n    width: \"100%\",\r\n    paddingTop: \"100%\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n  },\r\n  image: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"auto\",\r\n  },\r\n};\r\n\r\nfunction SelfAligningImage(props) {\r\n  const {\r\n    classes,\r\n    src,\r\n    title,\r\n    timeStamp,\r\n    options,\r\n    roundedBorder,\r\n    theme,\r\n  } = props;\r\n  const img = useRef();\r\n  const [hasMoreWidthThanHeight, setHasMoreWidthThanHeight] = useState(null);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n  const onLoad = useCallback(() => {\r\n    if (img.current.naturalHeight < img.current.naturalWidth) {\r\n      setHasMoreWidthThanHeight(true);\r\n    } else {\r\n      setHasMoreWidthThanHeight(false);\r\n    }\r\n    setHasLoaded(true);\r\n  }, [img, setHasLoaded, setHasMoreWidthThanHeight]);\r\n\r\n  return (\r\n    <div className={classes.imageContainer}>\r\n      <img\r\n        style={{\r\n          height: hasMoreWidthThanHeight ? \"100%\" : \"auto\",\r\n          width: hasMoreWidthThanHeight ? \"auto\" : \"100%\",\r\n          display: hasLoaded ? \"block\" : \"none\",\r\n          borderRadius: roundedBorder ? theme.shape.borderRadius : 0,\r\n        }}\r\n        ref={img}\r\n        className={classes.image}\r\n        onLoad={onLoad}\r\n        src={src}\r\n        alt=\"\"\r\n      />\r\n      {title && (\r\n        <GridListTileBar\r\n          title={title}\r\n          subtitle={format(new Date(timeStamp * 1000), \"PP - k:mm\", {\r\n            awareOfUnicodeTokens: true,\r\n          })}\r\n          actionIcon={\r\n            options.length > 0 && (\r\n              <VertOptions color={theme.palette.common.white} items={options} />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSelfAligningImage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  title: PropTypes.string,\r\n  timeStamp: PropTypes.number,\r\n  roundedBorder: PropTypes.bool,\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SelfAligningImage);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  TablePagination,\r\n  Divider,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SelfAligningImage from \"../../../shared/components/SelfAligningImage\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = {\r\n  dBlock: { display: \"block\" },\r\n  dNone: { display: \"none\" },\r\n  toolbar: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction PostContent(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    setPosts,\r\n    posts,\r\n    openAddPostModal,\r\n    classes,\r\n  } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\r\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\r\n    false\r\n  );\r\n\r\n  const closeDeletePostDialog = useCallback(() => {\r\n    setIsDeletePostDialogOpen(false);\r\n    setIsDeletePostDialogLoading(false);\r\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\r\n\r\n  const deletePost = useCallback(() => {\r\n    setIsDeletePostDialogLoading(true);\r\n    setTimeout(() => {\r\n      const _posts = [...posts];\r\n      const index = _posts.find((element) => element.id === deletePost.id);\r\n      _posts.splice(index, 1);\r\n      setPosts(_posts);\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been deleted\",\r\n      });\r\n      closeDeletePostDialog();\r\n    }, 1500);\r\n  }, [\r\n    posts,\r\n    setPosts,\r\n    setIsDeletePostDialogLoading,\r\n    pushMessageToSnackbar,\r\n    closeDeletePostDialog,\r\n  ]);\r\n\r\n  const onDelete = useCallback(() => {\r\n    setIsDeletePostDialogOpen(true);\r\n  }, [setIsDeletePostDialogOpen]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (__, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const printImageGrid = useCallback(() => {\r\n    if (posts.length > 0) {\r\n      return (\r\n        <Box p={1}>\r\n          <Grid container spacing={1}>\r\n            {posts\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((post) => (\r\n                <Grid item xs={6} sm={4} md={3} key={post.id}>\r\n                  <SelfAligningImage\r\n                    src={post.src}\r\n                    title={post.name}\r\n                    timeStamp={post.timestamp}\r\n                    options={[\r\n                      {\r\n                        name: \"Delete\",\r\n                        onClick: () => {\r\n                          onDelete(post);\r\n                        },\r\n                        icon: <DeleteIcon />,\r\n                      },\r\n                    ]}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box m={2}>\r\n        <HighlightedInformation>\r\n          No posts added yet. Click on &quot;NEW&quot; to create your first one.\r\n        </HighlightedInformation>\r\n      </Box>\r\n    );\r\n  }, [posts, onDelete, page]);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant=\"h6\">Your Posts</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={openAddPostModal}\r\n          disableElevation\r\n        >\r\n          Add Post\r\n        </Button>\r\n      </Toolbar>\r\n      <Divider />\r\n      {printImageGrid()}\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={posts.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"Previous Page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"Next Page\",\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        classes={{\r\n          select: classes.dNone,\r\n          selectIcon: classes.dNone,\r\n          actions: posts.length > 0 ? classes.dBlock : classes.dNone,\r\n          caption: posts.length > 0 ? classes.dBlock : classes.dNone,\r\n        }}\r\n        labelRowsPerPage=\"\"\r\n      />\r\n      <ConfirmationDialog\r\n        open={isDeletePostDialogOpen}\r\n        title=\"Confirmation\"\r\n        content=\"Do you really want to delete the post?\"\r\n        onClose={closeDeletePostDialog}\r\n        loading={isDeletePostDialogLoading}\r\n        onConfirm={deletePost}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nPostContent.propTypes = {\r\n  openAddPostModal: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(PostContent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  helpPadding: {\r\n    \"@media (max-width:  400px)\": {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    }\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nfunction ActionPaper(props) {\r\n  const {\r\n    theme,\r\n    classes,\r\n    title,\r\n    content,\r\n    maxWidth,\r\n    actions,\r\n    helpPadding,\r\n    fullWidthActions\r\n  } = props;\r\n  return (\r\n    <Box pt={1}>\r\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth] }}>\r\n        {title && <DialogTitle>{title}</DialogTitle>}\r\n        {content && (\r\n          <DialogContent\r\n            classes={helpPadding ? { root: classes.helpPadding } : null}\r\n          >\r\n            {content}\r\n          </DialogContent>\r\n        )}\r\n        {actions && (\r\n          <Box pb={2} pr={2}>\r\n            <DialogActions\r\n              classes={{ action: fullWidthActions ? classes.fullWidth : null }}\r\n            >\r\n              {actions}\r\n            </DialogActions>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nActionPaper.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.string\r\n  ]),\r\n  content: PropTypes.element,\r\n  maxWidth: PropTypes.string,\r\n  actions: PropTypes.element,\r\n  helpPadding: PropTypes.bool,\r\n  fullWidthActions: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  dialogPaper: { maxWidth: `${theme.breakpoints.values.md}px !important` },\r\n  dialogContent: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction ImageCropperDialog(props) {\r\n  const {\r\n    ImageCropper,\r\n    classes,\r\n    onClose,\r\n    open,\r\n    src,\r\n    onCrop,\r\n    aspectRatio,\r\n    theme,\r\n  } = props;\r\n  const [crop, setCrop] = useState(null);\r\n\r\n  const getCropFunctionFromChild = useCallback(\r\n    (cropFunction) => {\r\n      setCrop(() => cropFunction);\r\n    },\r\n    [setCrop]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onEscapeKeyDown={onClose}\r\n      classes={{ paper: classes.dialogPaper }}\r\n      style={{ overflowX: \"visible\" }}\r\n    >\r\n      <DialogContent className={classes.dialogContent}>\r\n        <ImageCropper\r\n          src={src}\r\n          setCropFunction={getCropFunctionFromChild}\r\n          onCrop={onCrop}\r\n          aspectRatio={aspectRatio}\r\n          color={theme.palette.primary.main}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Box mr={1}>\r\n          <Button onClick={onClose}>Close</Button>\r\n        </Box>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={crop}>\r\n          Crop\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nImageCropperDialog.propTypes = {\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onCrop: PropTypes.func.isRequired,\r\n  src: PropTypes.string,\r\n  aspectRatio: PropTypes.number,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ImageCropperDialog);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  floatButtonWrapper: {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n    zIndex: 1000,\r\n  },\r\n  inputRoot: {\r\n    width: 190,\r\n    \"@media (max-width:  400px)\": {\r\n      width: 160,\r\n    },\r\n    \"@media (max-width:  360px)\": {\r\n      width: 140,\r\n    },\r\n    \"@media (max-width:  340px)\": {\r\n      width: 120,\r\n    },\r\n  },\r\n  uploadIcon: {\r\n    fontSize: 48,\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  imgWrapper: { position: \"relative\" },\r\n  img: {\r\n    width: \"100%\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n  uploadText: {\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  emojiTextArea: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    marginRight: -1,\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction AddPostOptions(props) {\r\n  const {\r\n    Dropzone,\r\n    classes,\r\n    files,\r\n    deleteItem,\r\n    onDrop,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    DateTimePicker,\r\n    cropperFile,\r\n    onCrop,\r\n    onCropperClose,\r\n    uploadAt,\r\n    onChangeUploadAt,\r\n  } = props;\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option1\":\r\n          setOption1(value);\r\n          break;\r\n        case \"option2\":\r\n          setOption2(value);\r\n          break;\r\n        case \"option3\":\r\n          setOption3(value);\r\n          break;\r\n        case \"option4\":\r\n          setOption4(value);\r\n          break;\r\n        default:\r\n          throw new Error(\"No branch selected in switch-statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4]\r\n  );\r\n\r\n  const printFile = useCallback(() => {\r\n    if (files[0]) {\r\n      return (\r\n        <div className={classes.imgWrapper}>\r\n          <img\r\n            alt=\"uploaded item\"\r\n            src={files[0].preview}\r\n            className={classes.img}\r\n            style={{ height: 148 }}\r\n          />\r\n          <div className={classes.floatButtonWrapper}>\r\n            <IconButton onClick={deleteItem}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Dropzone accept=\"image/png, image/jpeg\" onDrop={onDrop} fullHeight>\r\n        <span className={classes.uploadText}>\r\n          Click / Drop file <br /> here\r\n        </span>\r\n      </Dropzone>\r\n    );\r\n  }, [onDrop, files, classes, deleteItem]);\r\n\r\n  const inputs = \r\n    [\r\n      {\r\n        state: option1,\r\n        label: \"Option 1\",\r\n        stateName: \"option1\",\r\n      },\r\n      {\r\n        state: option2,\r\n        label: \"Option 2\",\r\n        stateName: \"option2\",\r\n      },\r\n      {\r\n        state: option3,\r\n        label: \"Option 3\",\r\n        stateName: \"option3\",\r\n      },\r\n      {\r\n        state: option4,\r\n        label: \"Option 4\",\r\n        stateName: \"option4\",\r\n      },\r\n    ];\r\n\r\n  return (\r\n    <Fragment>\r\n      {ImageCropper && (\r\n        <ImageCropperDialog\r\n          open={cropperFile ? true : false}\r\n          ImageCropper={ImageCropper}\r\n          src={cropperFile ? cropperFile.preview : \"\"}\r\n          onCrop={onCrop}\r\n          onClose={onCropperClose}\r\n          aspectRatio={4 / 3}\r\n        />\r\n      )}\r\n      <Typography paragraph variant=\"h6\">\r\n        Upload Image\r\n      </Typography>\r\n      <Box mb={2}>\r\n        {EmojiTextArea && (\r\n          <EmojiTextArea\r\n            inputClassName={classes.emojiTextArea}\r\n            maxCharacters={2200}\r\n            rightContent={printFile()}\r\n            emojiSet=\"google\"\r\n          />\r\n        )}\r\n      </Box>\r\n      <Typography paragraph variant=\"h6\">\r\n        Options\r\n      </Typography>\r\n      <List disablePadding>\r\n        <Bordered disableVerticalPadding disableBorderRadius>\r\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\r\n            <ListItemText>\r\n              <Typography variant=\"body2\">Upload at</Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              {DateTimePicker && (\r\n                <DateTimePicker\r\n                  value={uploadAt}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                  onChange={onChangeUploadAt}\r\n                  disablePast\r\n                />\r\n              )}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          {inputs.map((element, index) => (\r\n            <ListItem\r\n              className=\"listItemLeftPadding\"\r\n              disableGutters\r\n              divider={index !== inputs.length - 1}\r\n              key={index}\r\n            >\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">{element.label}</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction>\r\n                  <Select\r\n                    value={element.state}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name={element.stateName}\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {inputOptions.map((innerElement) => (\r\n                      <MenuItem value={innerElement} key={innerElement}>\r\n                        {innerElement}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          ))}\r\n        </Bordered>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPostOptions.propTypes = {\r\n  onEmojiTextareaChange: PropTypes.func,\r\n  DateTimePicker: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  classes: PropTypes.object,\r\n  cropperFile: PropTypes.object,\r\n  onCrop: PropTypes.func,\r\n  onCropperClose: PropTypes.func,\r\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteItem: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  value: PropTypes.string,\r\n  characters: PropTypes.number,\r\n  uploadAt: PropTypes.instanceOf(Date),\r\n  onChangeUploadAt: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport AddPostOptions from \"./AddPostOptions\";\r\n\r\nfunction AddPost(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    Dropzone,\r\n    EmojiTextArea,\r\n    DateTimePicker,\r\n    ImageCropper,\r\n    onClose,\r\n  } = props;\r\n\r\n  const [files, setFiles] = useState([]);\r\n  const [uploadAt, setUploadAt] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  const [cropperFile, setCropperFile] = useState(null);\r\n\r\n  const acceptDrop = useCallback(\r\n    (file) => {\r\n      setFiles([file]);\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles, rejectedFiles) => {\r\n      if (acceptedFiles.length + rejectedFiles.length > 1) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"You cannot upload more than one file at once\",\r\n        });\r\n      } else if (acceptedFiles.length === 0) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"The file you wanted to upload isn't an image\",\r\n        });\r\n      } else if (acceptedFiles.length === 1) {\r\n        const file = acceptedFiles[0];\r\n        file.preview = URL.createObjectURL(file);\r\n        file.key = new Date().getTime();\r\n        setCropperFile(file);\r\n      }\r\n    },\r\n    [pushMessageToSnackbar, setCropperFile]\r\n  );\r\n\r\n  const onCropperClose = useCallback(() => {\r\n    setCropperFile(null);\r\n  }, [setCropperFile]);\r\n\r\n  const deleteItem = useCallback(() => {\r\n    setCropperFile(null);\r\n    setFiles([]);\r\n  }, [setCropperFile, setFiles]);\r\n\r\n  const onCrop = useCallback(\r\n    (dataUrl) => {\r\n      const file = { ...cropperFile };\r\n      file.preview = dataUrl;\r\n      acceptDrop(file);\r\n      setCropperFile(null);\r\n    },\r\n    [acceptDrop, cropperFile, setCropperFile]\r\n  );\r\n\r\n  const handleUpload = useCallback(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your post has been uploaded\",\r\n      });\r\n      onClose();\r\n    }, 1500);\r\n  }, [setLoading, onClose, pushMessageToSnackbar]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ActionPaper\r\n        helpPadding\r\n        maxWidth=\"md\"\r\n        content={\r\n          <AddPostOptions\r\n            EmojiTextArea={EmojiTextArea}\r\n            Dropzone={Dropzone}\r\n            files={files}\r\n            onDrop={onDrop}\r\n            deleteItem={deleteItem}\r\n            DateTimePicker={DateTimePicker}\r\n            uploadAt={uploadAt}\r\n            onChangeUploadAt={setUploadAt}\r\n            onCrop={onCrop}\r\n            ImageCropper={ImageCropper}\r\n            cropperFile={cropperFile}\r\n            onCropperClose={onCropperClose}\r\n          />\r\n        }\r\n        actions={\r\n          <Fragment>\r\n            <Box mr={1}>\r\n              <Button onClick={onClose} disabled={loading}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n            <Button\r\n              onClick={handleUpload}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={files.length === 0 || loading}\r\n            >\r\n              Upload {loading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPost.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  Dropzone: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostContent from \"./PostContent\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction Posts(props) {\r\n  const {\r\n    selectPosts,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    setPosts,\r\n  } = props;\r\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\r\n\r\n  const openAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(true);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  const closeAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(false);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  useEffect(() => {\r\n    selectPosts();\r\n  }, [selectPosts]);\r\n\r\n  if (isAddPostPaperOpen) {\r\n    return <AddPost\r\n      onClose={closeAddPostModal}\r\n      EmojiTextArea={EmojiTextArea}\r\n      ImageCropper={ImageCropper}\r\n      Dropzone={Dropzone}\r\n      DateTimePicker={DateTimePicker}\r\n      pushMessageToSnackbar={pushMessageToSnackbar}\r\n    />\r\n  }\r\n  return <PostContent\r\n    openAddPostModal={openAddPostModal}\r\n    posts={posts}\r\n    setPosts={setPosts}\r\n    pushMessageToSnackbar={pushMessageToSnackbar}\r\n  />\r\n}\r\n\r\nPosts.propTypes = {\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  selectPosts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chip } from \"@material-ui/core\";\r\nimport shadeColor from \"../functions/shadeColor\";\r\n\r\nfunction ColorfulChip(props) {\r\n  const { color, label, className } = props;\r\n  return (\r\n    <Chip\r\n      style={{\r\n        color: color,\r\n        backgroundColor: shadeColor(color, 0.7)\r\n      }}\r\n      label={label}\r\n      className={className ? className : null}\r\n    />\r\n  );\r\n}\r\n\r\nColorfulChip.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\r\n};\r\n\r\nexport default ColorfulChip;\r\n","function currencyPrettyPrint(value) {\r\n  // const dollars = cents / 100;\r\n  console.log(\"value\",value)\r\n  if(value){\r\n    return value.toLocaleString(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\"\r\n    });\r\n  } else {\r\n    return\r\n  }\r\n}\r\n\r\nexport default currencyPrettyPrint;\r\n","\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getAllOperations, getStocksPrices,test } from '../../../shared/functions/requests'\r\nimport ColorfulChip from \"../../../shared/components/ColorfulChip\";\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport _ from 'lodash'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst BUY = 1; const SELL = 2; const DIVIDEND = 3;\r\n\r\nconst getOperationLabel = (op) => {\r\n  let res = op === DIVIDEND ? 'Dividend' : op === BUY ? 'Buy' : 'Sell'\r\n  return res\r\n}\r\n\r\nexport default function SubscriptionTable(props) {\r\n  const [transactions, setTransactions] = useState(props.transactions);\r\n  const [currentPrices, setCurrentPrices] = useState([]);\r\n  const userId = useSelector(state => state.auth.id)\r\n  const token = useSelector(state => state.auth.token)\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n\r\n  const columns = [\r\n    {\r\n      field: \"asset\",\r\n      width: 150,\r\n      headerName: \"Asset\"\r\n    },\r\n    {\r\n      field: \"operation\",\r\n      width: 150,\r\n      headerName: \"Operation\",\r\n      valueGetter: (params) => {\r\n        return getOperationLabel(params.value)\r\n      }\r\n    },\r\n    {\r\n      field: \"value\",\r\n      type: 'number',\r\n      width: 130,\r\n      headerName: \"Price\",\r\n      valueGetter: (params) => {\r\n        return `$${params.value}`\r\n      }\r\n    },\r\n    {\r\n      field: \"shares\",\r\n      type: 'number',\r\n      width: 130,\r\n      headerName: \"Shares\",\r\n      valueGetter: (params) => {\r\n        return params.row.operation !== DIVIDEND ? params.value : '-'\r\n      }\r\n    },\r\n    {\r\n      field: \"total\",\r\n      width: 130,\r\n      headerName: \"Total\",\r\n      renderCell: (params) => {\r\n        return params.row.operation === BUY ? (\r\n          <Typography \r\n            color='inherit'\r\n            variant='body2'\r\n          >\r\n            {`${currencyPrettyPrint(\r\n              params.row.value * params.row.shares\r\n            )}`}\r\n            </Typography>\r\n        ) : params.row.operation === SELL ? (\r\n          \r\n          <Typography \r\n            color='inherit'\r\n            variant='body2'\r\n          >\r\n            {`${currencyPrettyPrint(params.row.value * params.row.shares)}`}\r\n          </Typography>\r\n        ) : (\r\n          <Typography \r\n            color='inherit'\r\n            variant='body2'\r\n          >\r\n            {`${currencyPrettyPrint(params.row.value)}`}\r\n          </Typography>\r\n          \r\n        )\r\n\r\n      }\r\n    },\r\n    {\r\n      field: \"result\",\r\n      width: 130,\r\n      headerName: \"Result\",\r\n      renderCell: (params) => {\r\n        let res = 100* (currentPrices[params.row.asset] - params.row.value ) / (params.row.value )\r\n        res = res.toFixed(2)\r\n        return params.row.operation === BUY ? (\r\n          res > 0 ? (\r\n            <ColorfulChip\r\n              label={`+${res} %`}\r\n              color={theme.palette.success.dark}\r\n            />) :\r\n            (\r\n              <ColorfulChip\r\n                label={`${res} %`}\r\n\r\n                color={theme.palette.error.dark}\r\n              />)\r\n        ) : (\r\n          ''\r\n        )\r\n\r\n      }\r\n    },\r\n    {\r\n      field: \"date\",\r\n      width: 150,\r\n      headerName: \"Date\",\r\n      renderCell: (params) => (\r\n        <>\r\n          {t('date', { date: new Date(params.value) })}\r\n        </>\r\n      )\r\n    },\r\n    {\r\n      field: \"actions\",\r\n      type: 'object',\r\n      width: 150,\r\n      headerName: \"Actions\",\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton aria-label=\"delete\" size='small' onClick={() => props.edit(params.row)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"delete\" size='small' onClick={() => props.delete(params.row.id)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      )\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setTransactions(props.transactions)\r\n    let tickers = _.uniqBy(props.transactions, 'asset').map(t => t.asset);\r\n    if (tickers.length > 0) {\r\n      getStocksPrices(tickers, token)\r\n        .then(res => {\r\n          setCurrentPrices(res)\r\n        })\r\n\r\n    }\r\n  }, [props.transactions,token])\r\n\r\n  const refreshOperations = useCallback(() => {\r\n    getAllOperations(userId, token)\r\n      .then(transactions => {\r\n        setTransactions(transactions)\r\n\r\n      })\r\n  }, [userId, token])\r\n\r\n  useEffect(() => {\r\n    refreshOperations()\r\n  }, [refreshOperations])\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <div style={{ display: 'flex', height: '100%' }}>\r\n        <div style={{ flexGrow: 1 }}>\r\n          <DataGrid rows={transactions} columns={columns} pageSize={5} />\r\n        </div>\r\n      </div>\r\n      <button onClick={() => test(['agora','agora','agora','agora','test','spark','Spark','spark'], token)}>test</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { PieChart, Pie, Tooltip, Cell, LineChart, Line, ResponsiveContainer, XAxis, YAxis } from \"recharts\";\r\nimport { getCurrentPortifolio, getCurrentPortifolioHistorical } from '../../../shared/functions/requests'\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst data01 = [\r\n    { asset: \"Group A\", totalValue: 400 },\r\n    { asset: \"Group B\", totalValue: 300 },\r\n    { asset: \"Group C\", totalValue: 300 },\r\n    { asset: \"Group D\", totalValue: 200 }\r\n];\r\nconst data02 = [\r\n    { asset: \"A1\", totalValue: 100 },\r\n    { asset: \"A2\", totalValue: 300 },\r\n    { asset: \"B1\", totalValue: 100 },\r\n    { asset: \"B2\", totalValue: 80 },\r\n    { asset: \"B3\", totalValue: 40 },\r\n    { asset: \"B4\", totalValue: 30 },\r\n    { asset: \"B5\", totalValue: 50 },\r\n    { asset: \"C1\", totalValue: 100 },\r\n    { asset: \"C2\", totalValue: 200 },\r\n    { asset: \"D1\", totalValue: 150 },\r\n    { asset: \"D2\", totalValue: 50 }\r\n];\r\n\r\n\r\nexport default function PortifolioChart() {\r\n    const userId = useSelector(state => state.auth.id)\r\n    const token = useSelector(state => state.auth.token)\r\n    const [assets, setAssets] = useState(data02)\r\n    const [sectors, setSectors] = useState(data01)\r\n    const [industries, setIndustries] = useState([])\r\n    const [history, setHistory] = useState([])\r\n\r\n\r\n    const test = () => {\r\n        getCurrentPortifolioHistorical(userId, token)\r\n            .then(res => {\r\n                console.log(\"getCurrentPortifolioHistorical\", res)\r\n                res = res.map(p => {\r\n                    return { value: p.close, date: new Date(p.date.year, p.date.month, p.date.dayOfMonth).toLocaleDateString() }\r\n                })\r\n                setHistory(res)\r\n            })\r\n        getCurrentPortifolio(userId, token)\r\n            .then(res => {\r\n                console.log(\"getCurrentPortifolio\", res)\r\n\r\n                setAssets(res.portifolio.sort((el1, el2) => {\r\n                    return el1.sector.localeCompare(el2.name)\r\n                }))\r\n                setSectors(res.sectors.sort((el1, el2) => {\r\n                    return el1.name.localeCompare(el2.name)\r\n                }))\r\n                setIndustries(res.industries)\r\n               \r\n            })\r\n    }\r\n\r\n    const CustomTooltip = ({ active, payload, label }) => {\r\n        if (active && payload && payload.length) {\r\n            return (\r\n                <div className=\"custom-tooltip\">\r\n                    <p className=\"label\">{payload[0].payload.asset || payload[0].payload.name}: {payload[0].payload.totalValue.toFixed(2)}</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\n\r\n    return (\r\n        <>\r\n            <PieChart width={800} height={400}>\r\n                <Pie\r\n                    data={sectors}\r\n                    dataKey=\"totalValue\"\r\n                    cx={200}\r\n                    cy={200}\r\n                    outerRadius={40}\r\n                    fill=\"#8884d8\"\r\n                >\r\n\r\n                </Pie>\r\n\r\n                <Pie\r\n                    data={assets}\r\n                    dataKey=\"totalValue\"\r\n                    cx={200}\r\n                    cy={200}\r\n                    innerRadius={50}\r\n                    outerRadius={70}\r\n                    fill=\"#82ca9d\"\r\n                    label\r\n                >\r\n                    {assets.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                    ))}\r\n                </Pie>\r\n                <Pie dataKey=\"totalValue\" data={industries} cx={350} cy={180} innerRadius={40} outerRadius={80} fill=\"#82ca9d\" />\r\n\r\n                <Tooltip content={<CustomTooltip />} />\r\n            </PieChart>\r\n            <ResponsiveContainer width={350} height={200}>  \r\n                <LineChart width={300} height={100} data={history}>\r\n                    <XAxis dataKey=\"date\" hide />\r\n                    <YAxis domain={[0, 'dataMax+0.2*dataMax']} hide />\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} />\r\n\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n            <button onClick={test}> get Current portifolio</button>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ListItemText, Button, Toolbar, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    justifyContent: \"space-between\"\r\n  }\r\n};\r\n\r\nfunction SubscriptionInfo(props) {\r\n  const { classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <ListItemText primary=\"Status\" secondary=\"Premium Account\" />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={openAddBalanceDialog}\r\n        disableElevation\r\n      >\r\n        Add Operation\r\n      </Button>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nSubscriptionInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SubscriptionInfo);\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextField, InputAdornment, Grid } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst BUY = 1; const SELL = 2; const DIVIDEND = 3;\r\n// const useStyles = makeStyles((theme) => ({\r\n//   dialog: {\r\n//     width: '100',\r\n//   },\r\n// }))\r\n\r\nconst validationError_ = {\r\n  asset: { status: false, msg: '' },\r\n  value: { status: false, msg: '' },\r\n  shares: { status: false, msg: '' },\r\n  date: { status: false, msg: '' },\r\n}\r\n\r\nexport default function AddOperadionDialog(props) {\r\n  const [open, setOpen] = React.useState(props.open);\r\n  const [operation, setOperation] = React.useState(BUY);\r\n  const [asset, setAsset] = React.useState();\r\n  const [exchange, setExchange] = React.useState();\r\n  const [value, setValue] = React.useState(0);\r\n  const [shares, setShares] = React.useState(0);\r\n  const [date, setDate] = React.useState((new Date()).toLocaleDateString());\r\n  const [id, setId] = React.useState();\r\n  const [validationError, setValidationError] = React.useState(validationError_);\r\n  const closeDialog = props.closeDialog\r\n  // const classes = useStyles();\r\n\r\n  const validadeOperation = () => {\r\n    let validation = validationError_\r\n    let flag = true\r\n    if (asset === '' || asset === undefined) {\r\n      validation.asset.status = true\r\n      validation.asset.msg = 'Choose your asset'\r\n      flag = false\r\n    }\r\n    if (value === 0 && operation === DIVIDEND) {\r\n      validation.value.status = true\r\n      validation.value.msg = 'Dividend can not be 0'\r\n      flag = false\r\n    }\r\n    if (shares <= 0 && operation !== DIVIDEND) {\r\n      validation.shares.status = true\r\n      validation.value.msg = 'Shares can not be equal or less than 0'\r\n      flag = false\r\n    }\r\n    setValidationError(prev => {\r\n      return { ...prev, ...validation }\r\n    })\r\n    return flag\r\n  }\r\n  const handleSave = () => {\r\n    let op = {\r\n      id: id,\r\n      asset: asset,\r\n      value: value,\r\n      shares: operation === SELL ? -shares : shares,\r\n      date: new Date(date).getTime(),\r\n      operation: operation }\r\n\r\n    if (validadeOperation()) {\r\n      if (id) {\r\n        props.editOperation(op)\r\n      } else {\r\n        props.saveOperation(op)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setId(props.transaction.id)\r\n    setOperation(props.transaction.operation)\r\n    setAsset(props.transaction.asset)\r\n    setExchange(props.transaction.exchange)\r\n    setValue(props.transaction.value)\r\n    setShares(Math.abs(props.transaction.shares))\r\n    const date = new Date(props.transaction.date)\r\n    setDate(date.getFullYear() +\r\n      '-' + (date.getMonth() < 10 ? '0' + date.getMonth() : date.getMonth()) +\r\n      '-' + (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()))\r\n  }, [props.transaction])\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n  }, [props.open])\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={closeDialog} maxWidth={'sm'}>\r\n        <DialogTitle id=\"form-dialog-title\">Operate</DialogTitle>\r\n        <DialogContent>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid>\r\n\r\n              <Button\r\n                variant={operation === BUY ? 'contained' : \"outlined\"}\r\n                color=\"primary\"\r\n                onClick={() => setOperation(BUY)}>\r\n                Buy\r\n            </Button>\r\n            </Grid>\r\n            <Grid>\r\n              <Button\r\n                variant={operation === SELL ? 'contained' : \"outlined\"}\r\n                color=\"primary\"\r\n                onClick={() => setOperation(SELL)}>\r\n                Sell\r\n            </Button>\r\n            </Grid>\r\n            <Grid>\r\n              <Button variant={operation === DIVIDEND ? 'contained' : \"outlined\"}\r\n                color=\"primary\"\r\n                onClick={() => setOperation(DIVIDEND)}>\r\n                Dividend\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container spacing={2} justify=\"space-between\">\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                required\r\n                autoFocus\r\n                onChange={(e) => setAsset(e.target.value)}\r\n                value={asset}\r\n                id=\"name\"\r\n                label=\"Asset\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                error={validationError.asset.status}\r\n                helperText={validationError.asset.msg}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n\r\n              <TextField\r\n                required\r\n                onChange={(e) => setExchange(e.target.value)}\r\n                // error={amountError ? true : false}\r\n                // helperText={amountError}\r\n                value={exchange}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                type=\"number\"\r\n                margin=\"none\"\r\n                label=\"Exchange\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                required\r\n                disabled={operation === DIVIDEND}\r\n                value={shares}\r\n                onChange={(e) => setShares(e.target.value)}\r\n                // error={amountError ? true : false}\r\n                // helperText={amountError}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                type=\"number\"\r\n                margin=\"none\"\r\n                label=\"Shares\"\r\n                helperText={validationError.shares.msg}\r\n                error={validationError.shares.status}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                required\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                // error={amountError ? true : false}\r\n                // helperText={amountError}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                type=\"number\"\r\n                margin=\"none\"\r\n                label={operation === DIVIDEND ? \"Amount\" : \"Price per share\"}\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\r\n                }}\r\n                helperText={validationError.value.msg}\r\n                error={validationError.value.status}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                required\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                // error={amountError ? true : false}\r\n                // helperText={amountError}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                type=\"date\"\r\n                margin=\"none\"\r\n                label=\"Date\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                helperText={validationError.date.msg}\r\n                error={validationError.date.status}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Divider, Paper, withStyles } from \"@material-ui/core\";\r\nimport SubscriptionTable from \"./SubscriptionTable2\";\r\nimport PortifolioChart from \"./PortifolioChart\";\r\nimport SubscriptionInfo from \"./SubscriptionInfo\";\r\nimport AddOperadionDialog from \"./AddOperationDialog\";\r\nimport { registerOperation } from '../../../shared/functions/requests'\r\nimport { getAllOperations, deleteOperation,editOperation } from '../../../shared/functions/requests'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst styles = {\r\n  divider: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.26)\"\r\n  }\r\n};\r\n\r\nfunction Subscription(props) {\r\n  const {\r\n    classes,\r\n    selectSubscription\r\n  } = props;\r\n  const userId = useSelector(state => state.auth.id)\r\n  const token = useSelector(state => state.auth.token)\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [editTransaction, setEditTransaction] = useState({});\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [operationOpen, setOperationOpen] = useState(false);\r\n  useEffect(selectSubscription, [selectSubscription]);\r\n\r\n  const openOperationDialog = () => {\r\n\r\n    setOperationOpen(true)\r\n  }\r\n  const openEditTransaction = (transaction) => {\r\n    if (transaction) {\r\n      setEditTransaction(transaction)\r\n      setOperationOpen(true)\r\n\r\n    }\r\n  }\r\n  const saveOperation = (form) => {\r\n    registerOperation({ ...form, userId: userId }, token)\r\n      .then(() => {\r\n        refreshOperations()\r\n        setOperationOpen(false)\r\n\r\n      })\r\n      .catch((e)=>{\r\n        if(e.response.status === 428){\r\n          enqueueSnackbar('Not enought Balance to operate', { variant: 'error' })\r\n        } else {\r\n          enqueueSnackbar('Something went wrong', { variant: 'error' })\r\n\r\n        }\r\n      })\r\n  }\r\n  const editOperation_ = (form) => {\r\n    editOperation({ ...form, userId: userId }, token)\r\n      .then(() => {\r\n        refreshOperations()\r\n      })\r\n    setOperationOpen(false)\r\n  }\r\n\r\n  const refreshOperations = useCallback(() => {\r\n    getAllOperations(userId, token)\r\n      .then(transactions => {\r\n        console.log(\"transactions\", transactions)\r\n        setTransactions(transactions)\r\n\r\n      })\r\n  }, [userId, token])\r\n\r\n  useEffect(() => {\r\n    refreshOperations()\r\n  }, [refreshOperations])\r\n\r\n  const handleDeleteOperation = (id) => {\r\n    console.log(\"Handle delete\", id)\r\n    deleteOperation(id, token)\r\n      .then(() => {\r\n        enqueueSnackbar('Operation Deleted', { variant: 'success' })\r\n        refreshOperations()\r\n      })\r\n      .catch((e) => {\r\n\r\n        enqueueSnackbar('Error - ' + e, { variant: 'error' })\r\n      }\r\n\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Paper>\r\n      <AddOperadionDialog\r\n        open={operationOpen}\r\n        closeDialog={() => setOperationOpen(false)}\r\n        saveOperation={saveOperation} \r\n        editOperation={editOperation_} \r\n        transaction={editTransaction}/>\r\n      <List disablePadding>\r\n        <SubscriptionInfo openAddBalanceDialog={openOperationDialog} />\r\n        <Divider className={classes.divider} />\r\n        <SubscriptionTable transactions={transactions} delete={handleDeleteOperation} edit={openEditTransaction}  />\r\n      </List>\r\n      <PortifolioChart/>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSubscription.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Subscription);\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Grid from \"./grid/Grid\";\r\nimport Posts from \"./posts/Posts\";\r\nimport Subscription from \"./subscription/Subscription\";\r\nimport PropsRoute from \"../../shared/components/PropsRoute\";\r\nimport useLocationBlocker from \"../../shared/functions/useLocationBlocker\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Routing(props) {\r\n  const {\r\n    classes,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    transactions,\r\n    toggleAccountActivation,\r\n    CardChart,\r\n    statistics,\r\n    targets,\r\n    setTargets,\r\n    setPosts,\r\n    isAccountActivated,\r\n    selectDashboard,\r\n    selectGrid,\r\n    selectPosts,\r\n    selectSubscription,\r\n    openAddBalanceDialog,\r\n  } = props;\r\n  useLocationBlocker();\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Switch>\r\n        <PropsRoute\r\n          path=\"/c/grid\"\r\n          component={Grid}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          selectGrid={selectGrid}\r\n        />\r\n        <PropsRoute\r\n          path=\"/c/posts\"\r\n          component={Posts}\r\n          EmojiTextArea={EmojiTextArea}\r\n          ImageCropper={ImageCropper}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          posts={posts}\r\n          setPosts={setPosts}\r\n          selectPosts={selectPosts}\r\n        />\r\n        <PropsRoute\r\n          path=\"/c/subscription\"\r\n          component={Subscription}\r\n          transactions={transactions}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n        />\r\n        <PropsRoute\r\n          path=\"\"\r\n          component={Dashboard}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          CardChart={CardChart}\r\n          statistics={statistics}\r\n          targets={targets}\r\n          setTargets={setTargets}\r\n          isAccountActivated={isAccountActivated}\r\n          selectDashboard={selectDashboard}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRouting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  setTargets: PropTypes.func.isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n  selectGrid: PropTypes.func.isRequired,\r\n  selectPosts: PropTypes.func.isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport formatDistance from \"date-fns/formatDistance\";\r\n\r\nfunction MessageListItem(props) {\r\n  const { message, divider } = props;\r\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\r\n\r\n  const handleError = useCallback(() => {\r\n    setHasErrorOccurred(true);\r\n  }, [setHasErrorOccurred]);\r\n\r\n  return (\r\n    <ListItem divider={divider}>\r\n      <ListItemAvatar>\r\n        {hasErrorOccurred ? (\r\n          <ErrorIcon color=\"secondary\" />\r\n        ) : (\r\n          <Avatar\r\n            src={hasErrorOccurred ? null : message.src}\r\n            onError={handleError}\r\n          />\r\n        )}\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={message.text}\r\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nMessageListItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  divider: PropTypes.bool,\r\n};\r\n\r\nexport default MessageListItem;\r\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  AppBar,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport MessageListItem from \"./MessageListItem\";\r\n\r\nconst styles = (theme) => ({\r\n  tabContainer: {\r\n    overflowY: \"auto\",\r\n    maxHeight: 350,\r\n  },\r\n  popoverPaper: {\r\n    width: \"100%\",\r\n    maxWidth: 350,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 270,\r\n    },\r\n  },\r\n  divider: {\r\n    marginTop: -2,\r\n  },\r\n  noShadow: {\r\n    boxShadow: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction MessagePopperButton(props) {\r\n  const { classes, messages } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const handleClickAway = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleClick}\r\n        buttonRef={anchorEl}\r\n        aria-label=\"Open Messages\"\r\n        aria-describedby={id}\r\n        color=\"primary\"\r\n      >\r\n        <MessageIcon />\r\n      </IconButton>\r\n      <Popover\r\n        disableScrollLock\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        classes={{ paper: classes.popoverPaper }}\r\n        onClose={handleClickAway}\r\n      >\r\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\r\n          <Box pt={1} pl={2} pb={1} pr={1}>\r\n            <Typography variant=\"subtitle1\">Messages</Typography>\r\n          </Box>\r\n          <Divider className={classes.divider} />\r\n        </AppBar>\r\n        <List dense className={classes.tabContainer}>\r\n          {messages.length === 0 ? (\r\n            <ListItem>\r\n              <ListItemText>\r\n                You haven&apos;t received any messages yet.\r\n              </ListItemText>\r\n            </ListItem>\r\n          ) : (\r\n            messages.map((element, index) => (\r\n              <MessageListItem\r\n                key={index}\r\n                message={element}\r\n                divider={index !== messages.length - 1}\r\n              />\r\n            ))\r\n          )}\r\n        </List>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMessagePopperButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  Toolbar,\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    minWidth: drawerWidth\r\n  }\r\n};\r\n\r\nfunction SideDrawer(props) {\r\n  const { classes, onClose, open } = props;\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} variant=\"temporary\" onClose={onClose}>\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <Box\r\n          pl={3}\r\n          pr={3}\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h6\">A Sidedrawer</Typography>\r\n          <IconButton\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            aria-label=\"Close Sidedrawer\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SideDrawer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { OutlinedInput, withStyles } from \"@material-ui/core\";\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = {\r\n  input: { padding: \"0px 9px\", cursor: \"pointer\" },\r\n  outlinedInput: {\r\n    width: 90,\r\n    height: 40,\r\n    cursor: \"pointer\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction Balance(props) {\r\n  const { balance, classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <OutlinedInput\r\n        value={balance === null ? \"\" : currencyPrettyPrint(balance)}\r\n        className={classes.outlinedInput}\r\n        classes={{ input: classes.input }}\r\n        readOnly\r\n        labelWidth={0}\r\n        onClick={openAddBalanceDialog}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Balance);\r\n","import {  createSlice } from '@reduxjs/toolkit';\r\n\r\n// import { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n  status: 'idle',\r\n  token: undefined,\r\n  user: ''\r\n};\r\n\r\nexport const loginSlice = createSlice({\r\n  name: 'grid',\r\n  initialState,\r\n  reducers: {\r\n    setStatus: (state, action) => {\r\n      state.status = action.payload\r\n    },\r\n    setUser: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    setToken: (state, action) => {\r\n      state.token = action.payload\r\n    },\r\n    removeToken: (state) => {\r\n        state.token = undefined\r\n      }\r\n  },\r\n\r\n});\r\n\r\nexport const { setStatus, setUser,setToken,removeToken } = loginSlice.actions;\r\n\r\nexport const selectStatus = (state) => state.grid.status;\r\nexport const selectUser = (state) => state.grid.user;\r\nexport const selectToken = (state) => state.grid.token;\r\n\r\nexport default loginSlice.reducer;\r\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Hidden,\r\n  Tooltip,\r\n  Box,\r\n  withStyles,\r\n  isWidthUp,\r\n  withWidth,\r\n} from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport MessagePopperButton from \"./MessagePopperButton\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Balance from \"./Balance\";\r\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\r\nimport { removeToken } from '../../../logged_out/components/register_login/loginSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport Avatar from 'avataaars'\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    boxShadow: theme.shadows[6],\r\n    backgroundColor: theme.palette.background.paper,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  appBarToolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4),\r\n    },\r\n  },\r\n  accountAvatar: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: theme.spacing(1.5),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    height: \"100%vh\",\r\n    whiteSpace: \"nowrap\",\r\n    border: 0,\r\n    width: theme.spacing(7),\r\n    overflowX: \"hidden\",\r\n    marginTop: theme.spacing(8),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n  smBordered: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      borderRadius: \"50% !important\",\r\n    },\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary.light,\r\n  },\r\n  iconListItem: {\r\n    width: \"auto\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: 11,\r\n    paddingBottom: 11,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mobileItemSelected: {\r\n    backgroundColor: `${theme.palette.primary.main} !important`,\r\n  },\r\n  brandText: {\r\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\r\n    fontWeight: 400,\r\n  },\r\n  username: {\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  justifyCenter: {\r\n    justifyContent: \"center\",\r\n  },\r\n  permanentDrawerListItem: {\r\n    justifyContent: \"center\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction NavBar(props) {\r\n  const dispatch = useDispatch();\r\n  const avatar = useSelector(state => state.auth.avatar)\r\n  const { selectedTab, messages, classes, width, openAddBalanceDialog } = props;\r\n  // Will be use to make website more accessible by screen readers\r\n  const links = useRef([]);\r\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\r\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\r\n  const userName = useSelector(state => state.auth.name)\r\n\r\n  const openMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(true);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const closeMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(false);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const openDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(true);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const closeDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(false);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(removeToken())\r\n  }\r\n  const menuItems = [\r\n    {\r\n      link: \"/c/grid\",\r\n      name: \"Grid\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <DashboardIcon\r\n            className={\r\n              selectedTab === \"Grid\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <DashboardIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/dashboard\",\r\n      name: \"Dashboard\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <InsertChartIcon\r\n            className={\r\n              selectedTab === \"Dashboard\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <InsertChartIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/posts\",\r\n      name: \"Posts\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <ImageIcon\r\n            className={\r\n              selectedTab === \"Posts\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <ImageIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/c/subscription\",\r\n      name: \"Subscription\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <AccountBalanceIcon\r\n            className={\r\n              selectedTab === \"Subscription\"\r\n                ? classes.textPrimary\r\n                : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <AccountBalanceIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/\",\r\n      name: \"Logout\",\r\n      icon: {\r\n        desktop: (\r\n          <PowerSettingsNewIcon className=\"text-white\" fontSize=\"small\" />\r\n        ),\r\n        mobile: <PowerSettingsNewIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar className={classes.appBarToolbar}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Box mr={1}>\r\n                <IconButton\r\n                  aria-label=\"Open Navigation\"\r\n                  onClick={openMobileDrawer}\r\n                  color=\"primary\"\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n              >\r\n                Nex\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n              >\r\n                it\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            {isWidthUp(\"sm\", width) && (\r\n              <Box mr={3}>\r\n                <Balance\r\n                  balance={2573}\r\n                  openAddBalanceDialog={openAddBalanceDialog}\r\n                />\r\n              </Box>\r\n            )}\r\n            <MessagePopperButton messages={messages} />\r\n            <ListItem\r\n              disableGutters\r\n              className={classNames(classes.iconListItem, classes.smBordered)}\r\n            >\r\n              <div className={classes.accountAvatar}>\r\n                \r\n              <Avatar\r\n                avatarStyle='Circle'\r\n                style={{width: '35px', height: '35px'}}\r\n                {...avatar}\r\n              />\r\n              </div>\r\n              {isWidthUp(\"sm\", width) && (\r\n                <ListItemText\r\n                  className={classes.username}\r\n                  primary={\r\n                    <Typography color=\"textPrimary\">{userName}</Typography>\r\n                  }\r\n                />\r\n              )}\r\n            </ListItem>\r\n          </Box>\r\n          <IconButton\r\n            onClick={openDrawer}\r\n            color=\"primary\"\r\n            aria-label=\"Open Sidedrawer\"\r\n          >\r\n            <SupervisorAccountIcon />\r\n          </IconButton>\r\n          <SideDrawer open={isSideDrawerOpen} onClose={closeDrawer} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden xsDown>\r\n        <Drawer //  both drawers can be combined into one for performance\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          open={false}\r\n        >\r\n          <List>\r\n            {menuItems.map((element, index) => (\r\n              <Link\r\n                to={element.link}\r\n                className={classes.menuLink}\r\n                onClick={element.onClick}\r\n                key={index}\r\n                ref={(node) => {\r\n                  links.current[index] = node;\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={element.name}\r\n                  placement=\"right\"\r\n                  key={element.name}\r\n                >\r\n                  <ListItem\r\n                    selected={selectedTab === element.name}\r\n                    button\r\n                    divider={index !== menuItems.length - 1}\r\n                    className={classes.permanentDrawerListItem}\r\n                    onClick={() => {\r\n                      handleLogout();\r\n                    }}\r\n                    aria-label={\r\n                      element.name === \"Logout\"\r\n                        ? \"Logout\"\r\n                        : `Go to ${element.name}`\r\n                    }\r\n                  >\r\n                    <ListItemIcon className={classes.justifyCenter}>\r\n                      {element.icon.desktop}\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                </Tooltip>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </Hidden>\r\n      <NavigationDrawer\r\n        menuItems={menuItems.map((element) => ({\r\n          link: element.link,\r\n          name: element.name,\r\n          icon: element.icon.mobile,\r\n          onClick: element.onClick,\r\n        }))}\r\n        anchor=\"left\"\r\n        open={isMobileOpen}\r\n        selectedItem={selectedTab}\r\n        onClose={closeMobileDrawer}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(NavBar));\r\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nfunction ConsecutiveSnackbars(props) {\r\n  const { classes, getPushMessageFromChild } = props;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState({});\r\n  const queue = useRef([]);\r\n\r\n  const processQueue = useCallback(() => {\r\n    if (queue.current.length > 0) {\r\n      setMessageInfo(queue.current.shift());\r\n      setIsOpen(true);\r\n    }\r\n  }, [setMessageInfo, setIsOpen, queue]);\r\n\r\n  const handleClose = useCallback((_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const pushMessage = useCallback(message => {\r\n    queue.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n    if (isOpen) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setIsOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  }, [queue, isOpen, setIsOpen, processQueue]);\r\n\r\n  useEffect(() => {\r\n    getPushMessageFromChild(pushMessage);\r\n  }, [getPushMessageFromChild, pushMessage]);\r\n\r\n  return (\r\n    <Snackbar\r\n      disableWindowBlurListener\r\n      key={messageInfo.key}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={isOpen}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      onExited={processQueue}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root,\r\n        },\r\n      }}\r\n      message={\r\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\r\n      }\r\n    />\r\n  );\r\n\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n  getPushMessageFromChild: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\r\n","const data = [\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\r\n    name: \"Markus\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\r\n    name: \"David\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\r\n    name: \"Arold\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\r\n    name: \"Joanic\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\r\n    name: \"Sophia\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\r\n    name: \"Aaron\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\r\n    name: \"Steven\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\r\n    name: \"Felix\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\r\n    name: \"Vivien\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\r\n    name: \"Leonie\",\r\n  },\r\n];\r\n\r\nexport default data;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction LazyLoadAddBalanceDialog(props) {\r\n  const { open, onClose, onSuccess } = props;\r\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\r\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && !hasFetchedAddBalanceDialog) {\r\n      setHasFetchedAddBlanceDialog(true);\r\n      import(\"./AddBalanceDialog\").then(Component => {\r\n        setAddBalanceDialog(() => Component.default);\r\n      });\r\n    }\r\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {AddBalanceDialog && (\r\n        <AddBalanceDialog\r\n          open={open}\r\n          onClose={onClose}\r\n          onSuccess={onSuccess}\r\n        ></AddBalanceDialog>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\nLazyLoadAddBalanceDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LazyLoadAddBalanceDialog;\r\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Routing from \"./Routing\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\r\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\r\nimport persons from \"../dummy_data/persons\";\r\nimport LazyLoadAddBalanceDialog from \"./subscription/LazyLoadAddBalanceDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    marginLeft: theme.spacing(9),\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n});\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [selectedTab, setSelectedTab] = useState(null);\r\n  const [CardChart, setCardChart] = useState(null);\r\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\r\n  const [EmojiTextArea, setEmojiTextArea] = useState(null);\r\n  const [hasFetchedEmojiTextArea, setHasFetchedEmojiTextArea] = useState(false);\r\n  const [ImageCropper, setImageCropper] = useState(null);\r\n  const [hasFetchedImageCropper, setHasFetchedImageCropper] = useState(false);\r\n  const [Dropzone, setDropzone] = useState(null);\r\n  const [hasFetchedDropzone, setHasFetchedDropzone] = useState(false);\r\n  const [DateTimePicker, setDateTimePicker] = useState(null);\r\n  const [hasFetchedDateTimePicker, setHasFetchedDateTimePicker] = useState(\r\n    false\r\n  );\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [statistics, setStatistics] = useState({ views: [], profit: [] });\r\n  const [posts, setPosts] = useState([]);\r\n  const [targets, setTargets] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isAccountActivated, setIsAccountActivated] = useState(false);\r\n  const [isAddBalanceDialogOpen, setIsAddBalanceDialogOpen] = useState(false);\r\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\r\n\r\n  const fetchRandomTargets = useCallback(() => {\r\n    const targets = [];\r\n    for (let i = 0; i < 35; i += 1) {\r\n      const randomPerson = persons[Math.floor(Math.random() * persons.length)];\r\n      const target = {\r\n        id: i,\r\n        number1: Math.floor(Math.random() * 251),\r\n        number2: Math.floor(Math.random() * 251),\r\n        number3: Math.floor(Math.random() * 251),\r\n        number4: Math.floor(Math.random() * 251),\r\n        name: randomPerson.name,\r\n        profilePicUrl: randomPerson.src,\r\n        isActivated: Math.round(Math.random()) ? true : false,\r\n      };\r\n      targets.push(target);\r\n    }\r\n    setTargets(targets);\r\n  }, [setTargets]);\r\n\r\n  const openAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(true);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const closeAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const onPaymentSuccess = useCallback(() => {\r\n    pushMessageToSnackbar({\r\n      text: \"Your balance has been updated.\",\r\n    });\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [pushMessageToSnackbar, setIsAddBalanceDialogOpen]);\r\n\r\n  const fetchRandomStatistics = useCallback(() => {\r\n    const statistics = { profit: [], views: [] };\r\n    const iterations = 300;\r\n    const oneYearSeconds = 60 * 60 * 24 * 365;\r\n    let curProfit = Math.round(3000 + Math.random() * 1000);\r\n    let curViews = Math.round(3000 + Math.random() * 1000);\r\n    let curUnix = Math.round(new Date().getTime() / 1000) - oneYearSeconds;\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      curUnix += Math.round(oneYearSeconds / iterations);\r\n      curProfit += Math.round((Math.random() * 2 - 1) * 10);\r\n      curViews += Math.round((Math.random() * 2 - 1) * 10);\r\n      statistics.profit.push({\r\n        value: curProfit,\r\n        timestamp: curUnix,\r\n      });\r\n      statistics.views.push({\r\n        value: curViews,\r\n        timestamp: curUnix,\r\n      });\r\n    }\r\n    setStatistics(statistics);\r\n  }, [setStatistics]);\r\n\r\n  const fetchRandomTransactions = useCallback(() => {\r\n    const transactions = [];\r\n    const iterations = 32;\r\n    const oneMonthSeconds = Math.round(60 * 60 * 24 * 30.5);\r\n    const transactionTemplates = [\r\n      {\r\n        description: \"Starter subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -1499,\r\n      },\r\n      {\r\n        description: \"Premium subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -2999,\r\n      },\r\n      {\r\n        description: \"Business subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -4999,\r\n      },\r\n      {\r\n        description: \"Tycoon subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -9999,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 2000,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 5000,\r\n      },\r\n    ];\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneMonthSeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const randomTransactionTemplate =\r\n        transactionTemplates[\r\n          Math.floor(Math.random() * transactionTemplates.length)\r\n        ];\r\n      const transaction = {\r\n        id: i,\r\n        description: randomTransactionTemplate.description,\r\n        balanceChange: randomTransactionTemplate.balanceChange,\r\n        paidUntil: curUnix + oneMonthSeconds,\r\n        timestamp: curUnix,\r\n      };\r\n      curUnix += oneMonthSeconds;\r\n      transactions.push(transaction);\r\n    }\r\n    transactions.reverse();\r\n    setTransactions(transactions);\r\n  }, [setTransactions]);\r\n\r\n  const fetchRandomMessages = useCallback(() => {\r\n    shuffle(persons);\r\n    const messages = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const message = {\r\n        id: i,\r\n        src: person.src,\r\n        date: curUnix,\r\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      messages.push(message);\r\n    }\r\n    messages.reverse();\r\n    setMessages(messages);\r\n  }, [setMessages]);\r\n\r\n  const fetchRandomPosts = useCallback(() => {\r\n    shuffle(persons);\r\n    const posts = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const post = {\r\n        id: i,\r\n        src: person.src,\r\n        timestamp: curUnix,\r\n        name: person.name,\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      posts.push(post);\r\n    }\r\n    posts.reverse();\r\n    setPosts(posts);\r\n  }, [setPosts]);\r\n\r\n  const toggleAccountActivation = useCallback(() => {\r\n    if (pushMessageToSnackbar) {\r\n      if (isAccountActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now deactivated.\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now activated.\",\r\n        });\r\n      }\r\n    }\r\n    setIsAccountActivated(!isAccountActivated);\r\n  }, [pushMessageToSnackbar, isAccountActivated, setIsAccountActivated]);\r\n\r\n  const selectDashboard = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"Nexit - Dashboard\";\r\n    setSelectedTab(\"Dashboard\");\r\n    if (!hasFetchedCardChart) {\r\n      setHasFetchedCardChart(true);\r\n      import(\"../../shared/components/CardChart\").then((Component) => {\r\n        setCardChart(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setCardChart,\r\n    hasFetchedCardChart,\r\n    setHasFetchedCardChart,\r\n  ]);\r\n  \r\n  const selectGrid = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"Nexit - Grid\";\r\n    setSelectedTab(\"Grid\");\r\n  }, []);\r\n\r\n  const selectPosts = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"Nexit - Posts\";\r\n    setSelectedTab(\"Posts\");\r\n    if (!hasFetchedEmojiTextArea) {\r\n      setHasFetchedEmojiTextArea(true);\r\n      import(\"../../shared/components/EmojiTextArea\").then((Component) => {\r\n        setEmojiTextArea(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedImageCropper) {\r\n      setHasFetchedImageCropper(true);\r\n      import(\"../../shared/components/ImageCropper\").then((Component) => {\r\n        setImageCropper(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDropzone) {\r\n      setHasFetchedDropzone(true);\r\n      import(\"../../shared/components/Dropzone\").then((Component) => {\r\n        setDropzone(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDateTimePicker) {\r\n      setHasFetchedDateTimePicker(true);\r\n      import(\"../../shared/components/DateTimePicker\").then((Component) => {\r\n        setDateTimePicker(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setEmojiTextArea,\r\n    setImageCropper,\r\n    setDropzone,\r\n    setDateTimePicker,\r\n    hasFetchedEmojiTextArea,\r\n    setHasFetchedEmojiTextArea,\r\n    hasFetchedImageCropper,\r\n    setHasFetchedImageCropper,\r\n    hasFetchedDropzone,\r\n    setHasFetchedDropzone,\r\n    hasFetchedDateTimePicker,\r\n    setHasFetchedDateTimePicker,\r\n  ]);\r\n\r\n  const selectSubscription = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"Nexit - Subscription\";\r\n    setSelectedTab(\"Subscription\");\r\n  }, [setSelectedTab]);\r\n\r\n  const getPushMessageFromChild = useCallback(\r\n    (pushMessage) => {\r\n      setPushMessageToSnackbar(() => pushMessage);\r\n    },\r\n    [setPushMessageToSnackbar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchRandomTargets();\r\n    fetchRandomStatistics();\r\n    fetchRandomTransactions();\r\n    fetchRandomMessages();\r\n    fetchRandomPosts();\r\n  }, [\r\n    fetchRandomTargets,\r\n    fetchRandomStatistics,\r\n    fetchRandomTransactions,\r\n    fetchRandomMessages,\r\n    fetchRandomPosts,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LazyLoadAddBalanceDialog\r\n        open={isAddBalanceDialogOpen}\r\n        onClose={closeAddBalanceDialog}\r\n        onSuccess={onPaymentSuccess}\r\n      />\r\n      <NavBar\r\n        selectedTab={selectedTab}\r\n        messages={messages}\r\n        openAddBalanceDialog={openAddBalanceDialog}\r\n      />\r\n      <ConsecutiveSnackbarMessages\r\n        getPushMessageFromChild={getPushMessageFromChild}\r\n      />\r\n      <main className={classNames(classes.main)}>\r\n        <Routing\r\n          isAccountActivated={isAccountActivated}\r\n          ImageCropper={ImageCropper}\r\n          EmojiTextArea={EmojiTextArea}\r\n          CardChart={CardChart}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          transactions={transactions}\r\n          statistics={statistics}\r\n          posts={posts}\r\n          targets={targets}\r\n          selectDashboard={selectDashboard}\r\n          selectGrid={selectGrid}\r\n          selectPosts={selectPosts}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n          setTargets={setTargets}\r\n          setPosts={setPosts}\r\n        />\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Main));\r\n"],"sourceRoot":""}